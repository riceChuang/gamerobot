// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: Game_HHDZ.proto

package netproto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type HHDZ_GameMessageClassID int32

const (
	HHDZ_GameMessageClassID_HHDZSettingID         HHDZ_GameMessageClassID = 10001 //设置相关 S2C
	HHDZ_GameMessageClassID_HHDZStateID           HHDZ_GameMessageClassID = 10002 //阶段ID S2C
	HHDZ_GameMessageClassID_HHDZBetID             HHDZ_GameMessageClassID = 10003 //下注ID C2S
	HHDZ_GameMessageClassID_HHDZBroadCastBetID    HHDZ_GameMessageClassID = 10004 //广播下注 S2C
	HHDZ_GameMessageClassID_HHDZGameResultPokerID HHDZ_GameMessageClassID = 10005 //游戏结果扑克 S2C
	HHDZ_GameMessageClassID_HHDZGameSceneID       HHDZ_GameMessageClassID = 10006 //游戏场景 断线重连
	HHDZ_GameMessageClassID_HHDZGameResultWinID   HHDZ_GameMessageClassID = 10007 //游戏结果赢钱 S2C
	HHDZ_GameMessageClassID_HHDZBetInfoID         HHDZ_GameMessageClassID = 10008 //用户断线重连已下注的消息
	HHDZ_GameMessageClassID_HHDZBetRetID          HHDZ_GameMessageClassID = 10009 //下注结果 S2C
	HHDZ_GameMessageClassID_HHDZResultCardListID  HHDZ_GameMessageClassID = 10010 //前20次开牌结果
	HHDZ_GameMessageClassID_HHDZRoundID           HHDZ_GameMessageClassID = 10011 //本局局數
	HHDZ_GameMessageClassID_HHDZGameNoInfoID      HHDZ_GameMessageClassID = 10012 //賽局編號
	HHDZ_GameMessageClassID_HHDZRichestListID     HHDZ_GameMessageClassID = 10013 //大富豪列表的消息
)

// Enum value maps for HHDZ_GameMessageClassID.
var (
	HHDZ_GameMessageClassID_name = map[int32]string{
		10001: "HHDZSettingID",
		10002: "HHDZStateID",
		10003: "HHDZBetID",
		10004: "HHDZBroadCastBetID",
		10005: "HHDZGameResultPokerID",
		10006: "HHDZGameSceneID",
		10007: "HHDZGameResultWinID",
		10008: "HHDZBetInfoID",
		10009: "HHDZBetRetID",
		10010: "HHDZResultCardListID",
		10011: "HHDZRoundID",
		10012: "HHDZGameNoInfoID",
		10013: "HHDZRichestListID",
	}
	HHDZ_GameMessageClassID_value = map[string]int32{
		"HHDZSettingID":         10001,
		"HHDZStateID":           10002,
		"HHDZBetID":             10003,
		"HHDZBroadCastBetID":    10004,
		"HHDZGameResultPokerID": 10005,
		"HHDZGameSceneID":       10006,
		"HHDZGameResultWinID":   10007,
		"HHDZBetInfoID":         10008,
		"HHDZBetRetID":          10009,
		"HHDZResultCardListID":  10010,
		"HHDZRoundID":           10011,
		"HHDZGameNoInfoID":      10012,
		"HHDZRichestListID":     10013,
	}
)

func (x HHDZ_GameMessageClassID) Enum() *HHDZ_GameMessageClassID {
	p := new(HHDZ_GameMessageClassID)
	*p = x
	return p
}

func (x HHDZ_GameMessageClassID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HHDZ_GameMessageClassID) Descriptor() protoreflect.EnumDescriptor {
	return file_Game_HHDZ_proto_enumTypes[0].Descriptor()
}

func (HHDZ_GameMessageClassID) Type() protoreflect.EnumType {
	return &file_Game_HHDZ_proto_enumTypes[0]
}

func (x HHDZ_GameMessageClassID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *HHDZ_GameMessageClassID) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = HHDZ_GameMessageClassID(num)
	return nil
}

// Deprecated: Use HHDZ_GameMessageClassID.Descriptor instead.
func (HHDZ_GameMessageClassID) EnumDescriptor() ([]byte, []int) {
	return file_Game_HHDZ_proto_rawDescGZIP(), []int{0}
}

var File_Game_HHDZ_proto protoreflect.FileDescriptor

var file_Game_HHDZ_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x47, 0x61, 0x6d, 0x65, 0x5f, 0x48, 0x48, 0x44, 0x5a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x08, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2a, 0xb7, 0x02, 0x0a, 0x17,
	0x48, 0x48, 0x44, 0x5a, 0x5f, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x0d, 0x48, 0x48, 0x44, 0x5a, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x44, 0x10, 0x91, 0x4e, 0x12, 0x10, 0x0a, 0x0b, 0x48,
	0x48, 0x44, 0x5a, 0x53, 0x74, 0x61, 0x74, 0x65, 0x49, 0x44, 0x10, 0x92, 0x4e, 0x12, 0x0e, 0x0a,
	0x09, 0x48, 0x48, 0x44, 0x5a, 0x42, 0x65, 0x74, 0x49, 0x44, 0x10, 0x93, 0x4e, 0x12, 0x17, 0x0a,
	0x12, 0x48, 0x48, 0x44, 0x5a, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x42, 0x65,
	0x74, 0x49, 0x44, 0x10, 0x94, 0x4e, 0x12, 0x1a, 0x0a, 0x15, 0x48, 0x48, 0x44, 0x5a, 0x47, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x50, 0x6f, 0x6b, 0x65, 0x72, 0x49, 0x44, 0x10,
	0x95, 0x4e, 0x12, 0x14, 0x0a, 0x0f, 0x48, 0x48, 0x44, 0x5a, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x63,
	0x65, 0x6e, 0x65, 0x49, 0x44, 0x10, 0x96, 0x4e, 0x12, 0x18, 0x0a, 0x13, 0x48, 0x48, 0x44, 0x5a,
	0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x57, 0x69, 0x6e, 0x49, 0x44, 0x10,
	0x97, 0x4e, 0x12, 0x12, 0x0a, 0x0d, 0x48, 0x48, 0x44, 0x5a, 0x42, 0x65, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x49, 0x44, 0x10, 0x98, 0x4e, 0x12, 0x11, 0x0a, 0x0c, 0x48, 0x48, 0x44, 0x5a, 0x42, 0x65,
	0x74, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10, 0x99, 0x4e, 0x12, 0x19, 0x0a, 0x14, 0x48, 0x48, 0x44,
	0x5a, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x49,
	0x44, 0x10, 0x9a, 0x4e, 0x12, 0x10, 0x0a, 0x0b, 0x48, 0x48, 0x44, 0x5a, 0x52, 0x6f, 0x75, 0x6e,
	0x64, 0x49, 0x44, 0x10, 0x9b, 0x4e, 0x12, 0x15, 0x0a, 0x10, 0x48, 0x48, 0x44, 0x5a, 0x47, 0x61,
	0x6d, 0x65, 0x4e, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x44, 0x10, 0x9c, 0x4e, 0x12, 0x16, 0x0a,
	0x11, 0x48, 0x48, 0x44, 0x5a, 0x52, 0x69, 0x63, 0x68, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x44, 0x10, 0x9d, 0x4e, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x6e, 0x65, 0x74, 0x70, 0x72,
	0x6f, 0x74, 0x6f,
}

var (
	file_Game_HHDZ_proto_rawDescOnce sync.Once
	file_Game_HHDZ_proto_rawDescData = file_Game_HHDZ_proto_rawDesc
)

func file_Game_HHDZ_proto_rawDescGZIP() []byte {
	file_Game_HHDZ_proto_rawDescOnce.Do(func() {
		file_Game_HHDZ_proto_rawDescData = protoimpl.X.CompressGZIP(file_Game_HHDZ_proto_rawDescData)
	})
	return file_Game_HHDZ_proto_rawDescData
}

var file_Game_HHDZ_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_Game_HHDZ_proto_goTypes = []interface{}{
	(HHDZ_GameMessageClassID)(0), // 0: netproto.HHDZ_GameMessageClassID
}
var file_Game_HHDZ_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_Game_HHDZ_proto_init() }
func file_Game_HHDZ_proto_init() {
	if File_Game_HHDZ_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Game_HHDZ_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Game_HHDZ_proto_goTypes,
		DependencyIndexes: file_Game_HHDZ_proto_depIdxs,
		EnumInfos:         file_Game_HHDZ_proto_enumTypes,
	}.Build()
	File_Game_HHDZ_proto = out.File
	file_Game_HHDZ_proto_rawDesc = nil
	file_Game_HHDZ_proto_goTypes = nil
	file_Game_HHDZ_proto_depIdxs = nil
}
