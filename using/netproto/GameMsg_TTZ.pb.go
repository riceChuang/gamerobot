//==================================================================
//文件名： GameMsg_TTZ.proto
//作者：
//日期：
//说明：   推筒子游戏客户服务器通信协议
//修改记录：
//==================================================================

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: GameMsg_TTZ.proto

package netproto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//服务端消息：用户断线重连数据结构
type TTZ_UserInfoArr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrOptSeatno *int32 `protobuf:"varint,1,req,name=CurrOptSeatno" json:"CurrOptSeatno,omitempty"`
}

func (x *TTZ_UserInfoArr) Reset() {
	*x = TTZ_UserInfoArr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_TTZ_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TTZ_UserInfoArr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TTZ_UserInfoArr) ProtoMessage() {}

func (x *TTZ_UserInfoArr) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_TTZ_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TTZ_UserInfoArr.ProtoReflect.Descriptor instead.
func (*TTZ_UserInfoArr) Descriptor() ([]byte, []int) {
	return file_GameMsg_TTZ_proto_rawDescGZIP(), []int{0}
}

func (x *TTZ_UserInfoArr) GetCurrOptSeatno() int32 {
	if x != nil && x.CurrOptSeatno != nil {
		return *x.CurrOptSeatno
	}
	return 0
}

//客户端操作。ActionType：下底1，押注2，亮牌3
type TTZ_ActionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionType  *int32 `protobuf:"varint,1,req,name=ActionType" json:"ActionType,omitempty"`   //操作类型
	ActionValue *int32 `protobuf:"varint,2,req,name=ActionValue" json:"ActionValue,omitempty"` //操作值,无操作值填0
}

func (x *TTZ_ActionInfo) Reset() {
	*x = TTZ_ActionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_TTZ_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TTZ_ActionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TTZ_ActionInfo) ProtoMessage() {}

func (x *TTZ_ActionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_TTZ_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TTZ_ActionInfo.ProtoReflect.Descriptor instead.
func (*TTZ_ActionInfo) Descriptor() ([]byte, []int) {
	return file_GameMsg_TTZ_proto_rawDescGZIP(), []int{1}
}

func (x *TTZ_ActionInfo) GetActionType() int32 {
	if x != nil && x.ActionType != nil {
		return *x.ActionType
	}
	return 0
}

func (x *TTZ_ActionInfo) GetActionValue() int32 {
	if x != nil && x.ActionValue != nil {
		return *x.ActionValue
	}
	return 0
}

//服务器回复（客户端操作）
type TTZ_BroadCastActionResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionSeatNo *int32 `protobuf:"varint,1,req,name=ActionSeatNo" json:"ActionSeatNo,omitempty"` //操作座位号
	ActionType   *int32 `protobuf:"varint,2,req,name=ActionType" json:"ActionType,omitempty"`     //操作类型
	ActionValue  *int32 `protobuf:"varint,3,req,name=ActionValue" json:"ActionValue,omitempty"`   //操作值
}

func (x *TTZ_BroadCastActionResult) Reset() {
	*x = TTZ_BroadCastActionResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_TTZ_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TTZ_BroadCastActionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TTZ_BroadCastActionResult) ProtoMessage() {}

func (x *TTZ_BroadCastActionResult) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_TTZ_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TTZ_BroadCastActionResult.ProtoReflect.Descriptor instead.
func (*TTZ_BroadCastActionResult) Descriptor() ([]byte, []int) {
	return file_GameMsg_TTZ_proto_rawDescGZIP(), []int{2}
}

func (x *TTZ_BroadCastActionResult) GetActionSeatNo() int32 {
	if x != nil && x.ActionSeatNo != nil {
		return *x.ActionSeatNo
	}
	return 0
}

func (x *TTZ_BroadCastActionResult) GetActionType() int32 {
	if x != nil && x.ActionType != nil {
		return *x.ActionType
	}
	return 0
}

func (x *TTZ_BroadCastActionResult) GetActionValue() int32 {
	if x != nil && x.ActionValue != nil {
		return *x.ActionValue
	}
	return 0
}

//庄家信息
type TTZ_BroadCastRobResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ButtonSeatNo *int32 `protobuf:"varint,1,req,name=ButtonSeatNo" json:"ButtonSeatNo,omitempty"` //庄家座位号
	ActionValue  *int32 `protobuf:"varint,2,req,name=ActionValue" json:"ActionValue,omitempty"`   //抢庄值操作值
}

func (x *TTZ_BroadCastRobResult) Reset() {
	*x = TTZ_BroadCastRobResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_TTZ_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TTZ_BroadCastRobResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TTZ_BroadCastRobResult) ProtoMessage() {}

func (x *TTZ_BroadCastRobResult) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_TTZ_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TTZ_BroadCastRobResult.ProtoReflect.Descriptor instead.
func (*TTZ_BroadCastRobResult) Descriptor() ([]byte, []int) {
	return file_GameMsg_TTZ_proto_rawDescGZIP(), []int{3}
}

func (x *TTZ_BroadCastRobResult) GetButtonSeatNo() int32 {
	if x != nil && x.ButtonSeatNo != nil {
		return *x.ButtonSeatNo
	}
	return 0
}

func (x *TTZ_BroadCastRobResult) GetActionValue() int32 {
	if x != nil && x.ActionValue != nil {
		return *x.ActionValue
	}
	return 0
}

//发牌信息
type TTZ_BroadCastDealInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatNo   *int32       `protobuf:"varint,1,req,name=SeatNo" json:"SeatNo,omitempty"`     //座位号
	CardSize *int32       `protobuf:"varint,2,req,name=CardSize" json:"CardSize,omitempty"` //发牌数量
	Cards    []*PokerCard `protobuf:"bytes,3,rep,name=Cards" json:"Cards,omitempty"`        //cards
	No       *int32       `protobuf:"varint,4,req,name=No" json:"No,omitempty"`             //序号
}

func (x *TTZ_BroadCastDealInfo) Reset() {
	*x = TTZ_BroadCastDealInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_TTZ_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TTZ_BroadCastDealInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TTZ_BroadCastDealInfo) ProtoMessage() {}

func (x *TTZ_BroadCastDealInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_TTZ_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TTZ_BroadCastDealInfo.ProtoReflect.Descriptor instead.
func (*TTZ_BroadCastDealInfo) Descriptor() ([]byte, []int) {
	return file_GameMsg_TTZ_proto_rawDescGZIP(), []int{4}
}

func (x *TTZ_BroadCastDealInfo) GetSeatNo() int32 {
	if x != nil && x.SeatNo != nil {
		return *x.SeatNo
	}
	return 0
}

func (x *TTZ_BroadCastDealInfo) GetCardSize() int32 {
	if x != nil && x.CardSize != nil {
		return *x.CardSize
	}
	return 0
}

func (x *TTZ_BroadCastDealInfo) GetCards() []*PokerCard {
	if x != nil {
		return x.Cards
	}
	return nil
}

func (x *TTZ_BroadCastDealInfo) GetNo() int32 {
	if x != nil && x.No != nil {
		return *x.No
	}
	return 0
}

//广播牌型信息
type TTZ_BroadCastUpdateCT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatNo    *int32 `protobuf:"varint,1,req,name=SeatNo" json:"SeatNo,omitempty"`       //座位号
	CardType  *int32 `protobuf:"varint,2,req,name=CardType" json:"CardType,omitempty"`   //牌型
	CardCount *int32 `protobuf:"varint,3,req,name=CardCount" json:"CardCount,omitempty"` //点数
}

func (x *TTZ_BroadCastUpdateCT) Reset() {
	*x = TTZ_BroadCastUpdateCT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_TTZ_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TTZ_BroadCastUpdateCT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TTZ_BroadCastUpdateCT) ProtoMessage() {}

func (x *TTZ_BroadCastUpdateCT) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_TTZ_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TTZ_BroadCastUpdateCT.ProtoReflect.Descriptor instead.
func (*TTZ_BroadCastUpdateCT) Descriptor() ([]byte, []int) {
	return file_GameMsg_TTZ_proto_rawDescGZIP(), []int{5}
}

func (x *TTZ_BroadCastUpdateCT) GetSeatNo() int32 {
	if x != nil && x.SeatNo != nil {
		return *x.SeatNo
	}
	return 0
}

func (x *TTZ_BroadCastUpdateCT) GetCardType() int32 {
	if x != nil && x.CardType != nil {
		return *x.CardType
	}
	return 0
}

func (x *TTZ_BroadCastUpdateCT) GetCardCount() int32 {
	if x != nil && x.CardCount != nil {
		return *x.CardCount
	}
	return 0
}

//亮牌信息
type TTZ_BroadCastLightCards struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatNo    *int32       `protobuf:"varint,1,req,name=SeatNo" json:"SeatNo,omitempty"`       //座位号
	CardType  *int32       `protobuf:"varint,2,req,name=CardType" json:"CardType,omitempty"`   //牌型
	CardCount *int32       `protobuf:"varint,3,req,name=CardCount" json:"CardCount,omitempty"` //点数
	Cards     []*PokerCard `protobuf:"bytes,4,rep,name=Cards" json:"Cards,omitempty"`          //cards
}

func (x *TTZ_BroadCastLightCards) Reset() {
	*x = TTZ_BroadCastLightCards{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_TTZ_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TTZ_BroadCastLightCards) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TTZ_BroadCastLightCards) ProtoMessage() {}

func (x *TTZ_BroadCastLightCards) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_TTZ_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TTZ_BroadCastLightCards.ProtoReflect.Descriptor instead.
func (*TTZ_BroadCastLightCards) Descriptor() ([]byte, []int) {
	return file_GameMsg_TTZ_proto_rawDescGZIP(), []int{6}
}

func (x *TTZ_BroadCastLightCards) GetSeatNo() int32 {
	if x != nil && x.SeatNo != nil {
		return *x.SeatNo
	}
	return 0
}

func (x *TTZ_BroadCastLightCards) GetCardType() int32 {
	if x != nil && x.CardType != nil {
		return *x.CardType
	}
	return 0
}

func (x *TTZ_BroadCastLightCards) GetCardCount() int32 {
	if x != nil && x.CardCount != nil {
		return *x.CardCount
	}
	return 0
}

func (x *TTZ_BroadCastLightCards) GetCards() []*PokerCard {
	if x != nil {
		return x.Cards
	}
	return nil
}

//小局结算
type TTZ_BrodCastSettleMentRound struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserScoreInfo    []*TTZ_SettleMentInfo `protobuf:"bytes,1,rep,name=UserScoreInfo" json:"UserScoreInfo,omitempty"`        //玩家和庄家比牌结果
	ButtonSeatNo     *int32                `protobuf:"varint,2,req,name=ButtonSeatNo" json:"ButtonSeatNo,omitempty"`         //庄家座位号
	ButtonTotalScore *int64                `protobuf:"varint,3,req,name=ButtonTotalScore" json:"ButtonTotalScore,omitempty"` //庄家当前赢得的总分
}

func (x *TTZ_BrodCastSettleMentRound) Reset() {
	*x = TTZ_BrodCastSettleMentRound{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_TTZ_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TTZ_BrodCastSettleMentRound) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TTZ_BrodCastSettleMentRound) ProtoMessage() {}

func (x *TTZ_BrodCastSettleMentRound) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_TTZ_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TTZ_BrodCastSettleMentRound.ProtoReflect.Descriptor instead.
func (*TTZ_BrodCastSettleMentRound) Descriptor() ([]byte, []int) {
	return file_GameMsg_TTZ_proto_rawDescGZIP(), []int{7}
}

func (x *TTZ_BrodCastSettleMentRound) GetUserScoreInfo() []*TTZ_SettleMentInfo {
	if x != nil {
		return x.UserScoreInfo
	}
	return nil
}

func (x *TTZ_BrodCastSettleMentRound) GetButtonSeatNo() int32 {
	if x != nil && x.ButtonSeatNo != nil {
		return *x.ButtonSeatNo
	}
	return 0
}

func (x *TTZ_BrodCastSettleMentRound) GetButtonTotalScore() int64 {
	if x != nil && x.ButtonTotalScore != nil {
		return *x.ButtonTotalScore
	}
	return 0
}

//玩家和庄家比牌结果
type TTZ_SettleMentInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatNo      *int32 `protobuf:"varint,1,req,name=SeatNo" json:"SeatNo,omitempty"`           //座位号,除庄家外其他玩家座位号
	Score       *int64 `protobuf:"varint,2,req,name=Score" json:"Score,omitempty"`             //闲家得分
	ButtonScore *int64 `protobuf:"varint,3,req,name=ButtonScore" json:"ButtonScore,omitempty"` //庄家得分
}

func (x *TTZ_SettleMentInfo) Reset() {
	*x = TTZ_SettleMentInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_TTZ_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TTZ_SettleMentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TTZ_SettleMentInfo) ProtoMessage() {}

func (x *TTZ_SettleMentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_TTZ_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TTZ_SettleMentInfo.ProtoReflect.Descriptor instead.
func (*TTZ_SettleMentInfo) Descriptor() ([]byte, []int) {
	return file_GameMsg_TTZ_proto_rawDescGZIP(), []int{8}
}

func (x *TTZ_SettleMentInfo) GetSeatNo() int32 {
	if x != nil && x.SeatNo != nil {
		return *x.SeatNo
	}
	return 0
}

func (x *TTZ_SettleMentInfo) GetScore() int64 {
	if x != nil && x.Score != nil {
		return *x.Score
	}
	return 0
}

func (x *TTZ_SettleMentInfo) GetButtonScore() int64 {
	if x != nil && x.ButtonScore != nil {
		return *x.ButtonScore
	}
	return 0
}

//总结算
type TTZ_BrodCastSettleMentTotal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserScoreInfo []*TTZ_SettleMentInfo `protobuf:"bytes,1,rep,name=UserScoreInfo" json:"UserScoreInfo,omitempty"` //玩家数据
}

func (x *TTZ_BrodCastSettleMentTotal) Reset() {
	*x = TTZ_BrodCastSettleMentTotal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_TTZ_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TTZ_BrodCastSettleMentTotal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TTZ_BrodCastSettleMentTotal) ProtoMessage() {}

func (x *TTZ_BrodCastSettleMentTotal) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_TTZ_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TTZ_BrodCastSettleMentTotal.ProtoReflect.Descriptor instead.
func (*TTZ_BrodCastSettleMentTotal) Descriptor() ([]byte, []int) {
	return file_GameMsg_TTZ_proto_rawDescGZIP(), []int{9}
}

func (x *TTZ_BrodCastSettleMentTotal) GetUserScoreInfo() []*TTZ_SettleMentInfo {
	if x != nil {
		return x.UserScoreInfo
	}
	return nil
}

//错误信息
type TTZ_ErrorMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorType *int32  `protobuf:"varint,1,req,name=ErrorType" json:"ErrorType,omitempty"` //错误类型，-1操作错误
	ErrorInfo *string `protobuf:"bytes,2,req,name=ErrorInfo" json:"ErrorInfo,omitempty"`  //错误信息
}

func (x *TTZ_ErrorMsg) Reset() {
	*x = TTZ_ErrorMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_TTZ_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TTZ_ErrorMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TTZ_ErrorMsg) ProtoMessage() {}

func (x *TTZ_ErrorMsg) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_TTZ_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TTZ_ErrorMsg.ProtoReflect.Descriptor instead.
func (*TTZ_ErrorMsg) Descriptor() ([]byte, []int) {
	return file_GameMsg_TTZ_proto_rawDescGZIP(), []int{10}
}

func (x *TTZ_ErrorMsg) GetErrorType() int32 {
	if x != nil && x.ErrorType != nil {
		return *x.ErrorType
	}
	return 0
}

func (x *TTZ_ErrorMsg) GetErrorInfo() string {
	if x != nil && x.ErrorInfo != nil {
		return *x.ErrorInfo
	}
	return ""
}

//游戏状态
type TTZ_BroadCastGameState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurGameState *int32 `protobuf:"varint,1,req,name=CurGameState" json:"CurGameState,omitempty"` //当前状态
	OutTime      *int32 `protobuf:"varint,2,req,name=OutTime" json:"OutTime,omitempty"`           //超时时间
}

func (x *TTZ_BroadCastGameState) Reset() {
	*x = TTZ_BroadCastGameState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_TTZ_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TTZ_BroadCastGameState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TTZ_BroadCastGameState) ProtoMessage() {}

func (x *TTZ_BroadCastGameState) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_TTZ_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TTZ_BroadCastGameState.ProtoReflect.Descriptor instead.
func (*TTZ_BroadCastGameState) Descriptor() ([]byte, []int) {
	return file_GameMsg_TTZ_proto_rawDescGZIP(), []int{11}
}

func (x *TTZ_BroadCastGameState) GetCurGameState() int32 {
	if x != nil && x.CurGameState != nil {
		return *x.CurGameState
	}
	return 0
}

func (x *TTZ_BroadCastGameState) GetOutTime() int32 {
	if x != nil && x.OutTime != nil {
		return *x.OutTime
	}
	return 0
}

//**********************************************************
//场景恢复
type TTZ_GameSence struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurGameState *int32               `protobuf:"varint,1,req,name=CurGameState" json:"CurGameState,omitempty"` //当前状态
	OutTime      *int32               `protobuf:"varint,2,req,name=OutTime" json:"OutTime,omitempty"`           //剩余超时时间
	ButtonSeatNo *int32               `protobuf:"varint,4,req,name=ButtonSeatNo" json:"ButtonSeatNo,omitempty"` //庄家座位号
	UserInfo     []*TTZ_SenceUserInfo `protobuf:"bytes,5,rep,name=UserInfo" json:"UserInfo,omitempty"`          //玩家数据
	RobRate      *int32               `protobuf:"varint,6,req,name=RobRate" json:"RobRate,omitempty"`           //抢庄倍率
	//玩家自己的数据
	MaxRobRate *int32 `protobuf:"varint,7,req,name=MaxRobRate" json:"MaxRobRate,omitempty"` //玩家最大抢庄倍数
	MaxBetRate *int32 `protobuf:"varint,8,req,name=MaxBetRate" json:"MaxBetRate,omitempty"` //玩家最大押注倍数
}

func (x *TTZ_GameSence) Reset() {
	*x = TTZ_GameSence{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_TTZ_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TTZ_GameSence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TTZ_GameSence) ProtoMessage() {}

func (x *TTZ_GameSence) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_TTZ_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TTZ_GameSence.ProtoReflect.Descriptor instead.
func (*TTZ_GameSence) Descriptor() ([]byte, []int) {
	return file_GameMsg_TTZ_proto_rawDescGZIP(), []int{12}
}

func (x *TTZ_GameSence) GetCurGameState() int32 {
	if x != nil && x.CurGameState != nil {
		return *x.CurGameState
	}
	return 0
}

func (x *TTZ_GameSence) GetOutTime() int32 {
	if x != nil && x.OutTime != nil {
		return *x.OutTime
	}
	return 0
}

func (x *TTZ_GameSence) GetButtonSeatNo() int32 {
	if x != nil && x.ButtonSeatNo != nil {
		return *x.ButtonSeatNo
	}
	return 0
}

func (x *TTZ_GameSence) GetUserInfo() []*TTZ_SenceUserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

func (x *TTZ_GameSence) GetRobRate() int32 {
	if x != nil && x.RobRate != nil {
		return *x.RobRate
	}
	return 0
}

func (x *TTZ_GameSence) GetMaxRobRate() int32 {
	if x != nil && x.MaxRobRate != nil {
		return *x.MaxRobRate
	}
	return 0
}

func (x *TTZ_GameSence) GetMaxBetRate() int32 {
	if x != nil && x.MaxBetRate != nil {
		return *x.MaxBetRate
	}
	return 0
}

type TTZ_SenceUserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatNo    *int32       `protobuf:"varint,1,req,name=SeatNo" json:"SeatNo,omitempty"`       //座位号
	CardType  *int32       `protobuf:"varint,2,req,name=CardType" json:"CardType,omitempty"`   //牌型
	CardCount *int32       `protobuf:"varint,3,req,name=CardCount" json:"CardCount,omitempty"` //点数
	Cards     []*PokerCard `protobuf:"bytes,4,rep,name=Cards" json:"Cards,omitempty"`          //cards
	BetRate   *int32       `protobuf:"varint,5,req,name=BetRate" json:"BetRate,omitempty"`     //押注倍数
	IsRob     *bool        `protobuf:"varint,6,req,name=IsRob" json:"IsRob,omitempty"`         //是否已抢庄
	IsBet     *bool        `protobuf:"varint,7,req,name=IsBet" json:"IsBet,omitempty"`         //是否已下注
	IsLight   *bool        `protobuf:"varint,8,req,name=IsLight" json:"IsLight,omitempty"`     //是否已亮牌
	RobRate   *int32       `protobuf:"varint,9,req,name=RobRate" json:"RobRate,omitempty"`     //抢庄倍数
	WinScore  *int64       `protobuf:"varint,10,req,name=WinScore" json:"WinScore,omitempty"`  //当局结算得分
}

func (x *TTZ_SenceUserInfo) Reset() {
	*x = TTZ_SenceUserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_TTZ_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TTZ_SenceUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TTZ_SenceUserInfo) ProtoMessage() {}

func (x *TTZ_SenceUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_TTZ_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TTZ_SenceUserInfo.ProtoReflect.Descriptor instead.
func (*TTZ_SenceUserInfo) Descriptor() ([]byte, []int) {
	return file_GameMsg_TTZ_proto_rawDescGZIP(), []int{13}
}

func (x *TTZ_SenceUserInfo) GetSeatNo() int32 {
	if x != nil && x.SeatNo != nil {
		return *x.SeatNo
	}
	return 0
}

func (x *TTZ_SenceUserInfo) GetCardType() int32 {
	if x != nil && x.CardType != nil {
		return *x.CardType
	}
	return 0
}

func (x *TTZ_SenceUserInfo) GetCardCount() int32 {
	if x != nil && x.CardCount != nil {
		return *x.CardCount
	}
	return 0
}

func (x *TTZ_SenceUserInfo) GetCards() []*PokerCard {
	if x != nil {
		return x.Cards
	}
	return nil
}

func (x *TTZ_SenceUserInfo) GetBetRate() int32 {
	if x != nil && x.BetRate != nil {
		return *x.BetRate
	}
	return 0
}

func (x *TTZ_SenceUserInfo) GetIsRob() bool {
	if x != nil && x.IsRob != nil {
		return *x.IsRob
	}
	return false
}

func (x *TTZ_SenceUserInfo) GetIsBet() bool {
	if x != nil && x.IsBet != nil {
		return *x.IsBet
	}
	return false
}

func (x *TTZ_SenceUserInfo) GetIsLight() bool {
	if x != nil && x.IsLight != nil {
		return *x.IsLight
	}
	return false
}

func (x *TTZ_SenceUserInfo) GetRobRate() int32 {
	if x != nil && x.RobRate != nil {
		return *x.RobRate
	}
	return 0
}

func (x *TTZ_SenceUserInfo) GetWinScore() int64 {
	if x != nil && x.WinScore != nil {
		return *x.WinScore
	}
	return 0
}

//系统配置信息
type TTZ_GameSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReadyWaitTime *int32 `protobuf:"varint,1,req,name=ReadyWaitTime" json:"ReadyWaitTime,omitempty"` //举手超时时间
	BaseScore     *int32 `protobuf:"varint,2,req,name=BaseScore" json:"BaseScore,omitempty"`         //底分
}

func (x *TTZ_GameSettings) Reset() {
	*x = TTZ_GameSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_TTZ_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TTZ_GameSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TTZ_GameSettings) ProtoMessage() {}

func (x *TTZ_GameSettings) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_TTZ_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TTZ_GameSettings.ProtoReflect.Descriptor instead.
func (*TTZ_GameSettings) Descriptor() ([]byte, []int) {
	return file_GameMsg_TTZ_proto_rawDescGZIP(), []int{14}
}

func (x *TTZ_GameSettings) GetReadyWaitTime() int32 {
	if x != nil && x.ReadyWaitTime != nil {
		return *x.ReadyWaitTime
	}
	return 0
}

func (x *TTZ_GameSettings) GetBaseScore() int32 {
	if x != nil && x.BaseScore != nil {
		return *x.BaseScore
	}
	return 0
}

//GM 测试命令
type TTZ_GMinfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []int32 `protobuf:"varint,1,rep,name=data" json:"data,omitempty"` //测试数据
}

func (x *TTZ_GMinfo) Reset() {
	*x = TTZ_GMinfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_TTZ_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TTZ_GMinfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TTZ_GMinfo) ProtoMessage() {}

func (x *TTZ_GMinfo) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_TTZ_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TTZ_GMinfo.ProtoReflect.Descriptor instead.
func (*TTZ_GMinfo) Descriptor() ([]byte, []int) {
	return file_GameMsg_TTZ_proto_rawDescGZIP(), []int{15}
}

func (x *TTZ_GMinfo) GetData() []int32 {
	if x != nil {
		return x.Data
	}
	return nil
}

type TTZ_MaxOpRate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxRate *int32 `protobuf:"varint,1,req,name=MaxRate" json:"MaxRate,omitempty"` //最大倍数
	Type    *int32 `protobuf:"varint,2,req,name=Type" json:"Type,omitempty"`       //类型，1抢庄，2押注
}

func (x *TTZ_MaxOpRate) Reset() {
	*x = TTZ_MaxOpRate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_TTZ_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TTZ_MaxOpRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TTZ_MaxOpRate) ProtoMessage() {}

func (x *TTZ_MaxOpRate) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_TTZ_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TTZ_MaxOpRate.ProtoReflect.Descriptor instead.
func (*TTZ_MaxOpRate) Descriptor() ([]byte, []int) {
	return file_GameMsg_TTZ_proto_rawDescGZIP(), []int{16}
}

func (x *TTZ_MaxOpRate) GetMaxRate() int32 {
	if x != nil && x.MaxRate != nil {
		return *x.MaxRate
	}
	return 0
}

func (x *TTZ_MaxOpRate) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

var File_GameMsg_TTZ_proto protoreflect.FileDescriptor

var file_GameMsg_TTZ_proto_rawDesc = []byte{
	0x0a, 0x11, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x5f, 0x54, 0x54, 0x5a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x47,
	0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x37, 0x0a, 0x0f,
	0x54, 0x54, 0x5a, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x72, 0x72, 0x12,
	0x24, 0x0a, 0x0d, 0x43, 0x75, 0x72, 0x72, 0x4f, 0x70, 0x74, 0x53, 0x65, 0x61, 0x74, 0x6e, 0x6f,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0d, 0x43, 0x75, 0x72, 0x72, 0x4f, 0x70, 0x74, 0x53,
	0x65, 0x61, 0x74, 0x6e, 0x6f, 0x22, 0x52, 0x0a, 0x0e, 0x54, 0x54, 0x5a, 0x5f, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0b, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x81, 0x01, 0x0a, 0x19, 0x54, 0x54,
	0x5a, 0x5f, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0c, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x0b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x5e, 0x0a,
	0x16, 0x54, 0x54, 0x5a, 0x5f, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x52, 0x6f,
	0x62, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x42, 0x75, 0x74, 0x74, 0x6f,
	0x6e, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0c, 0x42,
	0x75, 0x74, 0x74, 0x6f, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x0b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x86, 0x01,
	0x0a, 0x15, 0x54, 0x54, 0x5a, 0x5f, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x44,
	0x65, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x74, 0x4e,
	0x6f, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x12,
	0x1a, 0x0a, 0x08, 0x43, 0x61, 0x72, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x08, 0x43, 0x61, 0x72, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x43,
	0x61, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x65, 0x74,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6f, 0x6b, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x52,
	0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x4e, 0x6f, 0x18, 0x04, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x02, 0x4e, 0x6f, 0x22, 0x69, 0x0a, 0x15, 0x54, 0x54, 0x5a, 0x5f, 0x42, 0x72,
	0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x54, 0x12,
	0x16, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x06, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x61, 0x72, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x43, 0x61, 0x72, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x43, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x96, 0x01, 0x0a, 0x17, 0x54, 0x54, 0x5a, 0x5f, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43,
	0x61, 0x73, 0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x53,
	0x65, 0x61, 0x74, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x43, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x29, 0x0a, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6f, 0x6b, 0x65, 0x72, 0x43,
	0x61, 0x72, 0x64, 0x52, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x22, 0xb1, 0x01, 0x0a, 0x1b, 0x54,
	0x54, 0x5a, 0x5f, 0x42, 0x72, 0x6f, 0x64, 0x43, 0x61, 0x73, 0x74, 0x53, 0x65, 0x74, 0x74, 0x6c,
	0x65, 0x4d, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x42, 0x0a, 0x0d, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x54, 0x5a,
	0x5f, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0d, 0x55, 0x73, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22,
	0x0a, 0x0c, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x0c, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x53, 0x65, 0x61, 0x74,
	0x4e, 0x6f, 0x12, 0x2a, 0x0a, 0x10, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x52, 0x10, 0x42, 0x75,
	0x74, 0x74, 0x6f, 0x6e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x64,
	0x0a, 0x12, 0x54, 0x54, 0x5a, 0x5f, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x12, 0x14, 0x0a, 0x05,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x05, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0b, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x22, 0x61, 0x0a, 0x1b, 0x54, 0x54, 0x5a, 0x5f, 0x42, 0x72, 0x6f, 0x64,
	0x43, 0x61, 0x73, 0x74, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x74, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x42, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6e, 0x65, 0x74,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x54, 0x5a, 0x5f, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65,
	0x4d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4a, 0x0a, 0x0c, 0x54, 0x54, 0x5a, 0x5f, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x56, 0x0a, 0x16, 0x54, 0x54, 0x5a, 0x5f, 0x42, 0x72, 0x6f, 0x61, 0x64,
	0x43, 0x61, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x43, 0x75, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x0c, 0x43, 0x75, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x75, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x07, 0x4f, 0x75, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x84, 0x02, 0x0a, 0x0d,
	0x54, 0x54, 0x5a, 0x5f, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x43, 0x75, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x0c, 0x43, 0x75, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x75, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x07, 0x4f, 0x75, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x42,
	0x75, 0x74, 0x74, 0x6f, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x18, 0x04, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x0c, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x12,
	0x37, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x54, 0x5a,
	0x5f, 0x53, 0x65, 0x6e, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x6f, 0x62, 0x52,
	0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x52, 0x6f, 0x62, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x61, 0x78, 0x52, 0x6f, 0x62, 0x52, 0x61, 0x74, 0x65,
	0x18, 0x07, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x4d, 0x61, 0x78, 0x52, 0x6f, 0x62, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x61, 0x78, 0x42, 0x65, 0x74, 0x52, 0x61, 0x74, 0x65,
	0x18, 0x08, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x4d, 0x61, 0x78, 0x42, 0x65, 0x74, 0x52, 0x61,
	0x74, 0x65, 0x22, 0xa6, 0x02, 0x0a, 0x11, 0x54, 0x54, 0x5a, 0x5f, 0x53, 0x65, 0x6e, 0x63, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x74,
	0x4e, 0x6f, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f,
	0x12, 0x1a, 0x0a, 0x08, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x08, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x43, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x09, 0x43, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x05, 0x43, 0x61,
	0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x65, 0x74, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6f, 0x6b, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x52, 0x05,
	0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x65, 0x74, 0x52, 0x61, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x42, 0x65, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x49, 0x73, 0x52, 0x6f, 0x62, 0x18, 0x06, 0x20, 0x02, 0x28, 0x08, 0x52, 0x05,
	0x49, 0x73, 0x52, 0x6f, 0x62, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x73, 0x42, 0x65, 0x74, 0x18, 0x07,
	0x20, 0x02, 0x28, 0x08, 0x52, 0x05, 0x49, 0x73, 0x42, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x49,
	0x73, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x18, 0x08, 0x20, 0x02, 0x28, 0x08, 0x52, 0x07, 0x49, 0x73,
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x6f, 0x62, 0x52, 0x61, 0x74, 0x65,
	0x18, 0x09, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x52, 0x6f, 0x62, 0x52, 0x61, 0x74, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x57, 0x69, 0x6e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x0a, 0x20, 0x02, 0x28,
	0x03, 0x52, 0x08, 0x57, 0x69, 0x6e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x56, 0x0a, 0x10, 0x54,
	0x54, 0x5a, 0x5f, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12,
	0x24, 0x0a, 0x0d, 0x52, 0x65, 0x61, 0x64, 0x79, 0x57, 0x61, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0d, 0x52, 0x65, 0x61, 0x64, 0x79, 0x57, 0x61, 0x69,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x61, 0x73, 0x65, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x42, 0x61, 0x73, 0x65, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x22, 0x20, 0x0a, 0x0a, 0x54, 0x54, 0x5a, 0x5f, 0x47, 0x4d, 0x69, 0x6e, 0x66,
	0x6f, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3d, 0x0a, 0x0d, 0x54, 0x54, 0x5a, 0x5f, 0x4d, 0x61, 0x78,
	0x4f, 0x70, 0x52, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x61, 0x78, 0x52, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x4d, 0x61, 0x78, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f,
	0x74, 0x6f,
}

var (
	file_GameMsg_TTZ_proto_rawDescOnce sync.Once
	file_GameMsg_TTZ_proto_rawDescData = file_GameMsg_TTZ_proto_rawDesc
)

func file_GameMsg_TTZ_proto_rawDescGZIP() []byte {
	file_GameMsg_TTZ_proto_rawDescOnce.Do(func() {
		file_GameMsg_TTZ_proto_rawDescData = protoimpl.X.CompressGZIP(file_GameMsg_TTZ_proto_rawDescData)
	})
	return file_GameMsg_TTZ_proto_rawDescData
}

var file_GameMsg_TTZ_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_GameMsg_TTZ_proto_goTypes = []interface{}{
	(*TTZ_UserInfoArr)(nil),             // 0: netproto.TTZ_UserInfoArr
	(*TTZ_ActionInfo)(nil),              // 1: netproto.TTZ_ActionInfo
	(*TTZ_BroadCastActionResult)(nil),   // 2: netproto.TTZ_BroadCastActionResult
	(*TTZ_BroadCastRobResult)(nil),      // 3: netproto.TTZ_BroadCastRobResult
	(*TTZ_BroadCastDealInfo)(nil),       // 4: netproto.TTZ_BroadCastDealInfo
	(*TTZ_BroadCastUpdateCT)(nil),       // 5: netproto.TTZ_BroadCastUpdateCT
	(*TTZ_BroadCastLightCards)(nil),     // 6: netproto.TTZ_BroadCastLightCards
	(*TTZ_BrodCastSettleMentRound)(nil), // 7: netproto.TTZ_BrodCastSettleMentRound
	(*TTZ_SettleMentInfo)(nil),          // 8: netproto.TTZ_SettleMentInfo
	(*TTZ_BrodCastSettleMentTotal)(nil), // 9: netproto.TTZ_BrodCastSettleMentTotal
	(*TTZ_ErrorMsg)(nil),                // 10: netproto.TTZ_ErrorMsg
	(*TTZ_BroadCastGameState)(nil),      // 11: netproto.TTZ_BroadCastGameState
	(*TTZ_GameSence)(nil),               // 12: netproto.TTZ_GameSence
	(*TTZ_SenceUserInfo)(nil),           // 13: netproto.TTZ_SenceUserInfo
	(*TTZ_GameSettings)(nil),            // 14: netproto.TTZ_GameSettings
	(*TTZ_GMinfo)(nil),                  // 15: netproto.TTZ_GMinfo
	(*TTZ_MaxOpRate)(nil),               // 16: netproto.TTZ_MaxOpRate
	(*PokerCard)(nil),                   // 17: netproto.PokerCard
}
var file_GameMsg_TTZ_proto_depIdxs = []int32{
	17, // 0: netproto.TTZ_BroadCastDealInfo.Cards:type_name -> netproto.PokerCard
	17, // 1: netproto.TTZ_BroadCastLightCards.Cards:type_name -> netproto.PokerCard
	8,  // 2: netproto.TTZ_BrodCastSettleMentRound.UserScoreInfo:type_name -> netproto.TTZ_SettleMentInfo
	8,  // 3: netproto.TTZ_BrodCastSettleMentTotal.UserScoreInfo:type_name -> netproto.TTZ_SettleMentInfo
	13, // 4: netproto.TTZ_GameSence.UserInfo:type_name -> netproto.TTZ_SenceUserInfo
	17, // 5: netproto.TTZ_SenceUserInfo.Cards:type_name -> netproto.PokerCard
	6,  // [6:6] is the sub-list for method output_type
	6,  // [6:6] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_GameMsg_TTZ_proto_init() }
func file_GameMsg_TTZ_proto_init() {
	if File_GameMsg_TTZ_proto != nil {
		return
	}
	file_GameMsg_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_GameMsg_TTZ_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TTZ_UserInfoArr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_TTZ_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TTZ_ActionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_TTZ_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TTZ_BroadCastActionResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_TTZ_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TTZ_BroadCastRobResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_TTZ_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TTZ_BroadCastDealInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_TTZ_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TTZ_BroadCastUpdateCT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_TTZ_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TTZ_BroadCastLightCards); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_TTZ_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TTZ_BrodCastSettleMentRound); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_TTZ_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TTZ_SettleMentInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_TTZ_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TTZ_BrodCastSettleMentTotal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_TTZ_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TTZ_ErrorMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_TTZ_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TTZ_BroadCastGameState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_TTZ_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TTZ_GameSence); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_TTZ_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TTZ_SenceUserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_TTZ_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TTZ_GameSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_TTZ_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TTZ_GMinfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_TTZ_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TTZ_MaxOpRate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_GameMsg_TTZ_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_GameMsg_TTZ_proto_goTypes,
		DependencyIndexes: file_GameMsg_TTZ_proto_depIdxs,
		MessageInfos:      file_GameMsg_TTZ_proto_msgTypes,
	}.Build()
	File_GameMsg_TTZ_proto = out.File
	file_GameMsg_TTZ_proto_rawDesc = nil
	file_GameMsg_TTZ_proto_goTypes = nil
	file_GameMsg_TTZ_proto_depIdxs = nil
}
