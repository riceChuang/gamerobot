// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: GameMsg_SGJ.proto

package netproto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//下注设置
type SGJ_Setting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BetCount    []int32 `protobuf:"varint,1,rep,name=BetCount" json:"BetCount,omitempty"`       //一次下注的数量
	BetMoney    *int32  `protobuf:"varint,2,req,name=BetMoney" json:"BetMoney,omitempty"`       //一次下注的钱
	ZhuangLimit *int64  `protobuf:"varint,3,req,name=ZhuangLimit" json:"ZhuangLimit,omitempty"` //上庄钱限制
}

func (x *SGJ_Setting) Reset() {
	*x = SGJ_Setting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SGJ_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SGJ_Setting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SGJ_Setting) ProtoMessage() {}

func (x *SGJ_Setting) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SGJ_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SGJ_Setting.ProtoReflect.Descriptor instead.
func (*SGJ_Setting) Descriptor() ([]byte, []int) {
	return file_GameMsg_SGJ_proto_rawDescGZIP(), []int{0}
}

func (x *SGJ_Setting) GetBetCount() []int32 {
	if x != nil {
		return x.BetCount
	}
	return nil
}

func (x *SGJ_Setting) GetBetMoney() int32 {
	if x != nil && x.BetMoney != nil {
		return *x.BetMoney
	}
	return 0
}

func (x *SGJ_Setting) GetZhuangLimit() int64 {
	if x != nil && x.ZhuangLimit != nil {
		return *x.ZhuangLimit
	}
	return 0
}

//状态
type SGJ_Sate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State *int32 `protobuf:"varint,1,req,name=State" json:"State,omitempty"`
	Time  *int32 `protobuf:"varint,2,req,name=Time" json:"Time,omitempty"`
}

func (x *SGJ_Sate) Reset() {
	*x = SGJ_Sate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SGJ_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SGJ_Sate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SGJ_Sate) ProtoMessage() {}

func (x *SGJ_Sate) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SGJ_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SGJ_Sate.ProtoReflect.Descriptor instead.
func (*SGJ_Sate) Descriptor() ([]byte, []int) {
	return file_GameMsg_SGJ_proto_rawDescGZIP(), []int{1}
}

func (x *SGJ_Sate) GetState() int32 {
	if x != nil && x.State != nil {
		return *x.State
	}
	return 0
}

func (x *SGJ_Sate) GetTime() int32 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

//庄家信息
type SGJ_ZhuangInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   *int32      `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`
	LastTurn *int32      `protobuf:"varint,2,req,name=LastTurn" json:"LastTurn,omitempty"`
	UserInfo []*GameUser `protobuf:"bytes,3,rep,name=UserInfo" json:"UserInfo,omitempty"`
}

func (x *SGJ_ZhuangInfo) Reset() {
	*x = SGJ_ZhuangInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SGJ_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SGJ_ZhuangInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SGJ_ZhuangInfo) ProtoMessage() {}

func (x *SGJ_ZhuangInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SGJ_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SGJ_ZhuangInfo.ProtoReflect.Descriptor instead.
func (*SGJ_ZhuangInfo) Descriptor() ([]byte, []int) {
	return file_GameMsg_SGJ_proto_rawDescGZIP(), []int{2}
}

func (x *SGJ_ZhuangInfo) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *SGJ_ZhuangInfo) GetLastTurn() int32 {
	if x != nil && x.LastTurn != nil {
		return *x.LastTurn
	}
	return 0
}

func (x *SGJ_ZhuangInfo) GetUserInfo() []*GameUser {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

//上庄列表
type SGJ_ZhuangList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserInfo []*GameUser `protobuf:"bytes,1,rep,name=UserInfo" json:"UserInfo,omitempty"`
}

func (x *SGJ_ZhuangList) Reset() {
	*x = SGJ_ZhuangList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SGJ_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SGJ_ZhuangList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SGJ_ZhuangList) ProtoMessage() {}

func (x *SGJ_ZhuangList) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SGJ_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SGJ_ZhuangList.ProtoReflect.Descriptor instead.
func (*SGJ_ZhuangList) Descriptor() ([]byte, []int) {
	return file_GameMsg_SGJ_proto_rawDescGZIP(), []int{3}
}

func (x *SGJ_ZhuangList) GetUserInfo() []*GameUser {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

//用户ID
type SGJ_UserID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID *int32 `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`
}

func (x *SGJ_UserID) Reset() {
	*x = SGJ_UserID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SGJ_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SGJ_UserID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SGJ_UserID) ProtoMessage() {}

func (x *SGJ_UserID) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SGJ_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SGJ_UserID.ProtoReflect.Descriptor instead.
func (*SGJ_UserID) Descriptor() ([]byte, []int) {
	return file_GameMsg_SGJ_proto_rawDescGZIP(), []int{4}
}

func (x *SGJ_UserID) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

//广播下注
type SGJ_BroadCastBetType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BetUserID *int32              `protobuf:"varint,1,req,name=BetUserID" json:"BetUserID,omitempty"`
	BetInfo   []*SGJ_BetTotalInfo `protobuf:"bytes,2,rep,name=BetInfo" json:"BetInfo,omitempty"`
}

func (x *SGJ_BroadCastBetType) Reset() {
	*x = SGJ_BroadCastBetType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SGJ_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SGJ_BroadCastBetType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SGJ_BroadCastBetType) ProtoMessage() {}

func (x *SGJ_BroadCastBetType) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SGJ_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SGJ_BroadCastBetType.ProtoReflect.Descriptor instead.
func (*SGJ_BroadCastBetType) Descriptor() ([]byte, []int) {
	return file_GameMsg_SGJ_proto_rawDescGZIP(), []int{5}
}

func (x *SGJ_BroadCastBetType) GetBetUserID() int32 {
	if x != nil && x.BetUserID != nil {
		return *x.BetUserID
	}
	return 0
}

func (x *SGJ_BroadCastBetType) GetBetInfo() []*SGJ_BetTotalInfo {
	if x != nil {
		return x.BetInfo
	}
	return nil
}

type SGJ_BetTotalInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BetType   *int32 `protobuf:"varint,1,req,name=BetType" json:"BetType,omitempty"`
	Money     *int64 `protobuf:"varint,2,req,name=Money" json:"Money,omitempty"`
	LuckyStar *bool  `protobuf:"varint,3,req,name=LuckyStar" json:"LuckyStar,omitempty"`
}

func (x *SGJ_BetTotalInfo) Reset() {
	*x = SGJ_BetTotalInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SGJ_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SGJ_BetTotalInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SGJ_BetTotalInfo) ProtoMessage() {}

func (x *SGJ_BetTotalInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SGJ_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SGJ_BetTotalInfo.ProtoReflect.Descriptor instead.
func (*SGJ_BetTotalInfo) Descriptor() ([]byte, []int) {
	return file_GameMsg_SGJ_proto_rawDescGZIP(), []int{6}
}

func (x *SGJ_BetTotalInfo) GetBetType() int32 {
	if x != nil && x.BetType != nil {
		return *x.BetType
	}
	return 0
}

func (x *SGJ_BetTotalInfo) GetMoney() int64 {
	if x != nil && x.Money != nil {
		return *x.Money
	}
	return 0
}

func (x *SGJ_BetTotalInfo) GetLuckyStar() bool {
	if x != nil && x.LuckyStar != nil {
		return *x.LuckyStar
	}
	return false
}

//用户的下注信息
type SGJ_UserBetInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserMoney    *int64         `protobuf:"varint,1,req,name=UserMoney" json:"UserMoney,omitempty"`
	BetInfoGroup []*SGJ_BetInfo `protobuf:"bytes,2,rep,name=BetInfoGroup" json:"BetInfoGroup,omitempty"`
}

func (x *SGJ_UserBetInfo) Reset() {
	*x = SGJ_UserBetInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SGJ_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SGJ_UserBetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SGJ_UserBetInfo) ProtoMessage() {}

func (x *SGJ_UserBetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SGJ_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SGJ_UserBetInfo.ProtoReflect.Descriptor instead.
func (*SGJ_UserBetInfo) Descriptor() ([]byte, []int) {
	return file_GameMsg_SGJ_proto_rawDescGZIP(), []int{7}
}

func (x *SGJ_UserBetInfo) GetUserMoney() int64 {
	if x != nil && x.UserMoney != nil {
		return *x.UserMoney
	}
	return 0
}

func (x *SGJ_UserBetInfo) GetBetInfoGroup() []*SGJ_BetInfo {
	if x != nil {
		return x.BetInfoGroup
	}
	return nil
}

type SGJ_BetInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BetType  *int32 `protobuf:"varint,1,req,name=BetType" json:"BetType,omitempty"`
	BetMoney *int64 `protobuf:"varint,2,req,name=BetMoney" json:"BetMoney,omitempty"`
}

func (x *SGJ_BetInfo) Reset() {
	*x = SGJ_BetInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SGJ_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SGJ_BetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SGJ_BetInfo) ProtoMessage() {}

func (x *SGJ_BetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SGJ_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SGJ_BetInfo.ProtoReflect.Descriptor instead.
func (*SGJ_BetInfo) Descriptor() ([]byte, []int) {
	return file_GameMsg_SGJ_proto_rawDescGZIP(), []int{8}
}

func (x *SGJ_BetInfo) GetBetType() int32 {
	if x != nil && x.BetType != nil {
		return *x.BetType
	}
	return 0
}

func (x *SGJ_BetInfo) GetBetMoney() int64 {
	if x != nil && x.BetMoney != nil {
		return *x.BetMoney
	}
	return 0
}

//下注信息
type SGJ_BetTypeGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BetGroup []*SGJ_BetType `protobuf:"bytes,1,rep,name=BetGroup" json:"BetGroup,omitempty"`
}

func (x *SGJ_BetTypeGroup) Reset() {
	*x = SGJ_BetTypeGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SGJ_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SGJ_BetTypeGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SGJ_BetTypeGroup) ProtoMessage() {}

func (x *SGJ_BetTypeGroup) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SGJ_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SGJ_BetTypeGroup.ProtoReflect.Descriptor instead.
func (*SGJ_BetTypeGroup) Descriptor() ([]byte, []int) {
	return file_GameMsg_SGJ_proto_rawDescGZIP(), []int{9}
}

func (x *SGJ_BetTypeGroup) GetBetGroup() []*SGJ_BetType {
	if x != nil {
		return x.BetGroup
	}
	return nil
}

type SGJ_BetType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BetType  *int32 `protobuf:"varint,1,req,name=BetType" json:"BetType,omitempty"`
	BetCount *int32 `protobuf:"varint,2,req,name=BetCount" json:"BetCount,omitempty"`
}

func (x *SGJ_BetType) Reset() {
	*x = SGJ_BetType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SGJ_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SGJ_BetType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SGJ_BetType) ProtoMessage() {}

func (x *SGJ_BetType) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SGJ_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SGJ_BetType.ProtoReflect.Descriptor instead.
func (*SGJ_BetType) Descriptor() ([]byte, []int) {
	return file_GameMsg_SGJ_proto_rawDescGZIP(), []int{10}
}

func (x *SGJ_BetType) GetBetType() int32 {
	if x != nil && x.BetType != nil {
		return *x.BetType
	}
	return 0
}

func (x *SGJ_BetType) GetBetCount() int32 {
	if x != nil && x.BetCount != nil {
		return *x.BetCount
	}
	return 0
}

//开奖类型
type SGJ_JiangType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JiangType     *int32  `protobuf:"varint,1,req,name=JiangType" json:"JiangType,omitempty"`
	JiangTypeList []int32 `protobuf:"varint,2,rep,name=JiangTypeList" json:"JiangTypeList,omitempty"`
}

func (x *SGJ_JiangType) Reset() {
	*x = SGJ_JiangType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SGJ_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SGJ_JiangType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SGJ_JiangType) ProtoMessage() {}

func (x *SGJ_JiangType) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SGJ_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SGJ_JiangType.ProtoReflect.Descriptor instead.
func (*SGJ_JiangType) Descriptor() ([]byte, []int) {
	return file_GameMsg_SGJ_proto_rawDescGZIP(), []int{11}
}

func (x *SGJ_JiangType) GetJiangType() int32 {
	if x != nil && x.JiangType != nil {
		return *x.JiangType
	}
	return 0
}

func (x *SGJ_JiangType) GetJiangTypeList() []int32 {
	if x != nil {
		return x.JiangTypeList
	}
	return nil
}

//开奖的结果
type SGJ_GameResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZhuangWin     *int64              `protobuf:"varint,1,req,name=ZhuangWin" json:"ZhuangWin,omitempty"`
	SelfWin       *int64              `protobuf:"varint,2,req,name=SelfWin" json:"SelfWin,omitempty"`
	JiangTypeList []int32             `protobuf:"varint,3,rep,name=JiangTypeList" json:"JiangTypeList,omitempty"` //添加开奖结果
	Retaction     *int32              `protobuf:"varint,4,opt,name=Retaction" json:"Retaction,omitempty"`
	StageUerInfo  []*SGJ_StageUerInfo `protobuf:"bytes,5,rep,name=StageUerInfo" json:"StageUerInfo,omitempty"` //標誌玩家赢钱信息
}

func (x *SGJ_GameResult) Reset() {
	*x = SGJ_GameResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SGJ_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SGJ_GameResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SGJ_GameResult) ProtoMessage() {}

func (x *SGJ_GameResult) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SGJ_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SGJ_GameResult.ProtoReflect.Descriptor instead.
func (*SGJ_GameResult) Descriptor() ([]byte, []int) {
	return file_GameMsg_SGJ_proto_rawDescGZIP(), []int{12}
}

func (x *SGJ_GameResult) GetZhuangWin() int64 {
	if x != nil && x.ZhuangWin != nil {
		return *x.ZhuangWin
	}
	return 0
}

func (x *SGJ_GameResult) GetSelfWin() int64 {
	if x != nil && x.SelfWin != nil {
		return *x.SelfWin
	}
	return 0
}

func (x *SGJ_GameResult) GetJiangTypeList() []int32 {
	if x != nil {
		return x.JiangTypeList
	}
	return nil
}

func (x *SGJ_GameResult) GetRetaction() int32 {
	if x != nil && x.Retaction != nil {
		return *x.Retaction
	}
	return 0
}

func (x *SGJ_GameResult) GetStageUerInfo() []*SGJ_StageUerInfo {
	if x != nil {
		return x.StageUerInfo
	}
	return nil
}

//標誌玩家赢钱信息
type SGJ_StageUerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID *int32 `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`
	Win    *int64 `protobuf:"varint,2,req,name=Win" json:"Win,omitempty"`
}

func (x *SGJ_StageUerInfo) Reset() {
	*x = SGJ_StageUerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SGJ_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SGJ_StageUerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SGJ_StageUerInfo) ProtoMessage() {}

func (x *SGJ_StageUerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SGJ_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SGJ_StageUerInfo.ProtoReflect.Descriptor instead.
func (*SGJ_StageUerInfo) Descriptor() ([]byte, []int) {
	return file_GameMsg_SGJ_proto_rawDescGZIP(), []int{13}
}

func (x *SGJ_StageUerInfo) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *SGJ_StageUerInfo) GetWin() int64 {
	if x != nil && x.Win != nil {
		return *x.Win
	}
	return 0
}

//是否上庄
type SGJ_ShangZhuang struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsShangZhuang *bool `protobuf:"varint,1,req,name=IsShangZhuang" json:"IsShangZhuang,omitempty"`
}

func (x *SGJ_ShangZhuang) Reset() {
	*x = SGJ_ShangZhuang{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SGJ_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SGJ_ShangZhuang) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SGJ_ShangZhuang) ProtoMessage() {}

func (x *SGJ_ShangZhuang) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SGJ_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SGJ_ShangZhuang.ProtoReflect.Descriptor instead.
func (*SGJ_ShangZhuang) Descriptor() ([]byte, []int) {
	return file_GameMsg_SGJ_proto_rawDescGZIP(), []int{14}
}

func (x *SGJ_ShangZhuang) GetIsShangZhuang() bool {
	if x != nil && x.IsShangZhuang != nil {
		return *x.IsShangZhuang
	}
	return false
}

//当前下注结果
type SGJ_UserBetRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Money    *int64         `protobuf:"varint,1,req,name=Money" json:"Money,omitempty"`      //当前剩余的钱数
	Ret      *int32         `protobuf:"varint,2,req,name=Ret" json:"Ret,omitempty"`          //下注的结果0下注成功，-1钱不够，-2此类型下注已达到上限,-3庄家不能下注-4此类下注已达到上限，-5庄閒不可同時下注，-6用户金额小於下注限制
	Type     *int32         `protobuf:"varint,3,opt,name=Type" json:"Type,omitempty"`        //达到下注上限的类型
	BetGroup []*SGJ_BetType `protobuf:"bytes,4,rep,name=BetGroup" json:"BetGroup,omitempty"` //当前下注的数据
}

func (x *SGJ_UserBetRet) Reset() {
	*x = SGJ_UserBetRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SGJ_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SGJ_UserBetRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SGJ_UserBetRet) ProtoMessage() {}

func (x *SGJ_UserBetRet) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SGJ_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SGJ_UserBetRet.ProtoReflect.Descriptor instead.
func (*SGJ_UserBetRet) Descriptor() ([]byte, []int) {
	return file_GameMsg_SGJ_proto_rawDescGZIP(), []int{15}
}

func (x *SGJ_UserBetRet) GetMoney() int64 {
	if x != nil && x.Money != nil {
		return *x.Money
	}
	return 0
}

func (x *SGJ_UserBetRet) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *SGJ_UserBetRet) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *SGJ_UserBetRet) GetBetGroup() []*SGJ_BetType {
	if x != nil {
		return x.BetGroup
	}
	return nil
}

//当前的钱数
type SGJ_UserMoney struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Money *int64 `protobuf:"varint,1,req,name=Money" json:"Money,omitempty"`
	Ret   *int32 `protobuf:"varint,2,req,name=Ret" json:"Ret,omitempty"`
}

func (x *SGJ_UserMoney) Reset() {
	*x = SGJ_UserMoney{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SGJ_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SGJ_UserMoney) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SGJ_UserMoney) ProtoMessage() {}

func (x *SGJ_UserMoney) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SGJ_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SGJ_UserMoney.ProtoReflect.Descriptor instead.
func (*SGJ_UserMoney) Descriptor() ([]byte, []int) {
	return file_GameMsg_SGJ_proto_rawDescGZIP(), []int{16}
}

func (x *SGJ_UserMoney) GetMoney() int64 {
	if x != nil && x.Money != nil {
		return *x.Money
	}
	return 0
}

func (x *SGJ_UserMoney) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

//上庄结果
type SGJ_ShangzhuangRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"` //值为1时下庄成功，值为0表示上庄成功，值为-1时上庄失败资金不足，值为-2时已经在上庄列表中。
}

func (x *SGJ_ShangzhuangRet) Reset() {
	*x = SGJ_ShangzhuangRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SGJ_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SGJ_ShangzhuangRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SGJ_ShangzhuangRet) ProtoMessage() {}

func (x *SGJ_ShangzhuangRet) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SGJ_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SGJ_ShangzhuangRet.ProtoReflect.Descriptor instead.
func (*SGJ_ShangzhuangRet) Descriptor() ([]byte, []int) {
	return file_GameMsg_SGJ_proto_rawDescGZIP(), []int{17}
}

func (x *SGJ_ShangzhuangRet) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

//大富豪列表消息
type SGJ_RichestList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RichestList []*SGJ_Richest `protobuf:"bytes,1,rep,name=RichestList" json:"RichestList,omitempty"` //富豪的排行榜
}

func (x *SGJ_RichestList) Reset() {
	*x = SGJ_RichestList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SGJ_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SGJ_RichestList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SGJ_RichestList) ProtoMessage() {}

func (x *SGJ_RichestList) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SGJ_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SGJ_RichestList.ProtoReflect.Descriptor instead.
func (*SGJ_RichestList) Descriptor() ([]byte, []int) {
	return file_GameMsg_SGJ_proto_rawDescGZIP(), []int{18}
}

func (x *SGJ_RichestList) GetRichestList() []*SGJ_Richest {
	if x != nil {
		return x.RichestList
	}
	return nil
}

//大富豪的玩家資訊
type SGJ_Richest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ranking       *int32 `protobuf:"varint,1,req,name=Ranking" json:"Ranking,omitempty"`             //富豪排名
	UserID        *int32 `protobuf:"varint,2,req,name=UserID" json:"UserID,omitempty"`               //富豪ID
	UserFaceID    *int32 `protobuf:"varint,3,req,name=UserFaceID" json:"UserFaceID,omitempty"`       //富豪頭像ID
	Money         *int64 `protobuf:"varint,4,req,name=Money" json:"Money,omitempty"`                 //富豪当前身上的钱
	AvatarFrameID *int32 `protobuf:"varint,5,opt,name=AvatarFrameID" json:"AvatarFrameID,omitempty"` // VIP頭框像ID
}

func (x *SGJ_Richest) Reset() {
	*x = SGJ_Richest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SGJ_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SGJ_Richest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SGJ_Richest) ProtoMessage() {}

func (x *SGJ_Richest) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SGJ_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SGJ_Richest.ProtoReflect.Descriptor instead.
func (*SGJ_Richest) Descriptor() ([]byte, []int) {
	return file_GameMsg_SGJ_proto_rawDescGZIP(), []int{19}
}

func (x *SGJ_Richest) GetRanking() int32 {
	if x != nil && x.Ranking != nil {
		return *x.Ranking
	}
	return 0
}

func (x *SGJ_Richest) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *SGJ_Richest) GetUserFaceID() int32 {
	if x != nil && x.UserFaceID != nil {
		return *x.UserFaceID
	}
	return 0
}

func (x *SGJ_Richest) GetMoney() int64 {
	if x != nil && x.Money != nil {
		return *x.Money
	}
	return 0
}

func (x *SGJ_Richest) GetAvatarFrameID() int32 {
	if x != nil && x.AvatarFrameID != nil {
		return *x.AvatarFrameID
	}
	return 0
}

//幸運星玩家資訊
type SGJ_LuckyStar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID        *int32 `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`               //幸運星ID
	UserFaceID    *int32 `protobuf:"varint,2,req,name=UserFaceID" json:"UserFaceID,omitempty"`       //幸運星頭像ID
	AvatarFrameID *int32 `protobuf:"varint,3,opt,name=AvatarFrameID" json:"AvatarFrameID,omitempty"` // VIP頭框像ID
}

func (x *SGJ_LuckyStar) Reset() {
	*x = SGJ_LuckyStar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SGJ_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SGJ_LuckyStar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SGJ_LuckyStar) ProtoMessage() {}

func (x *SGJ_LuckyStar) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SGJ_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SGJ_LuckyStar.ProtoReflect.Descriptor instead.
func (*SGJ_LuckyStar) Descriptor() ([]byte, []int) {
	return file_GameMsg_SGJ_proto_rawDescGZIP(), []int{20}
}

func (x *SGJ_LuckyStar) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *SGJ_LuckyStar) GetUserFaceID() int32 {
	if x != nil && x.UserFaceID != nil {
		return *x.UserFaceID
	}
	return 0
}

func (x *SGJ_LuckyStar) GetAvatarFrameID() int32 {
	if x != nil && x.AvatarFrameID != nil {
		return *x.AvatarFrameID
	}
	return 0
}

var File_GameMsg_SGJ_proto protoreflect.FileDescriptor

var file_GameMsg_SGJ_proto_rawDesc = []byte{
	0x0a, 0x11, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x5f, 0x53, 0x47, 0x4a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x47,
	0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x67, 0x0a, 0x0b,
	0x53, 0x47, 0x4a, 0x5f, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x42,
	0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x42,
	0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x65, 0x74, 0x4d, 0x6f,
	0x6e, 0x65, 0x79, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x42, 0x65, 0x74, 0x4d, 0x6f,
	0x6e, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x5a, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0b, 0x5a, 0x68, 0x75, 0x61, 0x6e, 0x67,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x34, 0x0a, 0x08, 0x53, 0x47, 0x4a, 0x5f, 0x53, 0x61, 0x74,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x74, 0x0a, 0x0e, 0x53,
	0x47, 0x4a, 0x5f, 0x5a, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x54, 0x75, 0x72,
	0x6e, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x54, 0x75, 0x72,
	0x6e, 0x12, 0x2e, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x61, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x40, 0x0a, 0x0e, 0x53, 0x47, 0x4a, 0x5f, 0x5a, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x47, 0x61, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x24, 0x0a, 0x0a, 0x53, 0x47, 0x4a, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x6a, 0x0a, 0x14, 0x53, 0x47, 0x4a,
	0x5f, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x42, 0x65, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x42, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x34, 0x0a, 0x07, 0x42, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x47, 0x4a, 0x5f,
	0x42, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x42, 0x65,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x60, 0x0a, 0x10, 0x53, 0x47, 0x4a, 0x5f, 0x42, 0x65, 0x74,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x65, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x42, 0x65, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x03, 0x52, 0x05, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x75, 0x63,
	0x6b, 0x79, 0x53, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x02, 0x28, 0x08, 0x52, 0x09, 0x4c, 0x75,
	0x63, 0x6b, 0x79, 0x53, 0x74, 0x61, 0x72, 0x22, 0x6a, 0x0a, 0x0f, 0x53, 0x47, 0x4a, 0x5f, 0x55,
	0x73, 0x65, 0x72, 0x42, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x73,
	0x65, 0x72, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x09, 0x55,
	0x73, 0x65, 0x72, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x39, 0x0a, 0x0c, 0x42, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x47, 0x4a, 0x5f, 0x42, 0x65,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x42, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x22, 0x43, 0x0a, 0x0b, 0x53, 0x47, 0x4a, 0x5f, 0x42, 0x65, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x07, 0x42, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x42, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x08,
	0x42, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x22, 0x45, 0x0a, 0x10, 0x53, 0x47, 0x4a, 0x5f,
	0x42, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x31, 0x0a, 0x08,
	0x42, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x47, 0x4a, 0x5f, 0x42, 0x65,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x42, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22,
	0x43, 0x0a, 0x0b, 0x53, 0x47, 0x4a, 0x5f, 0x42, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x42, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x07, 0x42, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x65, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x42, 0x65, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x53, 0x0a, 0x0d, 0x53, 0x47, 0x4a, 0x5f, 0x4a, 0x69, 0x61, 0x6e,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4a, 0x69, 0x61, 0x6e, 0x67, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x4a, 0x69, 0x61, 0x6e, 0x67, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x4a, 0x69, 0x61, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0d, 0x4a, 0x69, 0x61, 0x6e,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xcc, 0x01, 0x0a, 0x0e, 0x53, 0x47,
	0x4a, 0x5f, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x5a, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x57, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52,
	0x09, 0x5a, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x57, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x65,
	0x6c, 0x66, 0x57, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x07, 0x53, 0x65, 0x6c,
	0x66, 0x57, 0x69, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x4a, 0x69, 0x61, 0x6e, 0x67, 0x54, 0x79, 0x70,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0d, 0x4a, 0x69, 0x61,
	0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65,
	0x74, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52,
	0x65, 0x74, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x67,
	0x65, 0x55, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x47, 0x4a, 0x5f, 0x53, 0x74,
	0x61, 0x67, 0x65, 0x55, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x53, 0x74, 0x61, 0x67,
	0x65, 0x55, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x3c, 0x0a, 0x10, 0x53, 0x47, 0x4a, 0x5f,
	0x53, 0x74, 0x61, 0x67, 0x65, 0x55, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x57, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x03, 0x52, 0x03, 0x57, 0x69, 0x6e, 0x22, 0x37, 0x0a, 0x0f, 0x53, 0x47, 0x4a, 0x5f, 0x53, 0x68,
	0x61, 0x6e, 0x67, 0x5a, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x49, 0x73, 0x53,
	0x68, 0x61, 0x6e, 0x67, 0x5a, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08,
	0x52, 0x0d, 0x49, 0x73, 0x53, 0x68, 0x61, 0x6e, 0x67, 0x5a, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x22,
	0x7f, 0x0a, 0x0e, 0x53, 0x47, 0x4a, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x74, 0x52, 0x65,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03,
	0x52, 0x05, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x65, 0x74, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x52, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x31, 0x0a,
	0x08, 0x42, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x47, 0x4a, 0x5f, 0x42,
	0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x42, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x22, 0x37, 0x0a, 0x0d, 0x53, 0x47, 0x4a, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x6e, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03,
	0x52, 0x05, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x65, 0x74, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x52, 0x65, 0x74, 0x22, 0x26, 0x0a, 0x12, 0x53, 0x47, 0x4a,
	0x5f, 0x53, 0x68, 0x61, 0x6e, 0x67, 0x7a, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x52, 0x65, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65,
	0x74, 0x22, 0x4a, 0x0a, 0x0f, 0x53, 0x47, 0x4a, 0x5f, 0x52, 0x69, 0x63, 0x68, 0x65, 0x73, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x0b, 0x52, 0x69, 0x63, 0x68, 0x65, 0x73, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6e, 0x65, 0x74, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x47, 0x4a, 0x5f, 0x52, 0x69, 0x63, 0x68, 0x65, 0x73, 0x74,
	0x52, 0x0b, 0x52, 0x69, 0x63, 0x68, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x9b, 0x01,
	0x0a, 0x0b, 0x53, 0x47, 0x4a, 0x5f, 0x52, 0x69, 0x63, 0x68, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07,
	0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x1e, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x46, 0x61, 0x63, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x46, 0x61, 0x63, 0x65, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x04, 0x20, 0x02, 0x28, 0x03, 0x52, 0x05,
	0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x22, 0x6d, 0x0a, 0x0d, 0x53,
	0x47, 0x4a, 0x5f, 0x4c, 0x75, 0x63, 0x6b, 0x79, 0x53, 0x74, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x46, 0x61, 0x63, 0x65,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x46, 0x61,
	0x63, 0x65, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x72,
	0x61, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f,
	0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f,
}

var (
	file_GameMsg_SGJ_proto_rawDescOnce sync.Once
	file_GameMsg_SGJ_proto_rawDescData = file_GameMsg_SGJ_proto_rawDesc
)

func file_GameMsg_SGJ_proto_rawDescGZIP() []byte {
	file_GameMsg_SGJ_proto_rawDescOnce.Do(func() {
		file_GameMsg_SGJ_proto_rawDescData = protoimpl.X.CompressGZIP(file_GameMsg_SGJ_proto_rawDescData)
	})
	return file_GameMsg_SGJ_proto_rawDescData
}

var file_GameMsg_SGJ_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_GameMsg_SGJ_proto_goTypes = []interface{}{
	(*SGJ_Setting)(nil),          // 0: netproto.SGJ_Setting
	(*SGJ_Sate)(nil),             // 1: netproto.SGJ_Sate
	(*SGJ_ZhuangInfo)(nil),       // 2: netproto.SGJ_ZhuangInfo
	(*SGJ_ZhuangList)(nil),       // 3: netproto.SGJ_ZhuangList
	(*SGJ_UserID)(nil),           // 4: netproto.SGJ_UserID
	(*SGJ_BroadCastBetType)(nil), // 5: netproto.SGJ_BroadCastBetType
	(*SGJ_BetTotalInfo)(nil),     // 6: netproto.SGJ_BetTotalInfo
	(*SGJ_UserBetInfo)(nil),      // 7: netproto.SGJ_UserBetInfo
	(*SGJ_BetInfo)(nil),          // 8: netproto.SGJ_BetInfo
	(*SGJ_BetTypeGroup)(nil),     // 9: netproto.SGJ_BetTypeGroup
	(*SGJ_BetType)(nil),          // 10: netproto.SGJ_BetType
	(*SGJ_JiangType)(nil),        // 11: netproto.SGJ_JiangType
	(*SGJ_GameResult)(nil),       // 12: netproto.SGJ_GameResult
	(*SGJ_StageUerInfo)(nil),     // 13: netproto.SGJ_StageUerInfo
	(*SGJ_ShangZhuang)(nil),      // 14: netproto.SGJ_ShangZhuang
	(*SGJ_UserBetRet)(nil),       // 15: netproto.SGJ_UserBetRet
	(*SGJ_UserMoney)(nil),        // 16: netproto.SGJ_UserMoney
	(*SGJ_ShangzhuangRet)(nil),   // 17: netproto.SGJ_ShangzhuangRet
	(*SGJ_RichestList)(nil),      // 18: netproto.SGJ_RichestList
	(*SGJ_Richest)(nil),          // 19: netproto.SGJ_Richest
	(*SGJ_LuckyStar)(nil),        // 20: netproto.SGJ_LuckyStar
	(*GameUser)(nil),             // 21: netproto.GameUser
}
var file_GameMsg_SGJ_proto_depIdxs = []int32{
	21, // 0: netproto.SGJ_ZhuangInfo.UserInfo:type_name -> netproto.GameUser
	21, // 1: netproto.SGJ_ZhuangList.UserInfo:type_name -> netproto.GameUser
	6,  // 2: netproto.SGJ_BroadCastBetType.BetInfo:type_name -> netproto.SGJ_BetTotalInfo
	8,  // 3: netproto.SGJ_UserBetInfo.BetInfoGroup:type_name -> netproto.SGJ_BetInfo
	10, // 4: netproto.SGJ_BetTypeGroup.BetGroup:type_name -> netproto.SGJ_BetType
	13, // 5: netproto.SGJ_GameResult.StageUerInfo:type_name -> netproto.SGJ_StageUerInfo
	10, // 6: netproto.SGJ_UserBetRet.BetGroup:type_name -> netproto.SGJ_BetType
	19, // 7: netproto.SGJ_RichestList.RichestList:type_name -> netproto.SGJ_Richest
	8,  // [8:8] is the sub-list for method output_type
	8,  // [8:8] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_GameMsg_SGJ_proto_init() }
func file_GameMsg_SGJ_proto_init() {
	if File_GameMsg_SGJ_proto != nil {
		return
	}
	file_GameMsg_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_GameMsg_SGJ_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SGJ_Setting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SGJ_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SGJ_Sate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SGJ_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SGJ_ZhuangInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SGJ_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SGJ_ZhuangList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SGJ_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SGJ_UserID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SGJ_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SGJ_BroadCastBetType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SGJ_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SGJ_BetTotalInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SGJ_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SGJ_UserBetInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SGJ_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SGJ_BetInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SGJ_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SGJ_BetTypeGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SGJ_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SGJ_BetType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SGJ_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SGJ_JiangType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SGJ_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SGJ_GameResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SGJ_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SGJ_StageUerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SGJ_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SGJ_ShangZhuang); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SGJ_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SGJ_UserBetRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SGJ_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SGJ_UserMoney); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SGJ_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SGJ_ShangzhuangRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SGJ_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SGJ_RichestList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SGJ_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SGJ_Richest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SGJ_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SGJ_LuckyStar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_GameMsg_SGJ_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_GameMsg_SGJ_proto_goTypes,
		DependencyIndexes: file_GameMsg_SGJ_proto_depIdxs,
		MessageInfos:      file_GameMsg_SGJ_proto_msgTypes,
	}.Build()
	File_GameMsg_SGJ_proto = out.File
	file_GameMsg_SGJ_proto_rawDesc = nil
	file_GameMsg_SGJ_proto_goTypes = nil
	file_GameMsg_SGJ_proto_depIdxs = nil
}
