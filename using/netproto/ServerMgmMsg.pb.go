// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0-devel
// 	protoc        v3.13.0
// source: ServerMgmMsg.proto

package netproto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//服务器定时向DBServer注册信息
type ServerRegInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerID   *int32 `protobuf:"varint,1,req,name=ServerID" json:"ServerID,omitempty"`     //服务器ID
	ServerType *int32 `protobuf:"varint,2,req,name=ServerType" json:"ServerType,omitempty"` //服务器类型
}

func (x *ServerRegInfo) Reset() {
	*x = ServerRegInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ServerMgmMsg_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerRegInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerRegInfo) ProtoMessage() {}

func (x *ServerRegInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ServerMgmMsg_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerRegInfo.ProtoReflect.Descriptor instead.
func (*ServerRegInfo) Descriptor() ([]byte, []int) {
	return file_ServerMgmMsg_proto_rawDescGZIP(), []int{0}
}

func (x *ServerRegInfo) GetServerID() int32 {
	if x != nil && x.ServerID != nil {
		return *x.ServerID
	}
	return 0
}

func (x *ServerRegInfo) GetServerType() int32 {
	if x != nil && x.ServerType != nil {
		return *x.ServerType
	}
	return 0
}

//游戏服务器向大厅注册信息
type GameServerRegInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameID         *int32  `protobuf:"varint,1,req,name=GameID" json:"GameID,omitempty"`                 //游戏ID
	GameName       *string `protobuf:"bytes,2,req,name=GameName" json:"GameName,omitempty"`              //游戏名称
	ServerID       *int32  `protobuf:"varint,3,req,name=ServerID" json:"ServerID,omitempty"`             //服务器ID
	ServerName     *string `protobuf:"bytes,4,req,name=ServerName" json:"ServerName,omitempty"`          //服务器名称
	Flag           *string `protobuf:"bytes,5,req,name=Flag" json:"Flag,omitempty"`                      //服务器标记,用于客户端显示房间时进行分组
	UserCount      *int32  `protobuf:"varint,6,req,name=UserCount" json:"UserCount,omitempty"`           //当前用户数
	IPAddress      *string `protobuf:"bytes,7,req,name=IPAddress" json:"IPAddress,omitempty"`            //服务器IP
	Port           *int32  `protobuf:"varint,8,req,name=Port" json:"Port,omitempty"`                     //服务器端口
	LoginMoney     *int32  `protobuf:"varint,9,req,name=LoginMoney" json:"LoginMoney,omitempty"`         //入场金币数
	BaseScore      *int32  `protobuf:"varint,10,req,name=BaseScore" json:"BaseScore,omitempty"`          //底分
	RobotCount     *int32  `protobuf:"varint,11,req,name=RobotCount" json:"RobotCount,omitempty"`        //当前机器人数
	Single         *int32  `protobuf:"varint,12,opt,name=Single" json:"Single,omitempty"`                //直接進入取第一個服務器進入, 0=>顯示房間列表, 1=>第一個服務器進入
	HostAndBackup  *int32  `protobuf:"varint,13,opt,name=HostAndBackup" json:"HostAndBackup,omitempty"`  //AB服, 0 主要主機 1 備援主機
	AndroidVersion *string `protobuf:"bytes,14,opt,name=AndroidVersion" json:"AndroidVersion,omitempty"` // 客戶端版本號
	IOSVersion     *string `protobuf:"bytes,15,opt,name=IOSVersion" json:"IOSVersion,omitempty"`         // 客戶端版本號
	KickOutMoney   *int32  `protobuf:"varint,16,opt,name=KickOutMoney" json:"KickOutMoney,omitempty"`    //入场金币上限
	MaxOdd         *int32  `protobuf:"varint,17,opt,name=MaxOdd" json:"MaxOdd,omitempty"`                // 最高倍數
	GameType       *int32  `protobuf:"varint,18,opt,name=GameType" json:"GameType,omitempty"`            //遊戲類型 0真金 1比賽 2休閒
	RoomDesc       *string `protobuf:"bytes,19,opt,name=RoomDesc" json:"RoomDesc,omitempty"`             //房间描述，红包扫雷游戏专用：10包1倍 7包1.5倍 5包2倍
	TipBetRange    *string `protobuf:"bytes,20,opt,name=TipBetRange" json:"TipBetRange,omitempty"`       //提示下注限紅區間
}

func (x *GameServerRegInfo) Reset() {
	*x = GameServerRegInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ServerMgmMsg_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameServerRegInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameServerRegInfo) ProtoMessage() {}

func (x *GameServerRegInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ServerMgmMsg_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameServerRegInfo.ProtoReflect.Descriptor instead.
func (*GameServerRegInfo) Descriptor() ([]byte, []int) {
	return file_ServerMgmMsg_proto_rawDescGZIP(), []int{1}
}

func (x *GameServerRegInfo) GetGameID() int32 {
	if x != nil && x.GameID != nil {
		return *x.GameID
	}
	return 0
}

func (x *GameServerRegInfo) GetGameName() string {
	if x != nil && x.GameName != nil {
		return *x.GameName
	}
	return ""
}

func (x *GameServerRegInfo) GetServerID() int32 {
	if x != nil && x.ServerID != nil {
		return *x.ServerID
	}
	return 0
}

func (x *GameServerRegInfo) GetServerName() string {
	if x != nil && x.ServerName != nil {
		return *x.ServerName
	}
	return ""
}

func (x *GameServerRegInfo) GetFlag() string {
	if x != nil && x.Flag != nil {
		return *x.Flag
	}
	return ""
}

func (x *GameServerRegInfo) GetUserCount() int32 {
	if x != nil && x.UserCount != nil {
		return *x.UserCount
	}
	return 0
}

func (x *GameServerRegInfo) GetIPAddress() string {
	if x != nil && x.IPAddress != nil {
		return *x.IPAddress
	}
	return ""
}

func (x *GameServerRegInfo) GetPort() int32 {
	if x != nil && x.Port != nil {
		return *x.Port
	}
	return 0
}

func (x *GameServerRegInfo) GetLoginMoney() int32 {
	if x != nil && x.LoginMoney != nil {
		return *x.LoginMoney
	}
	return 0
}

func (x *GameServerRegInfo) GetBaseScore() int32 {
	if x != nil && x.BaseScore != nil {
		return *x.BaseScore
	}
	return 0
}

func (x *GameServerRegInfo) GetRobotCount() int32 {
	if x != nil && x.RobotCount != nil {
		return *x.RobotCount
	}
	return 0
}

func (x *GameServerRegInfo) GetSingle() int32 {
	if x != nil && x.Single != nil {
		return *x.Single
	}
	return 0
}

func (x *GameServerRegInfo) GetHostAndBackup() int32 {
	if x != nil && x.HostAndBackup != nil {
		return *x.HostAndBackup
	}
	return 0
}

func (x *GameServerRegInfo) GetAndroidVersion() string {
	if x != nil && x.AndroidVersion != nil {
		return *x.AndroidVersion
	}
	return ""
}

func (x *GameServerRegInfo) GetIOSVersion() string {
	if x != nil && x.IOSVersion != nil {
		return *x.IOSVersion
	}
	return ""
}

func (x *GameServerRegInfo) GetKickOutMoney() int32 {
	if x != nil && x.KickOutMoney != nil {
		return *x.KickOutMoney
	}
	return 0
}

func (x *GameServerRegInfo) GetMaxOdd() int32 {
	if x != nil && x.MaxOdd != nil {
		return *x.MaxOdd
	}
	return 0
}

func (x *GameServerRegInfo) GetGameType() int32 {
	if x != nil && x.GameType != nil {
		return *x.GameType
	}
	return 0
}

func (x *GameServerRegInfo) GetRoomDesc() string {
	if x != nil && x.RoomDesc != nil {
		return *x.RoomDesc
	}
	return ""
}

func (x *GameServerRegInfo) GetTipBetRange() string {
	if x != nil && x.TipBetRange != nil {
		return *x.TipBetRange
	}
	return ""
}

//大厅服务器向前廳注册信息
type HallServerRegInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HallID     *int32  `protobuf:"varint,1,req,name=HallID" json:"HallID,omitempty"`        //游戏ID
	HallName   *string `protobuf:"bytes,2,opt,name=HallName" json:"HallName,omitempty"`     //游戏名称
	ServerID   *int32  `protobuf:"varint,3,req,name=ServerID" json:"ServerID,omitempty"`    //服务器ID
	ServerName *string `protobuf:"bytes,4,opt,name=ServerName" json:"ServerName,omitempty"` //服务器名称
	IPAddress  *string `protobuf:"bytes,7,req,name=IPAddress" json:"IPAddress,omitempty"`   //服务器IP
	Port       *int32  `protobuf:"varint,8,req,name=Port" json:"Port,omitempty"`            //服务器端口
}

func (x *HallServerRegInfo) Reset() {
	*x = HallServerRegInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ServerMgmMsg_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HallServerRegInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HallServerRegInfo) ProtoMessage() {}

func (x *HallServerRegInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ServerMgmMsg_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HallServerRegInfo.ProtoReflect.Descriptor instead.
func (*HallServerRegInfo) Descriptor() ([]byte, []int) {
	return file_ServerMgmMsg_proto_rawDescGZIP(), []int{2}
}

func (x *HallServerRegInfo) GetHallID() int32 {
	if x != nil && x.HallID != nil {
		return *x.HallID
	}
	return 0
}

func (x *HallServerRegInfo) GetHallName() string {
	if x != nil && x.HallName != nil {
		return *x.HallName
	}
	return ""
}

func (x *HallServerRegInfo) GetServerID() int32 {
	if x != nil && x.ServerID != nil {
		return *x.ServerID
	}
	return 0
}

func (x *HallServerRegInfo) GetServerName() string {
	if x != nil && x.ServerName != nil {
		return *x.ServerName
	}
	return ""
}

func (x *HallServerRegInfo) GetIPAddress() string {
	if x != nil && x.IPAddress != nil {
		return *x.IPAddress
	}
	return ""
}

func (x *HallServerRegInfo) GetPort() int32 {
	if x != nil && x.Port != nil {
		return *x.Port
	}
	return 0
}

var File_ServerMgmMsg_proto protoreflect.FileDescriptor

var file_ServerMgmMsg_proto_rawDesc = []byte{
	0x0a, 0x12, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x67, 0x6d, 0x4d, 0x73, 0x67, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4b,
	0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1a, 0x0a, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0xe1, 0x04, 0x0a, 0x11,
	0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x67, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x61, 0x6d,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x47, 0x61, 0x6d,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x05, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x04, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x07, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x08, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x04, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4d, 0x6f,
	0x6e, 0x65, 0x79, 0x18, 0x09, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x61, 0x73, 0x65, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x18, 0x0a, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x42, 0x61, 0x73, 0x65, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0b, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x48,
	0x6f, 0x73, 0x74, 0x41, 0x6e, 0x64, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x48, 0x6f, 0x73, 0x74, 0x41, 0x6e, 0x64, 0x42, 0x61, 0x63, 0x6b, 0x75,
	0x70, 0x12, 0x26, 0x0a, 0x0e, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x41, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x4f, 0x53,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x49,
	0x4f, 0x53, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x4b, 0x69, 0x63,
	0x6b, 0x4f, 0x75, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x4b, 0x69, 0x63, 0x6b, 0x4f, 0x75, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x4d, 0x61, 0x78, 0x4f, 0x64, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4d,
	0x61, 0x78, 0x4f, 0x64, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x44, 0x65, 0x73, 0x63, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x44, 0x65, 0x73, 0x63, 0x12, 0x20, 0x0a,
	0x0b, 0x54, 0x69, 0x70, 0x42, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x54, 0x69, 0x70, 0x42, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x22,
	0xb5, 0x01, 0x0a, 0x11, 0x48, 0x61, 0x6c, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65,
	0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x61, 0x6c, 0x6c, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x48, 0x61, 0x6c, 0x6c, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x48, 0x61, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x48, 0x61, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x07, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x08, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x6e, 0x65, 0x74,
	0x70, 0x72, 0x6f, 0x74, 0x6f,
}

var (
	file_ServerMgmMsg_proto_rawDescOnce sync.Once
	file_ServerMgmMsg_proto_rawDescData = file_ServerMgmMsg_proto_rawDesc
)

func file_ServerMgmMsg_proto_rawDescGZIP() []byte {
	file_ServerMgmMsg_proto_rawDescOnce.Do(func() {
		file_ServerMgmMsg_proto_rawDescData = protoimpl.X.CompressGZIP(file_ServerMgmMsg_proto_rawDescData)
	})
	return file_ServerMgmMsg_proto_rawDescData
}

var file_ServerMgmMsg_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_ServerMgmMsg_proto_goTypes = []interface{}{
	(*ServerRegInfo)(nil),     // 0: netproto.ServerRegInfo
	(*GameServerRegInfo)(nil), // 1: netproto.GameServerRegInfo
	(*HallServerRegInfo)(nil), // 2: netproto.HallServerRegInfo
}
var file_ServerMgmMsg_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_ServerMgmMsg_proto_init() }
func file_ServerMgmMsg_proto_init() {
	if File_ServerMgmMsg_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ServerMgmMsg_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerRegInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ServerMgmMsg_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameServerRegInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ServerMgmMsg_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HallServerRegInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ServerMgmMsg_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ServerMgmMsg_proto_goTypes,
		DependencyIndexes: file_ServerMgmMsg_proto_depIdxs,
		MessageInfos:      file_ServerMgmMsg_proto_msgTypes,
	}.Build()
	File_ServerMgmMsg_proto = out.File
	file_ServerMgmMsg_proto_rawDesc = nil
	file_ServerMgmMsg_proto_goTypes = nil
	file_ServerMgmMsg_proto_depIdxs = nil
}
