// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: DBServer.proto

package netproto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type DBServerClassID int32

const (
	DBServerClassID_DBRetID                     DBServerClassID = 1
	DBServerClassID_HallServerStartID           DBServerClassID = 2
	DBServerClassID_GameServerStartID           DBServerClassID = 3
	DBServerClassID_HallServerStartRetID        DBServerClassID = 4
	DBServerClassID_GameServerStartRetID        DBServerClassID = 5
	DBServerClassID_LogoutRoomID                DBServerClassID = 6
	DBServerClassID_UpdateUserScoreID           DBServerClassID = 7
	DBServerClassID_BlockIPID                   DBServerClassID = 8
	DBServerClassID_LoadBlockIPID               DBServerClassID = 9
	DBServerClassID_BlockIPListID               DBServerClassID = 10
	DBServerClassID_DealLogID                   DBServerClassID = 11
	DBServerClassID_LogonRobotID                DBServerClassID = 12
	DBServerClassID_LogonRobotRetID             DBServerClassID = 13
	DBServerClassID_LogoutRobotID               DBServerClassID = 14
	DBServerClassID_GameVerID                   DBServerClassID = 15
	DBServerClassID_GameVerRetID                DBServerClassID = 16
	DBServerClassID_UpdateExperenceScore        DBServerClassID = 17 //體驗金幣
	DBServerClassID_UpdatePiSaiScoreID          DBServerClassID = 18 //比賽積分
	DBServerClassID_UpdateContestUserDataID     DBServerClassID = 19 //更新比賽活動用戶資料
	DBServerClassID_GetContestUserDataID        DBServerClassID = 20 //取得比賽活動用戶資料
	DBServerClassID_GetContestUserDataRetID     DBServerClassID = 21 //回傳比賽活動用戶資料
	DBServerClassID_UpdateGameJackpotScore      DBServerClassID = 22 //更新遊戲獎金池
	DBServerClassID_GetAreaConfigID             DBServerClassID = 23 //取得大廳AreaId的AreaConfig
	DBServerClassID_GetAreaConfigRetID          DBServerClassID = 24 //回傳大廳AreaId的AreaConfig
	DBServerClassID_GetAreaServerRelationsID    DBServerClassID = 25 //取得遊戲渠道
	DBServerClassID_GetAreaServerRelationsRetID DBServerClassID = 26 //回傳遊戲渠道
	DBServerClassID_RobotConfigID               DBServerClassID = 27
	DBServerClassID_RobotConfigRetID            DBServerClassID = 28
	DBServerClassID_RTPNewPlayerStatusUpdate    DBServerClassID = 29 //更新新手RTP玩家狀態, 修改為非新手
	DBServerClassID_BetEventID                  DBServerClassID = 30 //這功能主要是我們有發生玩家 下注和進入遊戲的錢包對不上
	DBServerClassID_CreateTotalBetOrder         DBServerClassID = 31 //新增注單
	DBServerClassID_CreatePayout                DBServerClassID = 32 //注單派彩
	DBServerClassID_CreatePerGame               DBServerClassID = 33 //新增遊戲每局資料
	DBServerClassID_CreateFishExtraDetail       DBServerClassID = 34 //新增遊戲額外詳情
	DBServerClassID_CreateOperateLog            DBServerClassID = 35 //新增操作詳情
)

// Enum value maps for DBServerClassID.
var (
	DBServerClassID_name = map[int32]string{
		1:  "DBRetID",
		2:  "HallServerStartID",
		3:  "GameServerStartID",
		4:  "HallServerStartRetID",
		5:  "GameServerStartRetID",
		6:  "LogoutRoomID",
		7:  "UpdateUserScoreID",
		8:  "BlockIPID",
		9:  "LoadBlockIPID",
		10: "BlockIPListID",
		11: "DealLogID",
		12: "LogonRobotID",
		13: "LogonRobotRetID",
		14: "LogoutRobotID",
		15: "GameVerID",
		16: "GameVerRetID",
		17: "UpdateExperenceScore",
		18: "UpdatePiSaiScoreID",
		19: "UpdateContestUserDataID",
		20: "GetContestUserDataID",
		21: "GetContestUserDataRetID",
		22: "UpdateGameJackpotScore",
		23: "GetAreaConfigID",
		24: "GetAreaConfigRetID",
		25: "GetAreaServerRelationsID",
		26: "GetAreaServerRelationsRetID",
		27: "RobotConfigID",
		28: "RobotConfigRetID",
		29: "RTPNewPlayerStatusUpdate",
		30: "BetEventID",
		31: "CreateTotalBetOrder",
		32: "CreatePayout",
		33: "CreatePerGame",
		34: "CreateFishExtraDetail",
		35: "CreateOperateLog",
	}
	DBServerClassID_value = map[string]int32{
		"DBRetID":                     1,
		"HallServerStartID":           2,
		"GameServerStartID":           3,
		"HallServerStartRetID":        4,
		"GameServerStartRetID":        5,
		"LogoutRoomID":                6,
		"UpdateUserScoreID":           7,
		"BlockIPID":                   8,
		"LoadBlockIPID":               9,
		"BlockIPListID":               10,
		"DealLogID":                   11,
		"LogonRobotID":                12,
		"LogonRobotRetID":             13,
		"LogoutRobotID":               14,
		"GameVerID":                   15,
		"GameVerRetID":                16,
		"UpdateExperenceScore":        17,
		"UpdatePiSaiScoreID":          18,
		"UpdateContestUserDataID":     19,
		"GetContestUserDataID":        20,
		"GetContestUserDataRetID":     21,
		"UpdateGameJackpotScore":      22,
		"GetAreaConfigID":             23,
		"GetAreaConfigRetID":          24,
		"GetAreaServerRelationsID":    25,
		"GetAreaServerRelationsRetID": 26,
		"RobotConfigID":               27,
		"RobotConfigRetID":            28,
		"RTPNewPlayerStatusUpdate":    29,
		"BetEventID":                  30,
		"CreateTotalBetOrder":         31,
		"CreatePayout":                32,
		"CreatePerGame":               33,
		"CreateFishExtraDetail":       34,
		"CreateOperateLog":            35,
	}
)

func (x DBServerClassID) Enum() *DBServerClassID {
	p := new(DBServerClassID)
	*p = x
	return p
}

func (x DBServerClassID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DBServerClassID) Descriptor() protoreflect.EnumDescriptor {
	return file_DBServer_proto_enumTypes[0].Descriptor()
}

func (DBServerClassID) Type() protoreflect.EnumType {
	return &file_DBServer_proto_enumTypes[0]
}

func (x DBServerClassID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *DBServerClassID) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = DBServerClassID(num)
	return nil
}

// Deprecated: Use DBServerClassID.Descriptor instead.
func (DBServerClassID) EnumDescriptor() ([]byte, []int) {
	return file_DBServer_proto_rawDescGZIP(), []int{0}
}

var File_DBServer_proto protoreflect.FileDescriptor

var file_DBServer_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x44, 0x42, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2a, 0x9c, 0x06, 0x0a, 0x0f, 0x44,
	0x42, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x44, 0x12, 0x0b,
	0x0a, 0x07, 0x44, 0x42, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x48,
	0x61, 0x6c, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x49, 0x44,
	0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x49, 0x44, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x48, 0x61, 0x6c,
	0x6c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x74, 0x49,
	0x44, 0x10, 0x04, 0x12, 0x18, 0x0a, 0x14, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10, 0x05, 0x12, 0x10, 0x0a,
	0x0c, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x10, 0x06, 0x12,
	0x15, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x49, 0x44, 0x10, 0x07, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49,
	0x50, 0x49, 0x44, 0x10, 0x08, 0x12, 0x11, 0x0a, 0x0d, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x49, 0x50, 0x49, 0x44, 0x10, 0x09, 0x12, 0x11, 0x0a, 0x0d, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x49, 0x50, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x44, 0x10, 0x0a, 0x12, 0x0d, 0x0a, 0x09, 0x44,
	0x65, 0x61, 0x6c, 0x4c, 0x6f, 0x67, 0x49, 0x44, 0x10, 0x0b, 0x12, 0x10, 0x0a, 0x0c, 0x4c, 0x6f,
	0x67, 0x6f, 0x6e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x49, 0x44, 0x10, 0x0c, 0x12, 0x13, 0x0a, 0x0f,
	0x4c, 0x6f, 0x67, 0x6f, 0x6e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10,
	0x0d, 0x12, 0x11, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x6f, 0x62, 0x6f, 0x74,
	0x49, 0x44, 0x10, 0x0e, 0x12, 0x0d, 0x0a, 0x09, 0x47, 0x61, 0x6d, 0x65, 0x56, 0x65, 0x72, 0x49,
	0x44, 0x10, 0x0f, 0x12, 0x10, 0x0a, 0x0c, 0x47, 0x61, 0x6d, 0x65, 0x56, 0x65, 0x72, 0x52, 0x65,
	0x74, 0x49, 0x44, 0x10, 0x10, 0x12, 0x18, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45,
	0x78, 0x70, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x10, 0x11, 0x12,
	0x16, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x69, 0x53, 0x61, 0x69, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x49, 0x44, 0x10, 0x12, 0x12, 0x1b, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x49, 0x44, 0x10, 0x13, 0x12, 0x18, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x49, 0x44, 0x10, 0x14, 0x12, 0x1b,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10, 0x15, 0x12, 0x1a, 0x0a, 0x16, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x4a, 0x61, 0x63, 0x6b, 0x70, 0x6f, 0x74,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x10, 0x16, 0x12, 0x13, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x72,
	0x65, 0x61, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x44, 0x10, 0x17, 0x12, 0x16, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x41, 0x72, 0x65, 0x61, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x74,
	0x49, 0x44, 0x10, 0x18, 0x12, 0x1c, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x72, 0x65, 0x61, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x44,
	0x10, 0x19, 0x12, 0x1f, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41, 0x72, 0x65, 0x61, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x74, 0x49,
	0x44, 0x10, 0x1a, 0x12, 0x11, 0x0a, 0x0d, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x49, 0x44, 0x10, 0x1b, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10, 0x1c, 0x12, 0x1c, 0x0a, 0x18,
	0x52, 0x54, 0x50, 0x4e, 0x65, 0x77, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x10, 0x1d, 0x12, 0x0e, 0x0a, 0x0a, 0x42, 0x65,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x10, 0x1e, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x10, 0x1f, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79,
	0x6f, 0x75, 0x74, 0x10, 0x20, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x10, 0x21, 0x12, 0x19, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x46, 0x69, 0x73, 0x68, 0x45, 0x78, 0x74, 0x72, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x10, 0x22, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x10, 0x23, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x6e,
	0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f,
}

var (
	file_DBServer_proto_rawDescOnce sync.Once
	file_DBServer_proto_rawDescData = file_DBServer_proto_rawDesc
)

func file_DBServer_proto_rawDescGZIP() []byte {
	file_DBServer_proto_rawDescOnce.Do(func() {
		file_DBServer_proto_rawDescData = protoimpl.X.CompressGZIP(file_DBServer_proto_rawDescData)
	})
	return file_DBServer_proto_rawDescData
}

var file_DBServer_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_DBServer_proto_goTypes = []interface{}{
	(DBServerClassID)(0), // 0: netproto.DBServerClassID
}
var file_DBServer_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_DBServer_proto_init() }
func file_DBServer_proto_init() {
	if File_DBServer_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_DBServer_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_DBServer_proto_goTypes,
		DependencyIndexes: file_DBServer_proto_depIdxs,
		EnumInfos:         file_DBServer_proto_enumTypes,
	}.Build()
	File_DBServer_proto = out.File
	file_DBServer_proto_rawDesc = nil
	file_DBServer_proto_goTypes = nil
	file_DBServer_proto_depIdxs = nil
}
