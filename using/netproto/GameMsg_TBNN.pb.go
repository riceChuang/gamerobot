// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: GameMsg_TBNN.proto

package netproto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type TBNN_GameRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZhuangRet *TBNN_UserRet   `protobuf:"bytes,1,req,name=ZhuangRet" json:"ZhuangRet,omitempty"`
	UserRet   []*TBNN_UserRet `protobuf:"bytes,2,rep,name=UserRet" json:"UserRet,omitempty"`
}

func (x *TBNN_GameRet) Reset() {
	*x = TBNN_GameRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_TBNN_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TBNN_GameRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TBNN_GameRet) ProtoMessage() {}

func (x *TBNN_GameRet) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_TBNN_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TBNN_GameRet.ProtoReflect.Descriptor instead.
func (*TBNN_GameRet) Descriptor() ([]byte, []int) {
	return file_GameMsg_TBNN_proto_rawDescGZIP(), []int{0}
}

func (x *TBNN_GameRet) GetZhuangRet() *TBNN_UserRet {
	if x != nil {
		return x.ZhuangRet
	}
	return nil
}

func (x *TBNN_GameRet) GetUserRet() []*TBNN_UserRet {
	if x != nil {
		return x.UserRet
	}
	return nil
}

type TBNN_UserRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User            *GameUser    `protobuf:"bytes,1,req,name=User" json:"User,omitempty"`
	WinLose         *int64       `protobuf:"varint,2,req,name=WinLose" json:"WinLose,omitempty"`
	NiuNiuRet       *int32       `protobuf:"varint,3,req,name=NiuNiuRet" json:"NiuNiuRet,omitempty"`
	NiuNiuRetNumber *int32       `protobuf:"varint,4,req,name=NiuNiuRetNumber" json:"NiuNiuRetNumber,omitempty"`
	NiuNiuBetTimes  *int32       `protobuf:"varint,5,req,name=NiuNiuBetTimes" json:"NiuNiuBetTimes,omitempty"`
	CardGroup       []*PokerCard `protobuf:"bytes,6,rep,name=CardGroup" json:"CardGroup,omitempty"`
	JackpotBonus    *int64       `protobuf:"varint,7,opt,name=JackpotBonus" json:"JackpotBonus,omitempty"`
}

func (x *TBNN_UserRet) Reset() {
	*x = TBNN_UserRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_TBNN_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TBNN_UserRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TBNN_UserRet) ProtoMessage() {}

func (x *TBNN_UserRet) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_TBNN_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TBNN_UserRet.ProtoReflect.Descriptor instead.
func (*TBNN_UserRet) Descriptor() ([]byte, []int) {
	return file_GameMsg_TBNN_proto_rawDescGZIP(), []int{1}
}

func (x *TBNN_UserRet) GetUser() *GameUser {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *TBNN_UserRet) GetWinLose() int64 {
	if x != nil && x.WinLose != nil {
		return *x.WinLose
	}
	return 0
}

func (x *TBNN_UserRet) GetNiuNiuRet() int32 {
	if x != nil && x.NiuNiuRet != nil {
		return *x.NiuNiuRet
	}
	return 0
}

func (x *TBNN_UserRet) GetNiuNiuRetNumber() int32 {
	if x != nil && x.NiuNiuRetNumber != nil {
		return *x.NiuNiuRetNumber
	}
	return 0
}

func (x *TBNN_UserRet) GetNiuNiuBetTimes() int32 {
	if x != nil && x.NiuNiuBetTimes != nil {
		return *x.NiuNiuBetTimes
	}
	return 0
}

func (x *TBNN_UserRet) GetCardGroup() []*PokerCard {
	if x != nil {
		return x.CardGroup
	}
	return nil
}

func (x *TBNN_UserRet) GetJackpotBonus() int64 {
	if x != nil && x.JackpotBonus != nil {
		return *x.JackpotBonus
	}
	return 0
}

type TBNN_UserBetInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BetTimes []int64 `protobuf:"varint,1,rep,name=BetTimes" json:"BetTimes,omitempty"`
}

func (x *TBNN_UserBetInfo) Reset() {
	*x = TBNN_UserBetInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_TBNN_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TBNN_UserBetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TBNN_UserBetInfo) ProtoMessage() {}

func (x *TBNN_UserBetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_TBNN_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TBNN_UserBetInfo.ProtoReflect.Descriptor instead.
func (*TBNN_UserBetInfo) Descriptor() ([]byte, []int) {
	return file_GameMsg_TBNN_proto_rawDescGZIP(), []int{2}
}

func (x *TBNN_UserBetInfo) GetBetTimes() []int64 {
	if x != nil {
		return x.BetTimes
	}
	return nil
}

type TBNN_NotifyUserBaseScore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID    *int32 `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`
	BaseScore *int32 `protobuf:"varint,2,req,name=BaseScore" json:"BaseScore,omitempty"`
}

func (x *TBNN_NotifyUserBaseScore) Reset() {
	*x = TBNN_NotifyUserBaseScore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_TBNN_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TBNN_NotifyUserBaseScore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TBNN_NotifyUserBaseScore) ProtoMessage() {}

func (x *TBNN_NotifyUserBaseScore) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_TBNN_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TBNN_NotifyUserBaseScore.ProtoReflect.Descriptor instead.
func (*TBNN_NotifyUserBaseScore) Descriptor() ([]byte, []int) {
	return file_GameMsg_TBNN_proto_rawDescGZIP(), []int{3}
}

func (x *TBNN_NotifyUserBaseScore) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *TBNN_NotifyUserBaseScore) GetBaseScore() int32 {
	if x != nil && x.BaseScore != nil {
		return *x.BaseScore
	}
	return 0
}

type TBNN_NotifyGameBaseScore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameBet []*TBNN_NotifyUserBaseScore `protobuf:"bytes,1,rep,name=GameBet" json:"GameBet,omitempty"`
}

func (x *TBNN_NotifyGameBaseScore) Reset() {
	*x = TBNN_NotifyGameBaseScore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_TBNN_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TBNN_NotifyGameBaseScore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TBNN_NotifyGameBaseScore) ProtoMessage() {}

func (x *TBNN_NotifyGameBaseScore) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_TBNN_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TBNN_NotifyGameBaseScore.ProtoReflect.Descriptor instead.
func (*TBNN_NotifyGameBaseScore) Descriptor() ([]byte, []int) {
	return file_GameMsg_TBNN_proto_rawDescGZIP(), []int{4}
}

func (x *TBNN_NotifyGameBaseScore) GetGameBet() []*TBNN_NotifyUserBaseScore {
	if x != nil {
		return x.GameBet
	}
	return nil
}

//重连 TBNN_GameSceneID
type TBNN_GameScene struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameStep           *int32              `protobuf:"varint,1,req,name=GameStep" json:"GameStep,omitempty"`
	UserPoker          *UserPoker          `protobuf:"bytes,2,opt,name=UserPoker" json:"UserPoker,omitempty"`
	BetInfo            *TBNN_NotifyUserBet `protobuf:"bytes,3,opt,name=betInfo" json:"betInfo,omitempty"`
	ElapsedSeconds     *int32              `protobuf:"varint,4,opt,name=ElapsedSeconds" json:"ElapsedSeconds,omitempty"`
	GameRet            *TBNN_GameRet       `protobuf:"bytes,5,opt,name=GameRet" json:"GameRet,omitempty"`
	FinishedGroupUsers []int32             `protobuf:"varint,6,rep,name=FinishedGroupUsers" json:"FinishedGroupUsers,omitempty"`
	UserBetInfo        *TBNN_UserBetInfo   `protobuf:"bytes,7,opt,name=UserBetInfo" json:"UserBetInfo,omitempty"`
}

func (x *TBNN_GameScene) Reset() {
	*x = TBNN_GameScene{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_TBNN_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TBNN_GameScene) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TBNN_GameScene) ProtoMessage() {}

func (x *TBNN_GameScene) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_TBNN_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TBNN_GameScene.ProtoReflect.Descriptor instead.
func (*TBNN_GameScene) Descriptor() ([]byte, []int) {
	return file_GameMsg_TBNN_proto_rawDescGZIP(), []int{5}
}

func (x *TBNN_GameScene) GetGameStep() int32 {
	if x != nil && x.GameStep != nil {
		return *x.GameStep
	}
	return 0
}

func (x *TBNN_GameScene) GetUserPoker() *UserPoker {
	if x != nil {
		return x.UserPoker
	}
	return nil
}

func (x *TBNN_GameScene) GetBetInfo() *TBNN_NotifyUserBet {
	if x != nil {
		return x.BetInfo
	}
	return nil
}

func (x *TBNN_GameScene) GetElapsedSeconds() int32 {
	if x != nil && x.ElapsedSeconds != nil {
		return *x.ElapsedSeconds
	}
	return 0
}

func (x *TBNN_GameScene) GetGameRet() *TBNN_GameRet {
	if x != nil {
		return x.GameRet
	}
	return nil
}

func (x *TBNN_GameScene) GetFinishedGroupUsers() []int32 {
	if x != nil {
		return x.FinishedGroupUsers
	}
	return nil
}

func (x *TBNN_GameScene) GetUserBetInfo() *TBNN_UserBetInfo {
	if x != nil {
		return x.UserBetInfo
	}
	return nil
}

//游戏设置 TBNN_GameSettingID
type TBNN_GameSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BetTimes     []int32 `protobuf:"varint,1,rep,name=BetTimes" json:"BetTimes,omitempty"`
	BetTimeout   *int32  `protobuf:"varint,2,req,name=BetTimeout" json:"BetTimeout,omitempty"`
	BaseScore    *int32  `protobuf:"varint,3,req,name=BaseScore" json:"BaseScore,omitempty"`
	TableNo      *int32  `protobuf:"varint,4,req,name=TableNo" json:"TableNo,omitempty"`
	GameID       *int32  `protobuf:"varint,5,req,name=GameID" json:"GameID,omitempty"`
	ReadyTimeout *int32  `protobuf:"varint,6,req,name=ReadyTimeout" json:"ReadyTimeout,omitempty"`
}

func (x *TBNN_GameSetting) Reset() {
	*x = TBNN_GameSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_TBNN_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TBNN_GameSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TBNN_GameSetting) ProtoMessage() {}

func (x *TBNN_GameSetting) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_TBNN_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TBNN_GameSetting.ProtoReflect.Descriptor instead.
func (*TBNN_GameSetting) Descriptor() ([]byte, []int) {
	return file_GameMsg_TBNN_proto_rawDescGZIP(), []int{6}
}

func (x *TBNN_GameSetting) GetBetTimes() []int32 {
	if x != nil {
		return x.BetTimes
	}
	return nil
}

func (x *TBNN_GameSetting) GetBetTimeout() int32 {
	if x != nil && x.BetTimeout != nil {
		return *x.BetTimeout
	}
	return 0
}

func (x *TBNN_GameSetting) GetBaseScore() int32 {
	if x != nil && x.BaseScore != nil {
		return *x.BaseScore
	}
	return 0
}

func (x *TBNN_GameSetting) GetTableNo() int32 {
	if x != nil && x.TableNo != nil {
		return *x.TableNo
	}
	return 0
}

func (x *TBNN_GameSetting) GetGameID() int32 {
	if x != nil && x.GameID != nil {
		return *x.GameID
	}
	return 0
}

func (x *TBNN_GameSetting) GetReadyTimeout() int32 {
	if x != nil && x.ReadyTimeout != nil {
		return *x.ReadyTimeout
	}
	return 0
}

//游戏状态广播 TBNN_GameStepID
type TBNN_GameStep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Step *int32 `protobuf:"varint,1,req,name=Step" json:"Step,omitempty"` //流程
	Time *int32 `protobuf:"varint,2,req,name=Time" json:"Time,omitempty"` //時間秒
}

func (x *TBNN_GameStep) Reset() {
	*x = TBNN_GameStep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_TBNN_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TBNN_GameStep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TBNN_GameStep) ProtoMessage() {}

func (x *TBNN_GameStep) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_TBNN_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TBNN_GameStep.ProtoReflect.Descriptor instead.
func (*TBNN_GameStep) Descriptor() ([]byte, []int) {
	return file_GameMsg_TBNN_proto_rawDescGZIP(), []int{7}
}

func (x *TBNN_GameStep) GetStep() int32 {
	if x != nil && x.Step != nil {
		return *x.Step
	}
	return 0
}

func (x *TBNN_GameStep) GetTime() int32 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

//下注信息 OnUserBetID
type TBNN_NotifyUserBet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserBets []*TBNN_UserBet `protobuf:"bytes,1,rep,name=UserBets" json:"UserBets,omitempty"`
}

func (x *TBNN_NotifyUserBet) Reset() {
	*x = TBNN_NotifyUserBet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_TBNN_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TBNN_NotifyUserBet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TBNN_NotifyUserBet) ProtoMessage() {}

func (x *TBNN_NotifyUserBet) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_TBNN_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TBNN_NotifyUserBet.ProtoReflect.Descriptor instead.
func (*TBNN_NotifyUserBet) Descriptor() ([]byte, []int) {
	return file_GameMsg_TBNN_proto_rawDescGZIP(), []int{8}
}

func (x *TBNN_NotifyUserBet) GetUserBets() []*TBNN_UserBet {
	if x != nil {
		return x.UserBets
	}
	return nil
}

type TBNN_UserBet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID    *int32 `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`
	Times     *int64 `protobuf:"varint,2,req,name=Times" json:"Times,omitempty"`
	SystemSet *bool  `protobuf:"varint,3,req,name=SystemSet" json:"SystemSet,omitempty"`
}

func (x *TBNN_UserBet) Reset() {
	*x = TBNN_UserBet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_TBNN_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TBNN_UserBet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TBNN_UserBet) ProtoMessage() {}

func (x *TBNN_UserBet) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_TBNN_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TBNN_UserBet.ProtoReflect.Descriptor instead.
func (*TBNN_UserBet) Descriptor() ([]byte, []int) {
	return file_GameMsg_TBNN_proto_rawDescGZIP(), []int{9}
}

func (x *TBNN_UserBet) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *TBNN_UserBet) GetTimes() int64 {
	if x != nil && x.Times != nil {
		return *x.Times
	}
	return 0
}

func (x *TBNN_UserBet) GetSystemSet() bool {
	if x != nil && x.SystemSet != nil {
		return *x.SystemSet
	}
	return false
}

//游戏编号 TBNN_TBNNGameNo
type TBNN_GameNoInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameNo *string `protobuf:"bytes,1,req,name=GameNo" json:"GameNo,omitempty"`
}

func (x *TBNN_GameNoInfo) Reset() {
	*x = TBNN_GameNoInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_TBNN_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TBNN_GameNoInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TBNN_GameNoInfo) ProtoMessage() {}

func (x *TBNN_GameNoInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_TBNN_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TBNN_GameNoInfo.ProtoReflect.Descriptor instead.
func (*TBNN_GameNoInfo) Descriptor() ([]byte, []int) {
	return file_GameMsg_TBNN_proto_rawDescGZIP(), []int{10}
}

func (x *TBNN_GameNoInfo) GetGameNo() string {
	if x != nil && x.GameNo != nil {
		return *x.GameNo
	}
	return ""
}

type TBNN_BetTimes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Times *int64 `protobuf:"varint,1,req,name=Times" json:"Times,omitempty"`
}

func (x *TBNN_BetTimes) Reset() {
	*x = TBNN_BetTimes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_TBNN_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TBNN_BetTimes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TBNN_BetTimes) ProtoMessage() {}

func (x *TBNN_BetTimes) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_TBNN_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TBNN_BetTimes.ProtoReflect.Descriptor instead.
func (*TBNN_BetTimes) Descriptor() ([]byte, []int) {
	return file_GameMsg_TBNN_proto_rawDescGZIP(), []int{11}
}

func (x *TBNN_BetTimes) GetTimes() int64 {
	if x != nil && x.Times != nil {
		return *x.Times
	}
	return 0
}

type TBNN_NotifyUserFinish struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID          *int32       `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`
	NiuNiuRet       *int32       `protobuf:"varint,2,req,name=NiuNiuRet" json:"NiuNiuRet,omitempty"`
	NiuNiuRetNumber *int32       `protobuf:"varint,3,req,name=NiuNiuRetNumber" json:"NiuNiuRetNumber,omitempty"`
	CardGroup       []*PokerCard `protobuf:"bytes,4,rep,name=CardGroup" json:"CardGroup,omitempty"`
}

func (x *TBNN_NotifyUserFinish) Reset() {
	*x = TBNN_NotifyUserFinish{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_TBNN_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TBNN_NotifyUserFinish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TBNN_NotifyUserFinish) ProtoMessage() {}

func (x *TBNN_NotifyUserFinish) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_TBNN_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TBNN_NotifyUserFinish.ProtoReflect.Descriptor instead.
func (*TBNN_NotifyUserFinish) Descriptor() ([]byte, []int) {
	return file_GameMsg_TBNN_proto_rawDescGZIP(), []int{12}
}

func (x *TBNN_NotifyUserFinish) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *TBNN_NotifyUserFinish) GetNiuNiuRet() int32 {
	if x != nil && x.NiuNiuRet != nil {
		return *x.NiuNiuRet
	}
	return 0
}

func (x *TBNN_NotifyUserFinish) GetNiuNiuRetNumber() int32 {
	if x != nil && x.NiuNiuRetNumber != nil {
		return *x.NiuNiuRetNumber
	}
	return 0
}

func (x *TBNN_NotifyUserFinish) GetCardGroup() []*PokerCard {
	if x != nil {
		return x.CardGroup
	}
	return nil
}

var File_GameMsg_TBNN_proto protoreflect.FileDescriptor

var file_GameMsg_TBNN_proto_rawDesc = []byte{
	0x0a, 0x12, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x5f, 0x54, 0x42, 0x4e, 0x4e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d,
	0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x76, 0x0a,
	0x0c, 0x54, 0x42, 0x4e, 0x4e, 0x5f, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x74, 0x12, 0x34, 0x0a,
	0x09, 0x5a, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x52, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x42, 0x4e, 0x4e,
	0x5f, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x74, 0x52, 0x09, 0x5a, 0x68, 0x75, 0x61, 0x6e, 0x67,
	0x52, 0x65, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x42, 0x4e, 0x4e, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x74, 0x52, 0x07, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x74, 0x22, 0x97, 0x02, 0x0a, 0x0c, 0x54, 0x42, 0x4e, 0x4e, 0x5f, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x18,
	0x0a, 0x07, 0x57, 0x69, 0x6e, 0x4c, 0x6f, 0x73, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52,
	0x07, 0x57, 0x69, 0x6e, 0x4c, 0x6f, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x69, 0x75, 0x4e,
	0x69, 0x75, 0x52, 0x65, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x4e, 0x69, 0x75,
	0x4e, 0x69, 0x75, 0x52, 0x65, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x4e, 0x69, 0x75, 0x4e, 0x69, 0x75,
	0x52, 0x65, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x0f, 0x4e, 0x69, 0x75, 0x4e, 0x69, 0x75, 0x52, 0x65, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x26, 0x0a, 0x0e, 0x4e, 0x69, 0x75, 0x4e, 0x69, 0x75, 0x42, 0x65, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0e, 0x4e, 0x69, 0x75, 0x4e, 0x69, 0x75,
	0x42, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x09, 0x43, 0x61, 0x72, 0x64,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x65,
	0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6f, 0x6b, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64,
	0x52, 0x09, 0x43, 0x61, 0x72, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x4a,
	0x61, 0x63, 0x6b, 0x70, 0x6f, 0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x4a, 0x61, 0x63, 0x6b, 0x70, 0x6f, 0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x22,
	0x2e, 0x0a, 0x10, 0x54, 0x42, 0x4e, 0x4e, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x08, 0x42, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x22,
	0x50, 0x0a, 0x18, 0x54, 0x42, 0x4e, 0x4e, 0x5f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x61, 0x73, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x42, 0x61, 0x73, 0x65, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x22, 0x58, 0x0a, 0x18, 0x54, 0x42, 0x4e, 0x4e, 0x5f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x47, 0x61, 0x6d, 0x65, 0x42, 0x61, 0x73, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x3c, 0x0a,
	0x07, 0x47, 0x61, 0x6d, 0x65, 0x42, 0x65, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x42, 0x4e, 0x4e, 0x5f, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x52, 0x07, 0x47, 0x61, 0x6d, 0x65, 0x42, 0x65, 0x74, 0x22, 0xdf, 0x02, 0x0a, 0x0e,
	0x54, 0x42, 0x4e, 0x4e, 0x5f, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x65, 0x70, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x65, 0x70, 0x12, 0x31, 0x0a, 0x09, 0x55, 0x73,
	0x65, 0x72, 0x50, 0x6f, 0x6b, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6f, 0x6b,
	0x65, 0x72, 0x52, 0x09, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6f, 0x6b, 0x65, 0x72, 0x12, 0x36, 0x0a,
	0x07, 0x62, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x42, 0x4e, 0x4e, 0x5f, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x74, 0x52, 0x07, 0x62, 0x65,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x0e, 0x45, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x64,
	0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x45,
	0x6c, 0x61, 0x70, 0x73, 0x65, 0x64, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x30, 0x0a,
	0x07, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x42, 0x4e, 0x4e, 0x5f, 0x47,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x74, 0x52, 0x07, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x74, 0x12,
	0x2e, 0x0a, 0x12, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x05, 0x52, 0x12, 0x46, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12,
	0x3c, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x42, 0x4e, 0x4e, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xc2, 0x01,
	0x0a, 0x10, 0x54, 0x42, 0x4e, 0x4e, 0x5f, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x42, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x42, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x0a, 0x42, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x42, 0x61, 0x73, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x09, 0x42, 0x61, 0x73, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x6f, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44,
	0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x12, 0x22,
	0x0a, 0x0c, 0x52, 0x65, 0x61, 0x64, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x06,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x0c, 0x52, 0x65, 0x61, 0x64, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x22, 0x37, 0x0a, 0x0d, 0x54, 0x42, 0x4e, 0x4e, 0x5f, 0x47, 0x61, 0x6d, 0x65, 0x53,
	0x74, 0x65, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x74, 0x65, 0x70, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x04, 0x53, 0x74, 0x65, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x48, 0x0a, 0x12, 0x54,
	0x42, 0x4e, 0x4e, 0x5f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65,
	0x74, 0x12, 0x32, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x42, 0x4e, 0x4e, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x74, 0x52, 0x08, 0x55, 0x73, 0x65,
	0x72, 0x42, 0x65, 0x74, 0x73, 0x22, 0x5a, 0x0a, 0x0c, 0x54, 0x42, 0x4e, 0x4e, 0x5f, 0x55, 0x73,
	0x65, 0x72, 0x42, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a,
	0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x05, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x74,
	0x18, 0x03, 0x20, 0x02, 0x28, 0x08, 0x52, 0x09, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65,
	0x74, 0x22, 0x29, 0x0a, 0x0f, 0x54, 0x42, 0x4e, 0x4e, 0x5f, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x6f,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x22, 0x25, 0x0a, 0x0d,
	0x54, 0x42, 0x4e, 0x4e, 0x5f, 0x42, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x05, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x22, 0xaa, 0x01, 0x0a, 0x15, 0x54, 0x42, 0x4e, 0x4e, 0x5f, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x55, 0x73, 0x65, 0x72, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x69, 0x75, 0x4e, 0x69, 0x75, 0x52,
	0x65, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x4e, 0x69, 0x75, 0x4e, 0x69, 0x75,
	0x52, 0x65, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x4e, 0x69, 0x75, 0x4e, 0x69, 0x75, 0x52, 0x65, 0x74,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0f, 0x4e, 0x69,
	0x75, 0x4e, 0x69, 0x75, 0x52, 0x65, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x31, 0x0a,
	0x09, 0x43, 0x61, 0x72, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6f, 0x6b, 0x65,
	0x72, 0x43, 0x61, 0x72, 0x64, 0x52, 0x09, 0x43, 0x61, 0x72, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f,
}

var (
	file_GameMsg_TBNN_proto_rawDescOnce sync.Once
	file_GameMsg_TBNN_proto_rawDescData = file_GameMsg_TBNN_proto_rawDesc
)

func file_GameMsg_TBNN_proto_rawDescGZIP() []byte {
	file_GameMsg_TBNN_proto_rawDescOnce.Do(func() {
		file_GameMsg_TBNN_proto_rawDescData = protoimpl.X.CompressGZIP(file_GameMsg_TBNN_proto_rawDescData)
	})
	return file_GameMsg_TBNN_proto_rawDescData
}

var file_GameMsg_TBNN_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_GameMsg_TBNN_proto_goTypes = []interface{}{
	(*TBNN_GameRet)(nil),             // 0: netproto.TBNN_GameRet
	(*TBNN_UserRet)(nil),             // 1: netproto.TBNN_UserRet
	(*TBNN_UserBetInfo)(nil),         // 2: netproto.TBNN_UserBetInfo
	(*TBNN_NotifyUserBaseScore)(nil), // 3: netproto.TBNN_NotifyUserBaseScore
	(*TBNN_NotifyGameBaseScore)(nil), // 4: netproto.TBNN_NotifyGameBaseScore
	(*TBNN_GameScene)(nil),           // 5: netproto.TBNN_GameScene
	(*TBNN_GameSetting)(nil),         // 6: netproto.TBNN_GameSetting
	(*TBNN_GameStep)(nil),            // 7: netproto.TBNN_GameStep
	(*TBNN_NotifyUserBet)(nil),       // 8: netproto.TBNN_NotifyUserBet
	(*TBNN_UserBet)(nil),             // 9: netproto.TBNN_UserBet
	(*TBNN_GameNoInfo)(nil),          // 10: netproto.TBNN_GameNoInfo
	(*TBNN_BetTimes)(nil),            // 11: netproto.TBNN_BetTimes
	(*TBNN_NotifyUserFinish)(nil),    // 12: netproto.TBNN_NotifyUserFinish
	(*GameUser)(nil),                 // 13: netproto.GameUser
	(*PokerCard)(nil),                // 14: netproto.PokerCard
	(*UserPoker)(nil),                // 15: netproto.UserPoker
}
var file_GameMsg_TBNN_proto_depIdxs = []int32{
	1,  // 0: netproto.TBNN_GameRet.ZhuangRet:type_name -> netproto.TBNN_UserRet
	1,  // 1: netproto.TBNN_GameRet.UserRet:type_name -> netproto.TBNN_UserRet
	13, // 2: netproto.TBNN_UserRet.User:type_name -> netproto.GameUser
	14, // 3: netproto.TBNN_UserRet.CardGroup:type_name -> netproto.PokerCard
	3,  // 4: netproto.TBNN_NotifyGameBaseScore.GameBet:type_name -> netproto.TBNN_NotifyUserBaseScore
	15, // 5: netproto.TBNN_GameScene.UserPoker:type_name -> netproto.UserPoker
	8,  // 6: netproto.TBNN_GameScene.betInfo:type_name -> netproto.TBNN_NotifyUserBet
	0,  // 7: netproto.TBNN_GameScene.GameRet:type_name -> netproto.TBNN_GameRet
	2,  // 8: netproto.TBNN_GameScene.UserBetInfo:type_name -> netproto.TBNN_UserBetInfo
	9,  // 9: netproto.TBNN_NotifyUserBet.UserBets:type_name -> netproto.TBNN_UserBet
	14, // 10: netproto.TBNN_NotifyUserFinish.CardGroup:type_name -> netproto.PokerCard
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_GameMsg_TBNN_proto_init() }
func file_GameMsg_TBNN_proto_init() {
	if File_GameMsg_TBNN_proto != nil {
		return
	}
	file_GameMsg_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_GameMsg_TBNN_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TBNN_GameRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_TBNN_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TBNN_UserRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_TBNN_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TBNN_UserBetInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_TBNN_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TBNN_NotifyUserBaseScore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_TBNN_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TBNN_NotifyGameBaseScore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_TBNN_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TBNN_GameScene); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_TBNN_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TBNN_GameSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_TBNN_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TBNN_GameStep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_TBNN_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TBNN_NotifyUserBet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_TBNN_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TBNN_UserBet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_TBNN_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TBNN_GameNoInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_TBNN_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TBNN_BetTimes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_TBNN_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TBNN_NotifyUserFinish); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_GameMsg_TBNN_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_GameMsg_TBNN_proto_goTypes,
		DependencyIndexes: file_GameMsg_TBNN_proto_depIdxs,
		MessageInfos:      file_GameMsg_TBNN_proto_msgTypes,
	}.Build()
	File_GameMsg_TBNN_proto = out.File
	file_GameMsg_TBNN_proto_rawDesc = nil
	file_GameMsg_TBNN_proto_goTypes = nil
	file_GameMsg_TBNN_proto_depIdxs = nil
}
