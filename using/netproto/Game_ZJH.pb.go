// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.14.0
// source: Game_ZJH.proto

package netproto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ZJH_GameMessageClassID int32

const (
	ZJH_GameMessageClassID_GameNo                ZJH_GameMessageClassID = 10001 //遊戲局號
	ZJH_GameMessageClassID_BetBaseId             ZJH_GameMessageClassID = 10002 //下底注 ZJH_BetBase (StoC)
	ZJH_GameMessageClassID_FaPaiId               ZJH_GameMessageClassID = 10003 //發牌廣播 (StoC)
	ZJH_GameMessageClassID_WaitOptID             ZJH_GameMessageClassID = 10004 //可操作項目 ZJH_WaitOpt (StoC)
	ZJH_GameMessageClassID_CurrOptID             ZJH_GameMessageClassID = 10005 //當前操作的位置 ZJH_WaitOptSeat (StoC)
	ZJH_GameMessageClassID_CheckCardsID          ZJH_GameMessageClassID = 10006 //玩家查看手牌 (CtoS)
	ZJH_GameMessageClassID_CheckCardsBroadCastID ZJH_GameMessageClassID = 10007 //玩家查看手牌廣播 (StoC)
	ZJH_GameMessageClassID_UserCardType          ZJH_GameMessageClassID = 10008 //玩家手牌信息 ZJH_Poker (StoC)
	ZJH_GameMessageClassID_CallID                ZJH_GameMessageClassID = 10009 //玩家跟注 (CtoS)
	ZJH_GameMessageClassID_CallBroadCastID       ZJH_GameMessageClassID = 10010 //玩家跟注廣播 ZJH_Call (StoC)
	ZJH_GameMessageClassID_RaiseID               ZJH_GameMessageClassID = 10011 //玩家加注 ZJH_Raise (CtoS)
	ZJH_GameMessageClassID_RaiseBroadCastID      ZJH_GameMessageClassID = 10012 //玩家加注廣播 ZJH_RaiseBrodCast (StoC)
	ZJH_GameMessageClassID_AllinID               ZJH_GameMessageClassID = 10013 //孤注一擲全押操作 (CtoS)
	ZJH_GameMessageClassID_AllinRetID            ZJH_GameMessageClassID = 10014 //孤注一擲全押結果 (StoC)
	ZJH_GameMessageClassID_CompareID             ZJH_GameMessageClassID = 10015 //玩家比牌消息 ZJH_CompareCards (CtoS)
	ZJH_GameMessageClassID_CompareRetID          ZJH_GameMessageClassID = 10016 //玩家比牌结果廣播 ZJH_CompareCardsRet (StoC)
	ZJH_GameMessageClassID_DropID                ZJH_GameMessageClassID = 10017 //玩家棄牌消息 ZJH_Drop (CtoS)
	ZJH_GameMessageClassID_DropBroadCastID       ZJH_GameMessageClassID = 10018 //玩家棄牌廣播 (StoC)
	ZJH_GameMessageClassID_FollowEndID           ZJH_GameMessageClassID = 10019 //受否開啟跟到底 (CtoS)
	ZJH_GameMessageClassID_FollowEndRetID        ZJH_GameMessageClassID = 10020 //受否開啟跟到底 (CtoS)
	ZJH_GameMessageClassID_ProtectOverTimeID     ZJH_GameMessageClassID = 10021 //受否開啟防超時 (CtoS)
	ZJH_GameMessageClassID_ProtectOverTimeRetID  ZJH_GameMessageClassID = 10022 //回覆防超時 (StoC)
	ZJH_GameMessageClassID_GameResultID          ZJH_GameMessageClassID = 10023 //遊戲結果消息 ZJH_GameRet (StoC)
	ZJH_GameMessageClassID_EndUserPokerID        ZJH_GameMessageClassID = 10024 //遊戲結束攤牌 ZJH_EndUserPoker (StoC)
	ZJH_GameMessageClassID_ZJHGameSceneID        ZJH_GameMessageClassID = 10025 //遊戲場景封包 (StoC)
	ZJH_GameMessageClassID_EarlyChangeTable      ZJH_GameMessageClassID = 10026 //提前換桌
	ZJH_GameMessageClassID_GameCurrentTurnID     ZJH_GameMessageClassID = 10027 //遊戲輪數(StoC)
	ZJH_GameMessageClassID_OverRoundBroadCastID  ZJH_GameMessageClassID = 10028 //超過輪數廣播 (StoC)
	ZJH_GameMessageClassID_ErrorRetID            ZJH_GameMessageClassID = 10029 //錯誤訊息封包 (StoC)
)

// Enum value maps for ZJH_GameMessageClassID.
var (
	ZJH_GameMessageClassID_name = map[int32]string{
		10001: "GameNo",
		10002: "BetBaseId",
		10003: "FaPaiId",
		10004: "WaitOptID",
		10005: "CurrOptID",
		10006: "CheckCardsID",
		10007: "CheckCardsBroadCastID",
		10008: "UserCardType",
		10009: "CallID",
		10010: "CallBroadCastID",
		10011: "RaiseID",
		10012: "RaiseBroadCastID",
		10013: "AllinID",
		10014: "AllinRetID",
		10015: "CompareID",
		10016: "CompareRetID",
		10017: "DropID",
		10018: "DropBroadCastID",
		10019: "FollowEndID",
		10020: "FollowEndRetID",
		10021: "ProtectOverTimeID",
		10022: "ProtectOverTimeRetID",
		10023: "GameResultID",
		10024: "EndUserPokerID",
		10025: "ZJHGameSceneID",
		10026: "EarlyChangeTable",
		10027: "GameCurrentTurnID",
		10028: "OverRoundBroadCastID",
		10029: "ErrorRetID",
	}
	ZJH_GameMessageClassID_value = map[string]int32{
		"GameNo":                10001,
		"BetBaseId":             10002,
		"FaPaiId":               10003,
		"WaitOptID":             10004,
		"CurrOptID":             10005,
		"CheckCardsID":          10006,
		"CheckCardsBroadCastID": 10007,
		"UserCardType":          10008,
		"CallID":                10009,
		"CallBroadCastID":       10010,
		"RaiseID":               10011,
		"RaiseBroadCastID":      10012,
		"AllinID":               10013,
		"AllinRetID":            10014,
		"CompareID":             10015,
		"CompareRetID":          10016,
		"DropID":                10017,
		"DropBroadCastID":       10018,
		"FollowEndID":           10019,
		"FollowEndRetID":        10020,
		"ProtectOverTimeID":     10021,
		"ProtectOverTimeRetID":  10022,
		"GameResultID":          10023,
		"EndUserPokerID":        10024,
		"ZJHGameSceneID":        10025,
		"EarlyChangeTable":      10026,
		"GameCurrentTurnID":     10027,
		"OverRoundBroadCastID":  10028,
		"ErrorRetID":            10029,
	}
)

func (x ZJH_GameMessageClassID) Enum() *ZJH_GameMessageClassID {
	p := new(ZJH_GameMessageClassID)
	*p = x
	return p
}

func (x ZJH_GameMessageClassID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ZJH_GameMessageClassID) Descriptor() protoreflect.EnumDescriptor {
	return file_Game_ZJH_proto_enumTypes[0].Descriptor()
}

func (ZJH_GameMessageClassID) Type() protoreflect.EnumType {
	return &file_Game_ZJH_proto_enumTypes[0]
}

func (x ZJH_GameMessageClassID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ZJH_GameMessageClassID) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ZJH_GameMessageClassID(num)
	return nil
}

// Deprecated: Use ZJH_GameMessageClassID.Descriptor instead.
func (ZJH_GameMessageClassID) EnumDescriptor() ([]byte, []int) {
	return file_Game_ZJH_proto_rawDescGZIP(), []int{0}
}

var File_Game_ZJH_proto protoreflect.FileDescriptor

var file_Game_ZJH_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x47, 0x61, 0x6d, 0x65, 0x5f, 0x5a, 0x4a, 0x48, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2a, 0xc4, 0x04, 0x0a, 0x16, 0x5a,
	0x4a, 0x48, 0x5f, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x49, 0x44, 0x12, 0x0b, 0x0a, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x10,
	0x91, 0x4e, 0x12, 0x0e, 0x0a, 0x09, 0x42, 0x65, 0x74, 0x42, 0x61, 0x73, 0x65, 0x49, 0x64, 0x10,
	0x92, 0x4e, 0x12, 0x0c, 0x0a, 0x07, 0x46, 0x61, 0x50, 0x61, 0x69, 0x49, 0x64, 0x10, 0x93, 0x4e,
	0x12, 0x0e, 0x0a, 0x09, 0x57, 0x61, 0x69, 0x74, 0x4f, 0x70, 0x74, 0x49, 0x44, 0x10, 0x94, 0x4e,
	0x12, 0x0e, 0x0a, 0x09, 0x43, 0x75, 0x72, 0x72, 0x4f, 0x70, 0x74, 0x49, 0x44, 0x10, 0x95, 0x4e,
	0x12, 0x11, 0x0a, 0x0c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x73, 0x49, 0x44,
	0x10, 0x96, 0x4e, 0x12, 0x1a, 0x0a, 0x15, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x61, 0x72, 0x64,
	0x73, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x49, 0x44, 0x10, 0x97, 0x4e, 0x12,
	0x11, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x10,
	0x98, 0x4e, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x61, 0x6c, 0x6c, 0x49, 0x44, 0x10, 0x99, 0x4e, 0x12,
	0x14, 0x0a, 0x0f, 0x43, 0x61, 0x6c, 0x6c, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74,
	0x49, 0x44, 0x10, 0x9a, 0x4e, 0x12, 0x0c, 0x0a, 0x07, 0x52, 0x61, 0x69, 0x73, 0x65, 0x49, 0x44,
	0x10, 0x9b, 0x4e, 0x12, 0x15, 0x0a, 0x10, 0x52, 0x61, 0x69, 0x73, 0x65, 0x42, 0x72, 0x6f, 0x61,
	0x64, 0x43, 0x61, 0x73, 0x74, 0x49, 0x44, 0x10, 0x9c, 0x4e, 0x12, 0x0c, 0x0a, 0x07, 0x41, 0x6c,
	0x6c, 0x69, 0x6e, 0x49, 0x44, 0x10, 0x9d, 0x4e, 0x12, 0x0f, 0x0a, 0x0a, 0x41, 0x6c, 0x6c, 0x69,
	0x6e, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10, 0x9e, 0x4e, 0x12, 0x0e, 0x0a, 0x09, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x72, 0x65, 0x49, 0x44, 0x10, 0x9f, 0x4e, 0x12, 0x11, 0x0a, 0x0c, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x72, 0x65, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10, 0xa0, 0x4e, 0x12, 0x0b, 0x0a, 0x06,
	0x44, 0x72, 0x6f, 0x70, 0x49, 0x44, 0x10, 0xa1, 0x4e, 0x12, 0x14, 0x0a, 0x0f, 0x44, 0x72, 0x6f,
	0x70, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x49, 0x44, 0x10, 0xa2, 0x4e, 0x12,
	0x10, 0x0a, 0x0b, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x45, 0x6e, 0x64, 0x49, 0x44, 0x10, 0xa3,
	0x4e, 0x12, 0x13, 0x0a, 0x0e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x45, 0x6e, 0x64, 0x52, 0x65,
	0x74, 0x49, 0x44, 0x10, 0xa4, 0x4e, 0x12, 0x16, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63,
	0x74, 0x4f, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x44, 0x10, 0xa5, 0x4e, 0x12, 0x19,
	0x0a, 0x14, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10, 0xa6, 0x4e, 0x12, 0x11, 0x0a, 0x0c, 0x47, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x49, 0x44, 0x10, 0xa7, 0x4e, 0x12, 0x13, 0x0a, 0x0e,
	0x45, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6f, 0x6b, 0x65, 0x72, 0x49, 0x44, 0x10, 0xa8,
	0x4e, 0x12, 0x13, 0x0a, 0x0e, 0x5a, 0x4a, 0x48, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x63, 0x65, 0x6e,
	0x65, 0x49, 0x44, 0x10, 0xa9, 0x4e, 0x12, 0x15, 0x0a, 0x10, 0x45, 0x61, 0x72, 0x6c, 0x79, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x10, 0xaa, 0x4e, 0x12, 0x16, 0x0a,
	0x11, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x75, 0x72, 0x6e,
	0x49, 0x44, 0x10, 0xab, 0x4e, 0x12, 0x19, 0x0a, 0x14, 0x4f, 0x76, 0x65, 0x72, 0x52, 0x6f, 0x75,
	0x6e, 0x64, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x49, 0x44, 0x10, 0xac, 0x4e,
	0x12, 0x0f, 0x0a, 0x0a, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10, 0xad,
	0x4e, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f,
}

var (
	file_Game_ZJH_proto_rawDescOnce sync.Once
	file_Game_ZJH_proto_rawDescData = file_Game_ZJH_proto_rawDesc
)

func file_Game_ZJH_proto_rawDescGZIP() []byte {
	file_Game_ZJH_proto_rawDescOnce.Do(func() {
		file_Game_ZJH_proto_rawDescData = protoimpl.X.CompressGZIP(file_Game_ZJH_proto_rawDescData)
	})
	return file_Game_ZJH_proto_rawDescData
}

var file_Game_ZJH_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_Game_ZJH_proto_goTypes = []interface{}{
	(ZJH_GameMessageClassID)(0), // 0: netproto.ZJH_GameMessageClassID
}
var file_Game_ZJH_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_Game_ZJH_proto_init() }
func file_Game_ZJH_proto_init() {
	if File_Game_ZJH_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Game_ZJH_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Game_ZJH_proto_goTypes,
		DependencyIndexes: file_Game_ZJH_proto_depIdxs,
		EnumInfos:         file_Game_ZJH_proto_enumTypes,
	}.Build()
	File_Game_ZJH_proto = out.File
	file_Game_ZJH_proto_rawDesc = nil
	file_Game_ZJH_proto_goTypes = nil
	file_Game_ZJH_proto_depIdxs = nil
}
