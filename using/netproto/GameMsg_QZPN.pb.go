// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: GameMsg_QZPN.proto

package netproto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//设置消息
type QZPN_GameSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZhuangBetOptions   []int32 `protobuf:"varint,1,rep,name=ZhuangBetOptions" json:"ZhuangBetOptions,omitempty"`
	XianBetOptions     []int32 `protobuf:"varint,2,rep,name=XianBetOptions" json:"XianBetOptions,omitempty"`
	QiangZhuangTimeout *int32  `protobuf:"varint,3,req,name=QiangZhuangTimeout" json:"QiangZhuangTimeout,omitempty"`
	XianBetTimeout     *int32  `protobuf:"varint,4,req,name=XianBetTimeout" json:"XianBetTimeout,omitempty"`
	BaseScore          *int32  `protobuf:"varint,6,req,name=BaseScore" json:"BaseScore,omitempty"`
	TableNo            *int32  `protobuf:"varint,7,req,name=TableNo" json:"TableNo,omitempty"`
	GameID             *int32  `protobuf:"varint,8,req,name=GameID" json:"GameID,omitempty"`
	ReadyTimeout       *int32  `protobuf:"varint,9,req,name=ReadyTimeout" json:"ReadyTimeout,omitempty"`
}

func (x *QZPN_GameSetting) Reset() {
	*x = QZPN_GameSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_QZPN_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QZPN_GameSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QZPN_GameSetting) ProtoMessage() {}

func (x *QZPN_GameSetting) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_QZPN_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QZPN_GameSetting.ProtoReflect.Descriptor instead.
func (*QZPN_GameSetting) Descriptor() ([]byte, []int) {
	return file_GameMsg_QZPN_proto_rawDescGZIP(), []int{0}
}

func (x *QZPN_GameSetting) GetZhuangBetOptions() []int32 {
	if x != nil {
		return x.ZhuangBetOptions
	}
	return nil
}

func (x *QZPN_GameSetting) GetXianBetOptions() []int32 {
	if x != nil {
		return x.XianBetOptions
	}
	return nil
}

func (x *QZPN_GameSetting) GetQiangZhuangTimeout() int32 {
	if x != nil && x.QiangZhuangTimeout != nil {
		return *x.QiangZhuangTimeout
	}
	return 0
}

func (x *QZPN_GameSetting) GetXianBetTimeout() int32 {
	if x != nil && x.XianBetTimeout != nil {
		return *x.XianBetTimeout
	}
	return 0
}

func (x *QZPN_GameSetting) GetBaseScore() int32 {
	if x != nil && x.BaseScore != nil {
		return *x.BaseScore
	}
	return 0
}

func (x *QZPN_GameSetting) GetTableNo() int32 {
	if x != nil && x.TableNo != nil {
		return *x.TableNo
	}
	return 0
}

func (x *QZPN_GameSetting) GetGameID() int32 {
	if x != nil && x.GameID != nil {
		return *x.GameID
	}
	return 0
}

func (x *QZPN_GameSetting) GetReadyTimeout() int32 {
	if x != nil && x.ReadyTimeout != nil {
		return *x.ReadyTimeout
	}
	return 0
}

//状态消息
type QZPN_Sate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State *int32 `protobuf:"varint,1,req,name=State" json:"State,omitempty"`
	Time  *int32 `protobuf:"varint,2,req,name=Time" json:"Time,omitempty"`
}

func (x *QZPN_Sate) Reset() {
	*x = QZPN_Sate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_QZPN_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QZPN_Sate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QZPN_Sate) ProtoMessage() {}

func (x *QZPN_Sate) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_QZPN_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QZPN_Sate.ProtoReflect.Descriptor instead.
func (*QZPN_Sate) Descriptor() ([]byte, []int) {
	return file_GameMsg_QZPN_proto_rawDescGZIP(), []int{1}
}

func (x *QZPN_Sate) GetState() int32 {
	if x != nil && x.State != nil {
		return *x.State
	}
	return 0
}

func (x *QZPN_Sate) GetTime() int32 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

type QZPN_GameNoInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameNo *string `protobuf:"bytes,1,req,name=GameNo" json:"GameNo,omitempty"`
}

func (x *QZPN_GameNoInfo) Reset() {
	*x = QZPN_GameNoInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_QZPN_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QZPN_GameNoInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QZPN_GameNoInfo) ProtoMessage() {}

func (x *QZPN_GameNoInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_QZPN_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QZPN_GameNoInfo.ProtoReflect.Descriptor instead.
func (*QZPN_GameNoInfo) Descriptor() ([]byte, []int) {
	return file_GameMsg_QZPN_proto_rawDescGZIP(), []int{2}
}

func (x *QZPN_GameNoInfo) GetGameNo() string {
	if x != nil && x.GameNo != nil {
		return *x.GameNo
	}
	return ""
}

//可下注倍率
type QZPN_UserBetInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZhuangBetRange []int32 `protobuf:"varint,1,rep,name=ZhuangBetRange" json:"ZhuangBetRange,omitempty"`
	XianBetRange   []int32 `protobuf:"varint,2,rep,name=XianBetRange" json:"XianBetRange,omitempty"` //閒家押注倍數 or 金額範圍
}

func (x *QZPN_UserBetInfo) Reset() {
	*x = QZPN_UserBetInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_QZPN_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QZPN_UserBetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QZPN_UserBetInfo) ProtoMessage() {}

func (x *QZPN_UserBetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_QZPN_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QZPN_UserBetInfo.ProtoReflect.Descriptor instead.
func (*QZPN_UserBetInfo) Descriptor() ([]byte, []int) {
	return file_GameMsg_QZPN_proto_rawDescGZIP(), []int{3}
}

func (x *QZPN_UserBetInfo) GetZhuangBetRange() []int32 {
	if x != nil {
		return x.ZhuangBetRange
	}
	return nil
}

func (x *QZPN_UserBetInfo) GetXianBetRange() []int32 {
	if x != nil {
		return x.XianBetRange
	}
	return nil
}

//搶莊
type QZPN_QiangZhuang struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Times *int32 `protobuf:"varint,1,req,name=Times" json:"Times,omitempty"`
}

func (x *QZPN_QiangZhuang) Reset() {
	*x = QZPN_QiangZhuang{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_QZPN_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QZPN_QiangZhuang) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QZPN_QiangZhuang) ProtoMessage() {}

func (x *QZPN_QiangZhuang) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_QZPN_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QZPN_QiangZhuang.ProtoReflect.Descriptor instead.
func (*QZPN_QiangZhuang) Descriptor() ([]byte, []int) {
	return file_GameMsg_QZPN_proto_rawDescGZIP(), []int{4}
}

func (x *QZPN_QiangZhuang) GetTimes() int32 {
	if x != nil && x.Times != nil {
		return *x.Times
	}
	return 0
}

//抢庄广播
type QZPN_BroadCastQiangZhuang struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZhuangUserID *int32          `protobuf:"varint,1,opt,name=ZhuangUserID" json:"ZhuangUserID,omitempty"`
	Times        *int32          `protobuf:"varint,2,opt,name=Times" json:"Times,omitempty"` //押注倍數 or 金額
	UserBets     []*QZPN_UserBet `protobuf:"bytes,3,rep,name=UserBets" json:"UserBets,omitempty"`
}

func (x *QZPN_BroadCastQiangZhuang) Reset() {
	*x = QZPN_BroadCastQiangZhuang{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_QZPN_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QZPN_BroadCastQiangZhuang) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QZPN_BroadCastQiangZhuang) ProtoMessage() {}

func (x *QZPN_BroadCastQiangZhuang) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_QZPN_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QZPN_BroadCastQiangZhuang.ProtoReflect.Descriptor instead.
func (*QZPN_BroadCastQiangZhuang) Descriptor() ([]byte, []int) {
	return file_GameMsg_QZPN_proto_rawDescGZIP(), []int{5}
}

func (x *QZPN_BroadCastQiangZhuang) GetZhuangUserID() int32 {
	if x != nil && x.ZhuangUserID != nil {
		return *x.ZhuangUserID
	}
	return 0
}

func (x *QZPN_BroadCastQiangZhuang) GetTimes() int32 {
	if x != nil && x.Times != nil {
		return *x.Times
	}
	return 0
}

func (x *QZPN_BroadCastQiangZhuang) GetUserBets() []*QZPN_UserBet {
	if x != nil {
		return x.UserBets
	}
	return nil
}

type QZPN_XianJiaBetTimes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Times *int32 `protobuf:"varint,1,req,name=Times" json:"Times,omitempty"` //閑家倍數 or 閑家下注金額
}

func (x *QZPN_XianJiaBetTimes) Reset() {
	*x = QZPN_XianJiaBetTimes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_QZPN_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QZPN_XianJiaBetTimes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QZPN_XianJiaBetTimes) ProtoMessage() {}

func (x *QZPN_XianJiaBetTimes) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_QZPN_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QZPN_XianJiaBetTimes.ProtoReflect.Descriptor instead.
func (*QZPN_XianJiaBetTimes) Descriptor() ([]byte, []int) {
	return file_GameMsg_QZPN_proto_rawDescGZIP(), []int{6}
}

func (x *QZPN_XianJiaBetTimes) GetTimes() int32 {
	if x != nil && x.Times != nil {
		return *x.Times
	}
	return 0
}

//用戶下注與搶莊
type QZPN_UserBet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID    *int32 `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`
	Times     *int64 `protobuf:"varint,2,req,name=Times" json:"Times,omitempty"`
	SystemSet *bool  `protobuf:"varint,3,req,name=SystemSet" json:"SystemSet,omitempty"`
}

func (x *QZPN_UserBet) Reset() {
	*x = QZPN_UserBet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_QZPN_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QZPN_UserBet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QZPN_UserBet) ProtoMessage() {}

func (x *QZPN_UserBet) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_QZPN_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QZPN_UserBet.ProtoReflect.Descriptor instead.
func (*QZPN_UserBet) Descriptor() ([]byte, []int) {
	return file_GameMsg_QZPN_proto_rawDescGZIP(), []int{7}
}

func (x *QZPN_UserBet) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *QZPN_UserBet) GetTimes() int64 {
	if x != nil && x.Times != nil {
		return *x.Times
	}
	return 0
}

func (x *QZPN_UserBet) GetSystemSet() bool {
	if x != nil && x.SystemSet != nil {
		return *x.SystemSet
	}
	return false
}

//广播閒家下注結果
type QZPN_BroadCastXianBetTimes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserBets []*QZPN_UserBet `protobuf:"bytes,1,rep,name=UserBets" json:"UserBets,omitempty"`
}

func (x *QZPN_BroadCastXianBetTimes) Reset() {
	*x = QZPN_BroadCastXianBetTimes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_QZPN_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QZPN_BroadCastXianBetTimes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QZPN_BroadCastXianBetTimes) ProtoMessage() {}

func (x *QZPN_BroadCastXianBetTimes) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_QZPN_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QZPN_BroadCastXianBetTimes.ProtoReflect.Descriptor instead.
func (*QZPN_BroadCastXianBetTimes) Descriptor() ([]byte, []int) {
	return file_GameMsg_QZPN_proto_rawDescGZIP(), []int{8}
}

func (x *QZPN_BroadCastXianBetTimes) GetUserBets() []*QZPN_UserBet {
	if x != nil {
		return x.UserBets
	}
	return nil
}

//骰子訊息
type QZPN_DiceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Point      []int32 `protobuf:"varint,1,rep,name=Point" json:"Point,omitempty"`           //骰子點數
	TotalPoint *int32  `protobuf:"varint,2,req,name=TotalPoint" json:"TotalPoint,omitempty"` //總點數
	SeatNO     *int32  `protobuf:"varint,3,req,name=SeatNO" json:"SeatNO,omitempty"`         //發牌位置
}

func (x *QZPN_DiceInfo) Reset() {
	*x = QZPN_DiceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_QZPN_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QZPN_DiceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QZPN_DiceInfo) ProtoMessage() {}

func (x *QZPN_DiceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_QZPN_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QZPN_DiceInfo.ProtoReflect.Descriptor instead.
func (*QZPN_DiceInfo) Descriptor() ([]byte, []int) {
	return file_GameMsg_QZPN_proto_rawDescGZIP(), []int{9}
}

func (x *QZPN_DiceInfo) GetPoint() []int32 {
	if x != nil {
		return x.Point
	}
	return nil
}

func (x *QZPN_DiceInfo) GetTotalPoint() int32 {
	if x != nil && x.TotalPoint != nil {
		return *x.TotalPoint
	}
	return 0
}

func (x *QZPN_DiceInfo) GetSeatNO() int32 {
	if x != nil && x.SeatNO != nil {
		return *x.SeatNO
	}
	return 0
}

type QZPN_GameResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZhuangResult *QZPN_UserResult   `protobuf:"bytes,1,req,name=ZhuangResult" json:"ZhuangResult,omitempty"`
	UserResult   []*QZPN_UserResult `protobuf:"bytes,2,rep,name=UserResult" json:"UserResult,omitempty"`
}

func (x *QZPN_GameResult) Reset() {
	*x = QZPN_GameResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_QZPN_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QZPN_GameResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QZPN_GameResult) ProtoMessage() {}

func (x *QZPN_GameResult) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_QZPN_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QZPN_GameResult.ProtoReflect.Descriptor instead.
func (*QZPN_GameResult) Descriptor() ([]byte, []int) {
	return file_GameMsg_QZPN_proto_rawDescGZIP(), []int{10}
}

func (x *QZPN_GameResult) GetZhuangResult() *QZPN_UserResult {
	if x != nil {
		return x.ZhuangResult
	}
	return nil
}

func (x *QZPN_GameResult) GetUserResult() []*QZPN_UserResult {
	if x != nil {
		return x.UserResult
	}
	return nil
}

type QZPN_UserResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User         *GameUser      `protobuf:"bytes,1,req,name=User" json:"User,omitempty"`
	WinLose      *int64         `protobuf:"varint,2,req,name=WinLose" json:"WinLose,omitempty"`
	ResultType   *int32         `protobuf:"varint,3,req,name=ResultType" json:"ResultType,omitempty"`
	ResultNumber *int32         `protobuf:"varint,4,req,name=ResultNumber" json:"ResultNumber,omitempty"`
	BetTimes     *int32         `protobuf:"varint,5,req,name=BetTimes" json:"BetTimes,omitempty"`
	CardGroup    []*PaijiouCard `protobuf:"bytes,6,rep,name=CardGroup" json:"CardGroup,omitempty"`
}

func (x *QZPN_UserResult) Reset() {
	*x = QZPN_UserResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_QZPN_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QZPN_UserResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QZPN_UserResult) ProtoMessage() {}

func (x *QZPN_UserResult) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_QZPN_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QZPN_UserResult.ProtoReflect.Descriptor instead.
func (*QZPN_UserResult) Descriptor() ([]byte, []int) {
	return file_GameMsg_QZPN_proto_rawDescGZIP(), []int{11}
}

func (x *QZPN_UserResult) GetUser() *GameUser {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *QZPN_UserResult) GetWinLose() int64 {
	if x != nil && x.WinLose != nil {
		return *x.WinLose
	}
	return 0
}

func (x *QZPN_UserResult) GetResultType() int32 {
	if x != nil && x.ResultType != nil {
		return *x.ResultType
	}
	return 0
}

func (x *QZPN_UserResult) GetResultNumber() int32 {
	if x != nil && x.ResultNumber != nil {
		return *x.ResultNumber
	}
	return 0
}

func (x *QZPN_UserResult) GetBetTimes() int32 {
	if x != nil && x.BetTimes != nil {
		return *x.BetTimes
	}
	return 0
}

func (x *QZPN_UserResult) GetCardGroup() []*PaijiouCard {
	if x != nil {
		return x.CardGroup
	}
	return nil
}

//廣播玩家金額不足
type QZNN_BroadCastUserNoMoney struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID []int32 `protobuf:"varint,1,rep,name=UserID" json:"UserID,omitempty"`
}

func (x *QZNN_BroadCastUserNoMoney) Reset() {
	*x = QZNN_BroadCastUserNoMoney{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_QZPN_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QZNN_BroadCastUserNoMoney) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QZNN_BroadCastUserNoMoney) ProtoMessage() {}

func (x *QZNN_BroadCastUserNoMoney) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_QZPN_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QZNN_BroadCastUserNoMoney.ProtoReflect.Descriptor instead.
func (*QZNN_BroadCastUserNoMoney) Descriptor() ([]byte, []int) {
	return file_GameMsg_QZPN_proto_rawDescGZIP(), []int{12}
}

func (x *QZNN_BroadCastUserNoMoney) GetUserID() []int32 {
	if x != nil {
		return x.UserID
	}
	return nil
}

//遊戲結束詳情
type QZPN_GameEndResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoundOne []*QZPN_GameEndUserInfo `protobuf:"bytes,1,rep,name=RoundOne" json:"RoundOne,omitempty"`
	RoundTwo []*QZPN_GameEndUserInfo `protobuf:"bytes,2,rep,name=RoundTwo" json:"RoundTwo,omitempty"`
}

func (x *QZPN_GameEndResult) Reset() {
	*x = QZPN_GameEndResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_QZPN_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QZPN_GameEndResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QZPN_GameEndResult) ProtoMessage() {}

func (x *QZPN_GameEndResult) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_QZPN_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QZPN_GameEndResult.ProtoReflect.Descriptor instead.
func (*QZPN_GameEndResult) Descriptor() ([]byte, []int) {
	return file_GameMsg_QZPN_proto_rawDescGZIP(), []int{13}
}

func (x *QZPN_GameEndResult) GetRoundOne() []*QZPN_GameEndUserInfo {
	if x != nil {
		return x.RoundOne
	}
	return nil
}

func (x *QZPN_GameEndResult) GetRoundTwo() []*QZPN_GameEndUserInfo {
	if x != nil {
		return x.RoundTwo
	}
	return nil
}

//遊戲結束用戶資訊
type QZPN_GameEndUserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User        *GameUser `protobuf:"bytes,1,req,name=User" json:"User,omitempty"`
	PaujiouType *string   `protobuf:"bytes,2,req,name=PaujiouType" json:"PaujiouType,omitempty"`
	ZhuangTimes *int32    `protobuf:"varint,3,opt,name=ZhuangTimes" json:"ZhuangTimes,omitempty"` //搶莊莊家倍數
	XianTimes   *int32    `protobuf:"varint,4,opt,name=XianTimes" json:"XianTimes,omitempty"`     //閑家下注倍數
	Winlose     *int64    `protobuf:"varint,5,req,name=Winlose" json:"Winlose,omitempty"`         //輸贏金額
	IsZhuang    *bool     `protobuf:"varint,6,req,name=IsZhuang" json:"IsZhuang,omitempty"`       //是否是莊家
}

func (x *QZPN_GameEndUserInfo) Reset() {
	*x = QZPN_GameEndUserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_QZPN_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QZPN_GameEndUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QZPN_GameEndUserInfo) ProtoMessage() {}

func (x *QZPN_GameEndUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_QZPN_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QZPN_GameEndUserInfo.ProtoReflect.Descriptor instead.
func (*QZPN_GameEndUserInfo) Descriptor() ([]byte, []int) {
	return file_GameMsg_QZPN_proto_rawDescGZIP(), []int{14}
}

func (x *QZPN_GameEndUserInfo) GetUser() *GameUser {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *QZPN_GameEndUserInfo) GetPaujiouType() string {
	if x != nil && x.PaujiouType != nil {
		return *x.PaujiouType
	}
	return ""
}

func (x *QZPN_GameEndUserInfo) GetZhuangTimes() int32 {
	if x != nil && x.ZhuangTimes != nil {
		return *x.ZhuangTimes
	}
	return 0
}

func (x *QZPN_GameEndUserInfo) GetXianTimes() int32 {
	if x != nil && x.XianTimes != nil {
		return *x.XianTimes
	}
	return 0
}

func (x *QZPN_GameEndUserInfo) GetWinlose() int64 {
	if x != nil && x.Winlose != nil {
		return *x.Winlose
	}
	return 0
}

func (x *QZPN_GameEndUserInfo) GetIsZhuang() bool {
	if x != nil && x.IsZhuang != nil {
		return *x.IsZhuang
	}
	return false
}

//遊戲場景
type QZPN_GameScene struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status         *int32                      `protobuf:"varint,1,req,name=Status" json:"Status,omitempty"`
	UserPaijiou    *UserPaijiou                `protobuf:"bytes,2,opt,name=UserPaijiou" json:"UserPaijiou,omitempty"`
	ZhuangInfo     *QZPN_BroadCastQiangZhuang  `protobuf:"bytes,3,opt,name=ZhuangInfo" json:"ZhuangInfo,omitempty"`
	XianInfo       *QZPN_BroadCastXianBetTimes `protobuf:"bytes,4,opt,name=XianInfo" json:"XianInfo,omitempty"`
	DiceInfo       *QZPN_DiceInfo              `protobuf:"bytes,5,opt,name=DiceInfo" json:"DiceInfo,omitempty"`
	ElapsedSeconds *int32                      `protobuf:"varint,6,opt,name=ElapsedSeconds" json:"ElapsedSeconds,omitempty"`
	GameRet        []*QZPN_GameResult          `protobuf:"bytes,7,rep,name=GameRet" json:"GameRet,omitempty"`
	UserBetInfo    *QZPN_UserBetInfo           `protobuf:"bytes,8,opt,name=UserBetInfo" json:"UserBetInfo,omitempty"`
}

func (x *QZPN_GameScene) Reset() {
	*x = QZPN_GameScene{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_QZPN_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QZPN_GameScene) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QZPN_GameScene) ProtoMessage() {}

func (x *QZPN_GameScene) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_QZPN_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QZPN_GameScene.ProtoReflect.Descriptor instead.
func (*QZPN_GameScene) Descriptor() ([]byte, []int) {
	return file_GameMsg_QZPN_proto_rawDescGZIP(), []int{15}
}

func (x *QZPN_GameScene) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *QZPN_GameScene) GetUserPaijiou() *UserPaijiou {
	if x != nil {
		return x.UserPaijiou
	}
	return nil
}

func (x *QZPN_GameScene) GetZhuangInfo() *QZPN_BroadCastQiangZhuang {
	if x != nil {
		return x.ZhuangInfo
	}
	return nil
}

func (x *QZPN_GameScene) GetXianInfo() *QZPN_BroadCastXianBetTimes {
	if x != nil {
		return x.XianInfo
	}
	return nil
}

func (x *QZPN_GameScene) GetDiceInfo() *QZPN_DiceInfo {
	if x != nil {
		return x.DiceInfo
	}
	return nil
}

func (x *QZPN_GameScene) GetElapsedSeconds() int32 {
	if x != nil && x.ElapsedSeconds != nil {
		return *x.ElapsedSeconds
	}
	return 0
}

func (x *QZPN_GameScene) GetGameRet() []*QZPN_GameResult {
	if x != nil {
		return x.GameRet
	}
	return nil
}

func (x *QZPN_GameScene) GetUserBetInfo() *QZPN_UserBetInfo {
	if x != nil {
		return x.UserBetInfo
	}
	return nil
}

//玩家咪牌
type QZPN_UserMiPai struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsDone *bool `protobuf:"varint,1,req,name=IsDone" json:"IsDone,omitempty"` //是否咪完牌,true:等同咪完牌/攤牌 false:額外用途
}

func (x *QZPN_UserMiPai) Reset() {
	*x = QZPN_UserMiPai{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_QZPN_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QZPN_UserMiPai) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QZPN_UserMiPai) ProtoMessage() {}

func (x *QZPN_UserMiPai) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_QZPN_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QZPN_UserMiPai.ProtoReflect.Descriptor instead.
func (*QZPN_UserMiPai) Descriptor() ([]byte, []int) {
	return file_GameMsg_QZPN_proto_rawDescGZIP(), []int{16}
}

func (x *QZPN_UserMiPai) GetIsDone() bool {
	if x != nil && x.IsDone != nil {
		return *x.IsDone
	}
	return false
}

//用户獲得手牌信息
type QZPN_UserPaijiou struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       *int32         `protobuf:"varint,1,req,name=UserId" json:"UserId,omitempty"`
	PaujiouType  *int32         `protobuf:"varint,2,req,name=PaujiouType" json:"PaujiouType,omitempty"`
	ResultNumber *int32         `protobuf:"varint,3,req,name=ResultNumber" json:"ResultNumber,omitempty"`
	CardGroup    []*PaijiouCard `protobuf:"bytes,4,rep,name=CardGroup" json:"CardGroup,omitempty"`
}

func (x *QZPN_UserPaijiou) Reset() {
	*x = QZPN_UserPaijiou{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_QZPN_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QZPN_UserPaijiou) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QZPN_UserPaijiou) ProtoMessage() {}

func (x *QZPN_UserPaijiou) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_QZPN_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QZPN_UserPaijiou.ProtoReflect.Descriptor instead.
func (*QZPN_UserPaijiou) Descriptor() ([]byte, []int) {
	return file_GameMsg_QZPN_proto_rawDescGZIP(), []int{17}
}

func (x *QZPN_UserPaijiou) GetUserId() int32 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *QZPN_UserPaijiou) GetPaujiouType() int32 {
	if x != nil && x.PaujiouType != nil {
		return *x.PaujiouType
	}
	return 0
}

func (x *QZPN_UserPaijiou) GetResultNumber() int32 {
	if x != nil && x.ResultNumber != nil {
		return *x.ResultNumber
	}
	return 0
}

func (x *QZPN_UserPaijiou) GetCardGroup() []*PaijiouCard {
	if x != nil {
		return x.CardGroup
	}
	return nil
}

var File_GameMsg_QZPN_proto protoreflect.FileDescriptor

var file_GameMsg_QZPN_proto_rawDesc = []byte{
	0x0a, 0x12, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x5f, 0x51, 0x5a, 0x50, 0x4e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d,
	0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb2, 0x02,
	0x0a, 0x10, 0x51, 0x5a, 0x50, 0x4e, 0x5f, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x2a, 0x0a, 0x10, 0x5a, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x42, 0x65, 0x74, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x10, 0x5a, 0x68,
	0x75, 0x61, 0x6e, 0x67, 0x42, 0x65, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x26,
	0x0a, 0x0e, 0x58, 0x69, 0x61, 0x6e, 0x42, 0x65, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0e, 0x58, 0x69, 0x61, 0x6e, 0x42, 0x65, 0x74, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x51, 0x69, 0x61, 0x6e, 0x67, 0x5a,
	0x68, 0x75, 0x61, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x12, 0x51, 0x69, 0x61, 0x6e, 0x67, 0x5a, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x54,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x58, 0x69, 0x61, 0x6e, 0x42, 0x65,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0e,
	0x58, 0x69, 0x61, 0x6e, 0x42, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x42, 0x61, 0x73, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x06, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x09, 0x42, 0x61, 0x73, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x6f, 0x18, 0x07, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44,
	0x18, 0x08, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x12, 0x22,
	0x0a, 0x0c, 0x52, 0x65, 0x61, 0x64, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x09,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x0c, 0x52, 0x65, 0x61, 0x64, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x22, 0x35, 0x0a, 0x09, 0x51, 0x5a, 0x50, 0x4e, 0x5f, 0x53, 0x61, 0x74, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x29, 0x0a, 0x0f, 0x51, 0x5a, 0x50,
	0x4e, 0x5f, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06,
	0x47, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x47, 0x61,
	0x6d, 0x65, 0x4e, 0x6f, 0x22, 0x5e, 0x0a, 0x10, 0x51, 0x5a, 0x50, 0x4e, 0x5f, 0x55, 0x73, 0x65,
	0x72, 0x42, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x0e, 0x5a, 0x68, 0x75, 0x61,
	0x6e, 0x67, 0x42, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x0e, 0x5a, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x42, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x58, 0x69, 0x61, 0x6e, 0x42, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0c, 0x58, 0x69, 0x61, 0x6e, 0x42, 0x65, 0x74, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x22, 0x28, 0x0a, 0x10, 0x51, 0x5a, 0x50, 0x4e, 0x5f, 0x51, 0x69, 0x61,
	0x6e, 0x67, 0x5a, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x22, 0x89,
	0x01, 0x0a, 0x19, 0x51, 0x5a, 0x50, 0x4e, 0x5f, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73,
	0x74, 0x51, 0x69, 0x61, 0x6e, 0x67, 0x5a, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x12, 0x22, 0x0a, 0x0c,
	0x5a, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x5a, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65,
	0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x5a, 0x50, 0x4e, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x74,
	0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x74, 0x73, 0x22, 0x2c, 0x0a, 0x14, 0x51, 0x5a,
	0x50, 0x4e, 0x5f, 0x58, 0x69, 0x61, 0x6e, 0x4a, 0x69, 0x61, 0x42, 0x65, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x22, 0x5a, 0x0a, 0x0c, 0x51, 0x5a, 0x50, 0x4e,
	0x5f, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52,
	0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x53, 0x65, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x08, 0x52, 0x09, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x53, 0x65, 0x74, 0x22, 0x50, 0x0a, 0x1a, 0x51, 0x5a, 0x50, 0x4e, 0x5f, 0x42, 0x72, 0x6f,
	0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x58, 0x69, 0x61, 0x6e, 0x42, 0x65, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x12, 0x32, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x51, 0x5a, 0x50, 0x4e, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x74, 0x52, 0x08, 0x55, 0x73,
	0x65, 0x72, 0x42, 0x65, 0x74, 0x73, 0x22, 0x5d, 0x0a, 0x0d, 0x51, 0x5a, 0x50, 0x4e, 0x5f, 0x44,
	0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x4f, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x53,
	0x65, 0x61, 0x74, 0x4e, 0x4f, 0x22, 0x8b, 0x01, 0x0a, 0x0f, 0x51, 0x5a, 0x50, 0x4e, 0x5f, 0x47,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3d, 0x0a, 0x0c, 0x5a, 0x68, 0x75,
	0x61, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x5a, 0x50, 0x4e, 0x5f,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0c, 0x5a, 0x68, 0x75, 0x61,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6e,
	0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x5a, 0x50, 0x4e, 0x5f, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0xe8, 0x01, 0x0a, 0x0f, 0x51, 0x5a, 0x50, 0x4e, 0x5f, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x47, 0x61, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x57, 0x69, 0x6e, 0x4c, 0x6f, 0x73, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03,
	0x52, 0x07, 0x57, 0x69, 0x6e, 0x4c, 0x6f, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x0c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a,
	0x08, 0x42, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x08, 0x42, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x09, 0x43, 0x61, 0x72,
	0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6e,
	0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x69, 0x6a, 0x69, 0x6f, 0x75, 0x43,
	0x61, 0x72, 0x64, 0x52, 0x09, 0x43, 0x61, 0x72, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x33,
	0x0a, 0x19, 0x51, 0x5a, 0x4e, 0x4e, 0x5f, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x22, 0x8c, 0x01, 0x0a, 0x12, 0x51, 0x5a, 0x50, 0x4e, 0x5f, 0x47, 0x61, 0x6d,
	0x65, 0x45, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3a, 0x0a, 0x08, 0x52, 0x6f,
	0x75, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6e,
	0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x5a, 0x50, 0x4e, 0x5f, 0x47, 0x61, 0x6d,
	0x65, 0x45, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x52, 0x6f,
	0x75, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x12, 0x3a, 0x0a, 0x08, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x54,
	0x77, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x5a, 0x50, 0x4e, 0x5f, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x54,
	0x77, 0x6f, 0x22, 0xd6, 0x01, 0x0a, 0x14, 0x51, 0x5a, 0x50, 0x4e, 0x5f, 0x47, 0x61, 0x6d, 0x65,
	0x45, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x04, 0x55,
	0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6e, 0x65, 0x74, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x61, 0x75, 0x6a, 0x69, 0x6f, 0x75, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x61, 0x75, 0x6a, 0x69, 0x6f,
	0x75, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x5a, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x5a, 0x68, 0x75, 0x61,
	0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x58, 0x69, 0x61, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x58, 0x69, 0x61, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x57, 0x69, 0x6e, 0x6c, 0x6f, 0x73, 0x65,
	0x18, 0x05, 0x20, 0x02, 0x28, 0x03, 0x52, 0x07, 0x57, 0x69, 0x6e, 0x6c, 0x6f, 0x73, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x49, 0x73, 0x5a, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x02, 0x28,
	0x08, 0x52, 0x08, 0x49, 0x73, 0x5a, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x22, 0xb8, 0x03, 0x0a, 0x0e,
	0x51, 0x5a, 0x50, 0x4e, 0x5f, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x37, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61,
	0x69, 0x6a, 0x69, 0x6f, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6e, 0x65,
	0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x69, 0x6a, 0x69,
	0x6f, 0x75, 0x52, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x69, 0x6a, 0x69, 0x6f, 0x75, 0x12,
	0x43, 0x0a, 0x0a, 0x5a, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51,
	0x5a, 0x50, 0x4e, 0x5f, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x51, 0x69, 0x61,
	0x6e, 0x67, 0x5a, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x52, 0x0a, 0x5a, 0x68, 0x75, 0x61, 0x6e, 0x67,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x40, 0x0a, 0x08, 0x58, 0x69, 0x61, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x51, 0x5a, 0x50, 0x4e, 0x5f, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74,
	0x58, 0x69, 0x61, 0x6e, 0x42, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x52, 0x08, 0x58, 0x69,
	0x61, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x33, 0x0a, 0x08, 0x44, 0x69, 0x63, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x5a, 0x50, 0x4e, 0x5f, 0x44, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x08, 0x44, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x0e, 0x45,
	0x6c, 0x61, 0x70, 0x73, 0x65, 0x64, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0e, 0x45, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x64, 0x53, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x73, 0x12, 0x33, 0x0a, 0x07, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x74, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x51, 0x5a, 0x50, 0x4e, 0x5f, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x07, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x74, 0x12, 0x3c, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72,
	0x42, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x5a, 0x50, 0x4e, 0x5f, 0x55, 0x73,
	0x65, 0x72, 0x42, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x28, 0x0a, 0x0e, 0x51, 0x5a, 0x50, 0x4e, 0x5f, 0x55,
	0x73, 0x65, 0x72, 0x4d, 0x69, 0x50, 0x61, 0x69, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x44, 0x6f,
	0x6e, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x52, 0x06, 0x49, 0x73, 0x44, 0x6f, 0x6e, 0x65,
	0x22, 0xa5, 0x01, 0x0a, 0x10, 0x51, 0x5a, 0x50, 0x4e, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61,
	0x69, 0x6a, 0x69, 0x6f, 0x75, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x50, 0x61, 0x75, 0x6a, 0x69, 0x6f, 0x75, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x0b, 0x50, 0x61, 0x75, 0x6a, 0x69, 0x6f, 0x75, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x09, 0x43, 0x61, 0x72, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x50, 0x61, 0x69, 0x6a, 0x69, 0x6f, 0x75, 0x43, 0x61, 0x72, 0x64, 0x52, 0x09, 0x43,
	0x61, 0x72, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x6e, 0x65,
	0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f,
}

var (
	file_GameMsg_QZPN_proto_rawDescOnce sync.Once
	file_GameMsg_QZPN_proto_rawDescData = file_GameMsg_QZPN_proto_rawDesc
)

func file_GameMsg_QZPN_proto_rawDescGZIP() []byte {
	file_GameMsg_QZPN_proto_rawDescOnce.Do(func() {
		file_GameMsg_QZPN_proto_rawDescData = protoimpl.X.CompressGZIP(file_GameMsg_QZPN_proto_rawDescData)
	})
	return file_GameMsg_QZPN_proto_rawDescData
}

var file_GameMsg_QZPN_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_GameMsg_QZPN_proto_goTypes = []interface{}{
	(*QZPN_GameSetting)(nil),           // 0: netproto.QZPN_GameSetting
	(*QZPN_Sate)(nil),                  // 1: netproto.QZPN_Sate
	(*QZPN_GameNoInfo)(nil),            // 2: netproto.QZPN_GameNoInfo
	(*QZPN_UserBetInfo)(nil),           // 3: netproto.QZPN_UserBetInfo
	(*QZPN_QiangZhuang)(nil),           // 4: netproto.QZPN_QiangZhuang
	(*QZPN_BroadCastQiangZhuang)(nil),  // 5: netproto.QZPN_BroadCastQiangZhuang
	(*QZPN_XianJiaBetTimes)(nil),       // 6: netproto.QZPN_XianJiaBetTimes
	(*QZPN_UserBet)(nil),               // 7: netproto.QZPN_UserBet
	(*QZPN_BroadCastXianBetTimes)(nil), // 8: netproto.QZPN_BroadCastXianBetTimes
	(*QZPN_DiceInfo)(nil),              // 9: netproto.QZPN_DiceInfo
	(*QZPN_GameResult)(nil),            // 10: netproto.QZPN_GameResult
	(*QZPN_UserResult)(nil),            // 11: netproto.QZPN_UserResult
	(*QZNN_BroadCastUserNoMoney)(nil),  // 12: netproto.QZNN_BroadCastUserNoMoney
	(*QZPN_GameEndResult)(nil),         // 13: netproto.QZPN_GameEndResult
	(*QZPN_GameEndUserInfo)(nil),       // 14: netproto.QZPN_GameEndUserInfo
	(*QZPN_GameScene)(nil),             // 15: netproto.QZPN_GameScene
	(*QZPN_UserMiPai)(nil),             // 16: netproto.QZPN_UserMiPai
	(*QZPN_UserPaijiou)(nil),           // 17: netproto.QZPN_UserPaijiou
	(*GameUser)(nil),                   // 18: netproto.GameUser
	(*PaijiouCard)(nil),                // 19: netproto.PaijiouCard
	(*UserPaijiou)(nil),                // 20: netproto.UserPaijiou
}
var file_GameMsg_QZPN_proto_depIdxs = []int32{
	7,  // 0: netproto.QZPN_BroadCastQiangZhuang.UserBets:type_name -> netproto.QZPN_UserBet
	7,  // 1: netproto.QZPN_BroadCastXianBetTimes.UserBets:type_name -> netproto.QZPN_UserBet
	11, // 2: netproto.QZPN_GameResult.ZhuangResult:type_name -> netproto.QZPN_UserResult
	11, // 3: netproto.QZPN_GameResult.UserResult:type_name -> netproto.QZPN_UserResult
	18, // 4: netproto.QZPN_UserResult.User:type_name -> netproto.GameUser
	19, // 5: netproto.QZPN_UserResult.CardGroup:type_name -> netproto.PaijiouCard
	14, // 6: netproto.QZPN_GameEndResult.RoundOne:type_name -> netproto.QZPN_GameEndUserInfo
	14, // 7: netproto.QZPN_GameEndResult.RoundTwo:type_name -> netproto.QZPN_GameEndUserInfo
	18, // 8: netproto.QZPN_GameEndUserInfo.User:type_name -> netproto.GameUser
	20, // 9: netproto.QZPN_GameScene.UserPaijiou:type_name -> netproto.UserPaijiou
	5,  // 10: netproto.QZPN_GameScene.ZhuangInfo:type_name -> netproto.QZPN_BroadCastQiangZhuang
	8,  // 11: netproto.QZPN_GameScene.XianInfo:type_name -> netproto.QZPN_BroadCastXianBetTimes
	9,  // 12: netproto.QZPN_GameScene.DiceInfo:type_name -> netproto.QZPN_DiceInfo
	10, // 13: netproto.QZPN_GameScene.GameRet:type_name -> netproto.QZPN_GameResult
	3,  // 14: netproto.QZPN_GameScene.UserBetInfo:type_name -> netproto.QZPN_UserBetInfo
	19, // 15: netproto.QZPN_UserPaijiou.CardGroup:type_name -> netproto.PaijiouCard
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_GameMsg_QZPN_proto_init() }
func file_GameMsg_QZPN_proto_init() {
	if File_GameMsg_QZPN_proto != nil {
		return
	}
	file_GameMsg_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_GameMsg_QZPN_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QZPN_GameSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_QZPN_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QZPN_Sate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_QZPN_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QZPN_GameNoInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_QZPN_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QZPN_UserBetInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_QZPN_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QZPN_QiangZhuang); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_QZPN_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QZPN_BroadCastQiangZhuang); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_QZPN_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QZPN_XianJiaBetTimes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_QZPN_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QZPN_UserBet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_QZPN_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QZPN_BroadCastXianBetTimes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_QZPN_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QZPN_DiceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_QZPN_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QZPN_GameResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_QZPN_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QZPN_UserResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_QZPN_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QZNN_BroadCastUserNoMoney); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_QZPN_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QZPN_GameEndResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_QZPN_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QZPN_GameEndUserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_QZPN_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QZPN_GameScene); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_QZPN_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QZPN_UserMiPai); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_QZPN_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QZPN_UserPaijiou); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_GameMsg_QZPN_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_GameMsg_QZPN_proto_goTypes,
		DependencyIndexes: file_GameMsg_QZPN_proto_depIdxs,
		MessageInfos:      file_GameMsg_QZPN_proto_msgTypes,
	}.Build()
	File_GameMsg_QZPN_proto = out.File
	file_GameMsg_QZPN_proto_rawDesc = nil
	file_GameMsg_QZPN_proto_goTypes = nil
	file_GameMsg_QZPN_proto_depIdxs = nil
}
