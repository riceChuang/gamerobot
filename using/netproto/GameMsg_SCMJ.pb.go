//==================================================================
//文件名： GameMsg_SCMJ.proto
//作者：
//日期：
//说明：   麻将游戏客户服务器通信协议
//修改记录：
//==================================================================

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: GameMsg_SCMJ.proto

package netproto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//-----------------战斗----------------------
//骰子
type SCMJ_BroadcastDice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dice []int32 `protobuf:"varint,1,rep,name=Dice" json:"Dice,omitempty"` //两个骰子
}

func (x *SCMJ_BroadcastDice) Reset() {
	*x = SCMJ_BroadcastDice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SCMJ_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCMJ_BroadcastDice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCMJ_BroadcastDice) ProtoMessage() {}

func (x *SCMJ_BroadcastDice) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SCMJ_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCMJ_BroadcastDice.ProtoReflect.Descriptor instead.
func (*SCMJ_BroadcastDice) Descriptor() ([]byte, []int) {
	return file_GameMsg_SCMJ_proto_rawDescGZIP(), []int{0}
}

func (x *SCMJ_BroadcastDice) GetDice() []int32 {
	if x != nil {
		return x.Dice
	}
	return nil
}

//摸牌,发牌
type SCMJ_BroadcastDeal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatNo     *int32  `protobuf:"varint,1,req,name=SeatNo" json:"SeatNo,omitempty"`         //座位号
	Number     *int32  `protobuf:"varint,2,req,name=Number" json:"Number,omitempty"`         //数量
	Cards      []int32 `protobuf:"varint,3,rep,name=Cards" json:"Cards,omitempty"`           //牌,
	SurplusNum *int32  `protobuf:"varint,4,req,name=SurplusNum" json:"SurplusNum,omitempty"` //牌池剩余牌张数
}

func (x *SCMJ_BroadcastDeal) Reset() {
	*x = SCMJ_BroadcastDeal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SCMJ_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCMJ_BroadcastDeal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCMJ_BroadcastDeal) ProtoMessage() {}

func (x *SCMJ_BroadcastDeal) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SCMJ_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCMJ_BroadcastDeal.ProtoReflect.Descriptor instead.
func (*SCMJ_BroadcastDeal) Descriptor() ([]byte, []int) {
	return file_GameMsg_SCMJ_proto_rawDescGZIP(), []int{1}
}

func (x *SCMJ_BroadcastDeal) GetSeatNo() int32 {
	if x != nil && x.SeatNo != nil {
		return *x.SeatNo
	}
	return 0
}

func (x *SCMJ_BroadcastDeal) GetNumber() int32 {
	if x != nil && x.Number != nil {
		return *x.Number
	}
	return 0
}

func (x *SCMJ_BroadcastDeal) GetCards() []int32 {
	if x != nil {
		return x.Cards
	}
	return nil
}

func (x *SCMJ_BroadcastDeal) GetSurplusNum() int32 {
	if x != nil && x.SurplusNum != nil {
		return *x.SurplusNum
	}
	return 0
}

//操作类型,1定缺、2出牌、3碰、4杠(40明杠，41引杠，42暗杠)、7胡（70点炮胡，71抢杠胡，72自模胡，73杠上花，74杠上炮），8吃,9Pass,10选倍率
//操作，定缺（OpValue）、出牌（OpCards）、碰(OpCards)、杠（OpCards）、胡（OpCards）、
type SCMJ_Action struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpType  *int32  `protobuf:"varint,1,req,name=OpType" json:"OpType,omitempty"`   //操作类型,1定缺、2出牌、3碰、4杠等
	OpValue []int32 `protobuf:"varint,3,rep,name=OpValue" json:"OpValue,omitempty"` //值,
}

func (x *SCMJ_Action) Reset() {
	*x = SCMJ_Action{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SCMJ_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCMJ_Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCMJ_Action) ProtoMessage() {}

func (x *SCMJ_Action) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SCMJ_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCMJ_Action.ProtoReflect.Descriptor instead.
func (*SCMJ_Action) Descriptor() ([]byte, []int) {
	return file_GameMsg_SCMJ_proto_rawDescGZIP(), []int{2}
}

func (x *SCMJ_Action) GetOpType() int32 {
	if x != nil && x.OpType != nil {
		return *x.OpType
	}
	return 0
}

func (x *SCMJ_Action) GetOpValue() []int32 {
	if x != nil {
		return x.OpValue
	}
	return nil
}

//定缺操作返回
type SCMJ_BroadcastAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatNo  *int32  `protobuf:"varint,1,req,name=SeatNo" json:"SeatNo,omitempty"`   //座位号
	OpType  *int32  `protobuf:"varint,2,req,name=OpType" json:"OpType,omitempty"`   //操作类型
	OpValue []int32 `protobuf:"varint,4,rep,name=OpValue" json:"OpValue,omitempty"` //值
}

func (x *SCMJ_BroadcastAction) Reset() {
	*x = SCMJ_BroadcastAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SCMJ_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCMJ_BroadcastAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCMJ_BroadcastAction) ProtoMessage() {}

func (x *SCMJ_BroadcastAction) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SCMJ_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCMJ_BroadcastAction.ProtoReflect.Descriptor instead.
func (*SCMJ_BroadcastAction) Descriptor() ([]byte, []int) {
	return file_GameMsg_SCMJ_proto_rawDescGZIP(), []int{3}
}

func (x *SCMJ_BroadcastAction) GetSeatNo() int32 {
	if x != nil && x.SeatNo != nil {
		return *x.SeatNo
	}
	return 0
}

func (x *SCMJ_BroadcastAction) GetOpType() int32 {
	if x != nil && x.OpType != nil {
		return *x.OpType
	}
	return 0
}

func (x *SCMJ_BroadcastAction) GetOpValue() []int32 {
	if x != nil {
		return x.OpValue
	}
	return nil
}

type SCMJ_BroadcastChooseResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info []*SCMJ_ChooseInfo `protobuf:"bytes,1,rep,name=Info" json:"Info,omitempty"` //定缺信息
}

func (x *SCMJ_BroadcastChooseResult) Reset() {
	*x = SCMJ_BroadcastChooseResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SCMJ_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCMJ_BroadcastChooseResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCMJ_BroadcastChooseResult) ProtoMessage() {}

func (x *SCMJ_BroadcastChooseResult) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SCMJ_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCMJ_BroadcastChooseResult.ProtoReflect.Descriptor instead.
func (*SCMJ_BroadcastChooseResult) Descriptor() ([]byte, []int) {
	return file_GameMsg_SCMJ_proto_rawDescGZIP(), []int{4}
}

func (x *SCMJ_BroadcastChooseResult) GetInfo() []*SCMJ_ChooseInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type SCMJ_ChooseInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatNo *int32 `protobuf:"varint,1,req,name=SeatNo" json:"SeatNo,omitempty"` //座位号
	Type   *int32 `protobuf:"varint,2,req,name=Type" json:"Type,omitempty"`     //类型 //万:0x03 条:0x02 筒:0x01
}

func (x *SCMJ_ChooseInfo) Reset() {
	*x = SCMJ_ChooseInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SCMJ_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCMJ_ChooseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCMJ_ChooseInfo) ProtoMessage() {}

func (x *SCMJ_ChooseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SCMJ_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCMJ_ChooseInfo.ProtoReflect.Descriptor instead.
func (*SCMJ_ChooseInfo) Descriptor() ([]byte, []int) {
	return file_GameMsg_SCMJ_proto_rawDescGZIP(), []int{5}
}

func (x *SCMJ_ChooseInfo) GetSeatNo() int32 {
	if x != nil && x.SeatNo != nil {
		return *x.SeatNo
	}
	return 0
}

func (x *SCMJ_ChooseInfo) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

//等待[当前操作玩家]
type SCMJ_Wait struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatNo     *int32 `protobuf:"varint,1,req,name=SeatNo" json:"SeatNo,omitempty"`         //当前操作座位号
	OutTime    *int32 `protobuf:"varint,2,req,name=OutTime" json:"OutTime,omitempty"`       //超时时间
	SurplusNum *int32 `protobuf:"varint,4,req,name=SurplusNum" json:"SurplusNum,omitempty"` //牌池剩余牌张数
	GameState  *int32 `protobuf:"varint,5,req,name=GameState" json:"GameState,omitempty"`   //游戏阶段
}

func (x *SCMJ_Wait) Reset() {
	*x = SCMJ_Wait{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SCMJ_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCMJ_Wait) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCMJ_Wait) ProtoMessage() {}

func (x *SCMJ_Wait) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SCMJ_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCMJ_Wait.ProtoReflect.Descriptor instead.
func (*SCMJ_Wait) Descriptor() ([]byte, []int) {
	return file_GameMsg_SCMJ_proto_rawDescGZIP(), []int{6}
}

func (x *SCMJ_Wait) GetSeatNo() int32 {
	if x != nil && x.SeatNo != nil {
		return *x.SeatNo
	}
	return 0
}

func (x *SCMJ_Wait) GetOutTime() int32 {
	if x != nil && x.OutTime != nil {
		return *x.OutTime
	}
	return 0
}

func (x *SCMJ_Wait) GetSurplusNum() int32 {
	if x != nil && x.SurplusNum != nil {
		return *x.SurplusNum
	}
	return 0
}

func (x *SCMJ_Wait) GetGameState() int32 {
	if x != nil && x.GameState != nil {
		return *x.GameState
	}
	return 0
}

//玩家可操作信息，摸牌或一个玩家操作时候发
type SCMJ_OpEventInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GangValue  []int32 `protobuf:"varint,1,rep,name=GangValue" json:"GangValue,omitempty"`   //可操作值，杠牌
	OtherValue *int32  `protobuf:"varint,2,req,name=OtherValue" json:"OtherValue,omitempty"` //可操作值，除杠牌以外其他操作
	Chi        *bool   `protobuf:"varint,4,req,name=Chi" json:"Chi,omitempty"`               //是否吃
	Peng       *bool   `protobuf:"varint,5,req,name=Peng" json:"Peng,omitempty"`             //是否碰
	Gang       *bool   `protobuf:"varint,6,req,name=Gang" json:"Gang,omitempty"`             //是否杠
	Hu         *bool   `protobuf:"varint,7,req,name=Hu" json:"Hu,omitempty"`                 //是否胡
	Time       *int32  `protobuf:"varint,8,req,name=Time" json:"Time,omitempty"`             //可操作時間
}

func (x *SCMJ_OpEventInfo) Reset() {
	*x = SCMJ_OpEventInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SCMJ_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCMJ_OpEventInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCMJ_OpEventInfo) ProtoMessage() {}

func (x *SCMJ_OpEventInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SCMJ_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCMJ_OpEventInfo.ProtoReflect.Descriptor instead.
func (*SCMJ_OpEventInfo) Descriptor() ([]byte, []int) {
	return file_GameMsg_SCMJ_proto_rawDescGZIP(), []int{7}
}

func (x *SCMJ_OpEventInfo) GetGangValue() []int32 {
	if x != nil {
		return x.GangValue
	}
	return nil
}

func (x *SCMJ_OpEventInfo) GetOtherValue() int32 {
	if x != nil && x.OtherValue != nil {
		return *x.OtherValue
	}
	return 0
}

func (x *SCMJ_OpEventInfo) GetChi() bool {
	if x != nil && x.Chi != nil {
		return *x.Chi
	}
	return false
}

func (x *SCMJ_OpEventInfo) GetPeng() bool {
	if x != nil && x.Peng != nil {
		return *x.Peng
	}
	return false
}

func (x *SCMJ_OpEventInfo) GetGang() bool {
	if x != nil && x.Gang != nil {
		return *x.Gang
	}
	return false
}

func (x *SCMJ_OpEventInfo) GetHu() bool {
	if x != nil && x.Hu != nil {
		return *x.Hu
	}
	return false
}

func (x *SCMJ_OpEventInfo) GetTime() int32 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

//用户操作
type SCMJ_BroadCastUserOper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatNo   *int32  `protobuf:"varint,1,req,name=SeatNo" json:"SeatNo,omitempty"`     //吃碰杠玩家位置
	BeSeatNo *int32  `protobuf:"varint,2,req,name=BeSeatNo" json:"BeSeatNo,omitempty"` //被吃碰杠玩家位置
	BeCard   *int32  `protobuf:"varint,6,req,name=BeCard" json:"BeCard,omitempty"`     //被吃碰杠玩家牌
	OperType *int32  `protobuf:"varint,3,req,name=OperType" json:"OperType,omitempty"` //操作的类型
	Cards    []int32 `protobuf:"varint,4,rep,name=Cards" json:"Cards,omitempty"`       //牌,
	HuType   *int32  `protobuf:"varint,5,req,name=HuType" json:"HuType,omitempty"`     //胡牌类型
}

func (x *SCMJ_BroadCastUserOper) Reset() {
	*x = SCMJ_BroadCastUserOper{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SCMJ_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCMJ_BroadCastUserOper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCMJ_BroadCastUserOper) ProtoMessage() {}

func (x *SCMJ_BroadCastUserOper) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SCMJ_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCMJ_BroadCastUserOper.ProtoReflect.Descriptor instead.
func (*SCMJ_BroadCastUserOper) Descriptor() ([]byte, []int) {
	return file_GameMsg_SCMJ_proto_rawDescGZIP(), []int{8}
}

func (x *SCMJ_BroadCastUserOper) GetSeatNo() int32 {
	if x != nil && x.SeatNo != nil {
		return *x.SeatNo
	}
	return 0
}

func (x *SCMJ_BroadCastUserOper) GetBeSeatNo() int32 {
	if x != nil && x.BeSeatNo != nil {
		return *x.BeSeatNo
	}
	return 0
}

func (x *SCMJ_BroadCastUserOper) GetBeCard() int32 {
	if x != nil && x.BeCard != nil {
		return *x.BeCard
	}
	return 0
}

func (x *SCMJ_BroadCastUserOper) GetOperType() int32 {
	if x != nil && x.OperType != nil {
		return *x.OperType
	}
	return 0
}

func (x *SCMJ_BroadCastUserOper) GetCards() []int32 {
	if x != nil {
		return x.Cards
	}
	return nil
}

func (x *SCMJ_BroadCastUserOper) GetHuType() int32 {
	if x != nil && x.HuType != nil {
		return *x.HuType
	}
	return 0
}

//亮牌
type S2C_SCMJ_Light struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*SCMJ_HandCards `protobuf:"bytes,1,rep,name=Data" json:"Data,omitempty"` //所有玩家手牌
}

func (x *S2C_SCMJ_Light) Reset() {
	*x = S2C_SCMJ_Light{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SCMJ_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2C_SCMJ_Light) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2C_SCMJ_Light) ProtoMessage() {}

func (x *S2C_SCMJ_Light) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SCMJ_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2C_SCMJ_Light.ProtoReflect.Descriptor instead.
func (*S2C_SCMJ_Light) Descriptor() ([]byte, []int) {
	return file_GameMsg_SCMJ_proto_rawDescGZIP(), []int{9}
}

func (x *S2C_SCMJ_Light) GetData() []*SCMJ_HandCards {
	if x != nil {
		return x.Data
	}
	return nil
}

type SCMJ_HandCards struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatNo *int32  `protobuf:"varint,1,req,name=SeatNo" json:"SeatNo,omitempty"` //座位号
	Cards  []int32 `protobuf:"varint,2,rep,name=Cards" json:"Cards,omitempty"`   //牌,
}

func (x *SCMJ_HandCards) Reset() {
	*x = SCMJ_HandCards{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SCMJ_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCMJ_HandCards) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCMJ_HandCards) ProtoMessage() {}

func (x *SCMJ_HandCards) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SCMJ_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCMJ_HandCards.ProtoReflect.Descriptor instead.
func (*SCMJ_HandCards) Descriptor() ([]byte, []int) {
	return file_GameMsg_SCMJ_proto_rawDescGZIP(), []int{10}
}

func (x *SCMJ_HandCards) GetSeatNo() int32 {
	if x != nil && x.SeatNo != nil {
		return *x.SeatNo
	}
	return 0
}

func (x *SCMJ_HandCards) GetCards() []int32 {
	if x != nil {
		return x.Cards
	}
	return nil
}

//客户端请求提示信息
type C2S_SCMJ_Remind struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OutCard *int32 `protobuf:"varint,1,req,name=OutCard" json:"OutCard,omitempty"` //出牌牌值
}

func (x *C2S_SCMJ_Remind) Reset() {
	*x = C2S_SCMJ_Remind{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SCMJ_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_SCMJ_Remind) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_SCMJ_Remind) ProtoMessage() {}

func (x *C2S_SCMJ_Remind) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SCMJ_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_SCMJ_Remind.ProtoReflect.Descriptor instead.
func (*C2S_SCMJ_Remind) Descriptor() ([]byte, []int) {
	return file_GameMsg_SCMJ_proto_rawDescGZIP(), []int{11}
}

func (x *C2S_SCMJ_Remind) GetOutCard() int32 {
	if x != nil && x.OutCard != nil {
		return *x.OutCard
	}
	return 0
}

type S2C_SCMJ_RemindMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*SCMJ_RemindData `protobuf:"bytes,1,rep,name=Data" json:"Data,omitempty"` //提示信息
}

func (x *S2C_SCMJ_RemindMsg) Reset() {
	*x = S2C_SCMJ_RemindMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SCMJ_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2C_SCMJ_RemindMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2C_SCMJ_RemindMsg) ProtoMessage() {}

func (x *S2C_SCMJ_RemindMsg) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SCMJ_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2C_SCMJ_RemindMsg.ProtoReflect.Descriptor instead.
func (*S2C_SCMJ_RemindMsg) Descriptor() ([]byte, []int) {
	return file_GameMsg_SCMJ_proto_rawDescGZIP(), []int{12}
}

func (x *S2C_SCMJ_RemindMsg) GetData() []*SCMJ_RemindData {
	if x != nil {
		return x.Data
	}
	return nil
}

type SCMJ_RemindData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OutCard *int32             `protobuf:"varint,1,req,name=OutCard" json:"OutCard,omitempty"` //出牌牌值
	Info    []*SCMJ_RemindInfo `protobuf:"bytes,2,rep,name=Info" json:"Info,omitempty"`
}

func (x *SCMJ_RemindData) Reset() {
	*x = SCMJ_RemindData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SCMJ_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCMJ_RemindData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCMJ_RemindData) ProtoMessage() {}

func (x *SCMJ_RemindData) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SCMJ_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCMJ_RemindData.ProtoReflect.Descriptor instead.
func (*SCMJ_RemindData) Descriptor() ([]byte, []int) {
	return file_GameMsg_SCMJ_proto_rawDescGZIP(), []int{13}
}

func (x *SCMJ_RemindData) GetOutCard() int32 {
	if x != nil && x.OutCard != nil {
		return *x.OutCard
	}
	return 0
}

func (x *SCMJ_RemindData) GetInfo() []*SCMJ_RemindInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type SCMJ_RemindInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TingCard *int32 `protobuf:"varint,1,req,name=TingCard" json:"TingCard,omitempty"` //玩家可听牌牌值
	Number   *int32 `protobuf:"varint,2,req,name=Number" json:"Number,omitempty"`     //当前场上剩余张数
	Rate     *int32 `protobuf:"varint,3,req,name=Rate" json:"Rate,omitempty"`         //听牌倍率
}

func (x *SCMJ_RemindInfo) Reset() {
	*x = SCMJ_RemindInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SCMJ_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCMJ_RemindInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCMJ_RemindInfo) ProtoMessage() {}

func (x *SCMJ_RemindInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SCMJ_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCMJ_RemindInfo.ProtoReflect.Descriptor instead.
func (*SCMJ_RemindInfo) Descriptor() ([]byte, []int) {
	return file_GameMsg_SCMJ_proto_rawDescGZIP(), []int{14}
}

func (x *SCMJ_RemindInfo) GetTingCard() int32 {
	if x != nil && x.TingCard != nil {
		return *x.TingCard
	}
	return 0
}

func (x *SCMJ_RemindInfo) GetNumber() int32 {
	if x != nil && x.Number != nil {
		return *x.Number
	}
	return 0
}

func (x *SCMJ_RemindInfo) GetRate() int32 {
	if x != nil && x.Rate != nil {
		return *x.Rate
	}
	return 0
}

// 托管
type C2S_SCMJ_TuoGuan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State *bool `protobuf:"varint,1,req,name=State" json:"State,omitempty"` //状态
}

func (x *C2S_SCMJ_TuoGuan) Reset() {
	*x = C2S_SCMJ_TuoGuan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SCMJ_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_SCMJ_TuoGuan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_SCMJ_TuoGuan) ProtoMessage() {}

func (x *C2S_SCMJ_TuoGuan) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SCMJ_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_SCMJ_TuoGuan.ProtoReflect.Descriptor instead.
func (*C2S_SCMJ_TuoGuan) Descriptor() ([]byte, []int) {
	return file_GameMsg_SCMJ_proto_rawDescGZIP(), []int{15}
}

func (x *C2S_SCMJ_TuoGuan) GetState() bool {
	if x != nil && x.State != nil {
		return *x.State
	}
	return false
}

type S2C_SCMJ_TuoGuan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatNo *int32 `protobuf:"varint,1,req,name=SeatNo" json:"SeatNo,omitempty"` //座位号
	State  *bool  `protobuf:"varint,2,req,name=State" json:"State,omitempty"`   //状态
}

func (x *S2C_SCMJ_TuoGuan) Reset() {
	*x = S2C_SCMJ_TuoGuan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SCMJ_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2C_SCMJ_TuoGuan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2C_SCMJ_TuoGuan) ProtoMessage() {}

func (x *S2C_SCMJ_TuoGuan) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SCMJ_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2C_SCMJ_TuoGuan.ProtoReflect.Descriptor instead.
func (*S2C_SCMJ_TuoGuan) Descriptor() ([]byte, []int) {
	return file_GameMsg_SCMJ_proto_rawDescGZIP(), []int{16}
}

func (x *S2C_SCMJ_TuoGuan) GetSeatNo() int32 {
	if x != nil && x.SeatNo != nil {
		return *x.SeatNo
	}
	return 0
}

func (x *S2C_SCMJ_TuoGuan) GetState() bool {
	if x != nil && x.State != nil {
		return *x.State
	}
	return false
}

//刮风
//下雨
//查花猪
//查大叫
type SCMJ_InTimeSettle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info []*SCMJ_SettleInfo `protobuf:"bytes,1,rep,name=Info" json:"Info,omitempty"` //及时结算信息
}

func (x *SCMJ_InTimeSettle) Reset() {
	*x = SCMJ_InTimeSettle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SCMJ_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCMJ_InTimeSettle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCMJ_InTimeSettle) ProtoMessage() {}

func (x *SCMJ_InTimeSettle) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SCMJ_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCMJ_InTimeSettle.ProtoReflect.Descriptor instead.
func (*SCMJ_InTimeSettle) Descriptor() ([]byte, []int) {
	return file_GameMsg_SCMJ_proto_rawDescGZIP(), []int{17}
}

func (x *SCMJ_InTimeSettle) GetInfo() []*SCMJ_SettleInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

//结算类型Type: 1刮风;2下雨;3查花猪;4查大叫;5胡,6自摸胡,点炮胡7,抢杠胡8;9退杠,呼叫转移10
type SCMJ_SettleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatNo *int32 `protobuf:"varint,1,req,name=SeatNo" json:"SeatNo,omitempty"` //座位号
	Type   *int32 `protobuf:"varint,2,req,name=Type" json:"Type,omitempty"`     //结算类型 1刮风，2下雨，3查花猪，4查大叫,5胡
	Rate   *int32 `protobuf:"varint,3,req,name=Rate" json:"Rate,omitempty"`     //倍率
	Score  *int64 `protobuf:"varint,4,req,name=Score" json:"Score,omitempty"`   //得分
}

func (x *SCMJ_SettleInfo) Reset() {
	*x = SCMJ_SettleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SCMJ_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCMJ_SettleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCMJ_SettleInfo) ProtoMessage() {}

func (x *SCMJ_SettleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SCMJ_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCMJ_SettleInfo.ProtoReflect.Descriptor instead.
func (*SCMJ_SettleInfo) Descriptor() ([]byte, []int) {
	return file_GameMsg_SCMJ_proto_rawDescGZIP(), []int{18}
}

func (x *SCMJ_SettleInfo) GetSeatNo() int32 {
	if x != nil && x.SeatNo != nil {
		return *x.SeatNo
	}
	return 0
}

func (x *SCMJ_SettleInfo) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *SCMJ_SettleInfo) GetRate() int32 {
	if x != nil && x.Rate != nil {
		return *x.Rate
	}
	return 0
}

func (x *SCMJ_SettleInfo) GetScore() int64 {
	if x != nil && x.Score != nil {
		return *x.Score
	}
	return 0
}

//大结算
type SCMJ_TotalSettleMent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RateMax *int32              `protobuf:"varint,1,req,name=RateMax" json:"RateMax,omitempty"` //最大倍率
	Total   []*SCMJ_SettleTotal `protobuf:"bytes,2,rep,name=Total" json:"Total,omitempty"`      //总计
}

func (x *SCMJ_TotalSettleMent) Reset() {
	*x = SCMJ_TotalSettleMent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SCMJ_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCMJ_TotalSettleMent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCMJ_TotalSettleMent) ProtoMessage() {}

func (x *SCMJ_TotalSettleMent) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SCMJ_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCMJ_TotalSettleMent.ProtoReflect.Descriptor instead.
func (*SCMJ_TotalSettleMent) Descriptor() ([]byte, []int) {
	return file_GameMsg_SCMJ_proto_rawDescGZIP(), []int{19}
}

func (x *SCMJ_TotalSettleMent) GetRateMax() int32 {
	if x != nil && x.RateMax != nil {
		return *x.RateMax
	}
	return 0
}

func (x *SCMJ_TotalSettleMent) GetTotal() []*SCMJ_SettleTotal {
	if x != nil {
		return x.Total
	}
	return nil
}

type SCMJ_SettleTotal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatNo     *int32               `protobuf:"varint,1,req,name=SeatNo" json:"SeatNo,omitempty"`         //座位号
	TotalScore *int64               `protobuf:"varint,2,req,name=TotalScore" json:"TotalScore,omitempty"` //得分
	Info       []*SCMJ_SettleMyInfo `protobuf:"bytes,3,rep,name=Info" json:"Info,omitempty"`              //个人详单
}

func (x *SCMJ_SettleTotal) Reset() {
	*x = SCMJ_SettleTotal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SCMJ_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCMJ_SettleTotal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCMJ_SettleTotal) ProtoMessage() {}

func (x *SCMJ_SettleTotal) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SCMJ_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCMJ_SettleTotal.ProtoReflect.Descriptor instead.
func (*SCMJ_SettleTotal) Descriptor() ([]byte, []int) {
	return file_GameMsg_SCMJ_proto_rawDescGZIP(), []int{20}
}

func (x *SCMJ_SettleTotal) GetSeatNo() int32 {
	if x != nil && x.SeatNo != nil {
		return *x.SeatNo
	}
	return 0
}

func (x *SCMJ_SettleTotal) GetTotalScore() int64 {
	if x != nil && x.TotalScore != nil {
		return *x.TotalScore
	}
	return 0
}

func (x *SCMJ_SettleTotal) GetInfo() []*SCMJ_SettleMyInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

//胡牌牌型HuType: 1屁胡;2大对子;3金勾吊;4七对子;5龙七对;6清一色;7带幺九;8天胡;9地胡
//结算类型Type: 1刮风;2下雨;3查花猪;4查大叫;5胡,6自摸胡,点炮胡7,抢杠胡8;9退杠
type SCMJ_SettleMyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       *int32  `protobuf:"varint,1,req,name=Type" json:"Type,omitempty"`             //结算类型
	Rate       *int32  `protobuf:"varint,2,req,name=Rate" json:"Rate,omitempty"`             //倍率
	HuType     []int32 `protobuf:"varint,3,rep,name=HuType" json:"HuType,omitempty"`         //得分牌型或胡牌牌型
	MyScore    *int64  `protobuf:"varint,4,req,name=MyScore" json:"MyScore,omitempty"`       //得分
	FromSeatNo []int32 `protobuf:"varint,5,rep,name=FromSeatNo" json:"FromSeatNo,omitempty"` //来源座位号
	AddRate    *int32  `protobuf:"varint,6,req,name=AddRate" json:"AddRate,omitempty"`       //加倍
}

func (x *SCMJ_SettleMyInfo) Reset() {
	*x = SCMJ_SettleMyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SCMJ_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCMJ_SettleMyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCMJ_SettleMyInfo) ProtoMessage() {}

func (x *SCMJ_SettleMyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SCMJ_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCMJ_SettleMyInfo.ProtoReflect.Descriptor instead.
func (*SCMJ_SettleMyInfo) Descriptor() ([]byte, []int) {
	return file_GameMsg_SCMJ_proto_rawDescGZIP(), []int{21}
}

func (x *SCMJ_SettleMyInfo) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *SCMJ_SettleMyInfo) GetRate() int32 {
	if x != nil && x.Rate != nil {
		return *x.Rate
	}
	return 0
}

func (x *SCMJ_SettleMyInfo) GetHuType() []int32 {
	if x != nil {
		return x.HuType
	}
	return nil
}

func (x *SCMJ_SettleMyInfo) GetMyScore() int64 {
	if x != nil && x.MyScore != nil {
		return *x.MyScore
	}
	return 0
}

func (x *SCMJ_SettleMyInfo) GetFromSeatNo() []int32 {
	if x != nil {
		return x.FromSeatNo
	}
	return nil
}

func (x *SCMJ_SettleMyInfo) GetAddRate() int32 {
	if x != nil && x.AddRate != nil {
		return *x.AddRate
	}
	return 0
}

//---------------断连、游戏设置----------------------------------
type SCMJ_GameScence struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ButtonSeatNo *int32               `protobuf:"varint,1,req,name=ButtonSeatNo" json:"ButtonSeatNo,omitempty"` //庄家座位号
	GameState    *int32               `protobuf:"varint,2,req,name=GameState" json:"GameState,omitempty"`       //游戏阶段
	SurplusNum   *int32               `protobuf:"varint,3,req,name=SurplusNum" json:"SurplusNum,omitempty"`     //牌池剩余牌张数
	SurplusTime  *int32               `protobuf:"varint,4,req,name=SurplusTime" json:"SurplusTime,omitempty"`   //剩余时间
	CurSeatNo    *int32               `protobuf:"varint,5,req,name=CurSeatNo" json:"CurSeatNo,omitempty"`       //当前操作玩家座位号
	CanOp        *SCMJ_OpEventInfo    `protobuf:"bytes,6,req,name=CanOp" json:"CanOp,omitempty"`                //玩家可操作信息
	UserInfo     []*SCMJ_UserInfo     `protobuf:"bytes,7,rep,name=UserInfo" json:"UserInfo,omitempty"`          //玩家数据
	InTimeSettle []*SCMJ_SettleMyInfo `protobuf:"bytes,8,rep,name=InTimeSettle" json:"InTimeSettle,omitempty"`  //即时结算
	Remind       *S2C_SCMJ_RemindMsg  `protobuf:"bytes,9,req,name=Remind" json:"Remind,omitempty"`              //提示
}

func (x *SCMJ_GameScence) Reset() {
	*x = SCMJ_GameScence{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SCMJ_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCMJ_GameScence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCMJ_GameScence) ProtoMessage() {}

func (x *SCMJ_GameScence) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SCMJ_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCMJ_GameScence.ProtoReflect.Descriptor instead.
func (*SCMJ_GameScence) Descriptor() ([]byte, []int) {
	return file_GameMsg_SCMJ_proto_rawDescGZIP(), []int{22}
}

func (x *SCMJ_GameScence) GetButtonSeatNo() int32 {
	if x != nil && x.ButtonSeatNo != nil {
		return *x.ButtonSeatNo
	}
	return 0
}

func (x *SCMJ_GameScence) GetGameState() int32 {
	if x != nil && x.GameState != nil {
		return *x.GameState
	}
	return 0
}

func (x *SCMJ_GameScence) GetSurplusNum() int32 {
	if x != nil && x.SurplusNum != nil {
		return *x.SurplusNum
	}
	return 0
}

func (x *SCMJ_GameScence) GetSurplusTime() int32 {
	if x != nil && x.SurplusTime != nil {
		return *x.SurplusTime
	}
	return 0
}

func (x *SCMJ_GameScence) GetCurSeatNo() int32 {
	if x != nil && x.CurSeatNo != nil {
		return *x.CurSeatNo
	}
	return 0
}

func (x *SCMJ_GameScence) GetCanOp() *SCMJ_OpEventInfo {
	if x != nil {
		return x.CanOp
	}
	return nil
}

func (x *SCMJ_GameScence) GetUserInfo() []*SCMJ_UserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

func (x *SCMJ_GameScence) GetInTimeSettle() []*SCMJ_SettleMyInfo {
	if x != nil {
		return x.InTimeSettle
	}
	return nil
}

func (x *SCMJ_GameScence) GetRemind() *S2C_SCMJ_RemindMsg {
	if x != nil {
		return x.Remind
	}
	return nil
}

type SCMJ_UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatNo    *int32          `protobuf:"varint,1,req,name=SeatNo" json:"SeatNo,omitempty"`       //座位号
	HandCard  []int32         `protobuf:"varint,2,rep,name=HandCard" json:"HandCard,omitempty"`   //手牌
	RiverCard []int32         `protobuf:"varint,3,rep,name=RiverCard" json:"RiverCard,omitempty"` //河牌
	HandCount *int32          `protobuf:"varint,4,req,name=HandCount" json:"HandCount,omitempty"` //手牌数量
	DingQue   *int32          `protobuf:"varint,5,req,name=DingQue" json:"DingQue,omitempty"`     //定缺类型:万:0x03 条:0x02 筒:0x01
	UserState *bool           `protobuf:"varint,6,req,name=UserState" json:"UserState,omitempty"` //玩家状态，true已胡牌，false未胡牌
	TuoGuan   *bool           `protobuf:"varint,7,req,name=TuoGuan" json:"TuoGuan,omitempty"`     //是否托管
	HuaZhu    *bool           `protobuf:"varint,8,req,name=HuaZhu" json:"HuaZhu,omitempty"`       //是否花猪
	Dajiao    *bool           `protobuf:"varint,9,req,name=Dajiao" json:"Dajiao,omitempty"`       //是否大叫
	OpCard    []*SCMJ_OpGroup `protobuf:"bytes,10,rep,name=OpCard" json:"OpCard,omitempty"`       //吃碰杠胡牌
	Rate      *int32          `protobuf:"varint,11,req,name=Rate" json:"Rate,omitempty"`          //倍率
}

func (x *SCMJ_UserInfo) Reset() {
	*x = SCMJ_UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SCMJ_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCMJ_UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCMJ_UserInfo) ProtoMessage() {}

func (x *SCMJ_UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SCMJ_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCMJ_UserInfo.ProtoReflect.Descriptor instead.
func (*SCMJ_UserInfo) Descriptor() ([]byte, []int) {
	return file_GameMsg_SCMJ_proto_rawDescGZIP(), []int{23}
}

func (x *SCMJ_UserInfo) GetSeatNo() int32 {
	if x != nil && x.SeatNo != nil {
		return *x.SeatNo
	}
	return 0
}

func (x *SCMJ_UserInfo) GetHandCard() []int32 {
	if x != nil {
		return x.HandCard
	}
	return nil
}

func (x *SCMJ_UserInfo) GetRiverCard() []int32 {
	if x != nil {
		return x.RiverCard
	}
	return nil
}

func (x *SCMJ_UserInfo) GetHandCount() int32 {
	if x != nil && x.HandCount != nil {
		return *x.HandCount
	}
	return 0
}

func (x *SCMJ_UserInfo) GetDingQue() int32 {
	if x != nil && x.DingQue != nil {
		return *x.DingQue
	}
	return 0
}

func (x *SCMJ_UserInfo) GetUserState() bool {
	if x != nil && x.UserState != nil {
		return *x.UserState
	}
	return false
}

func (x *SCMJ_UserInfo) GetTuoGuan() bool {
	if x != nil && x.TuoGuan != nil {
		return *x.TuoGuan
	}
	return false
}

func (x *SCMJ_UserInfo) GetHuaZhu() bool {
	if x != nil && x.HuaZhu != nil {
		return *x.HuaZhu
	}
	return false
}

func (x *SCMJ_UserInfo) GetDajiao() bool {
	if x != nil && x.Dajiao != nil {
		return *x.Dajiao
	}
	return false
}

func (x *SCMJ_UserInfo) GetOpCard() []*SCMJ_OpGroup {
	if x != nil {
		return x.OpCard
	}
	return nil
}

func (x *SCMJ_UserInfo) GetRate() int32 {
	if x != nil && x.Rate != nil {
		return *x.Rate
	}
	return 0
}

type SCMJ_OpGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Card   []int32 `protobuf:"varint,1,rep,name=Card" json:"Card,omitempty"`     //牌
	Type   *int32  `protobuf:"varint,2,req,name=Type" json:"Type,omitempty"`     //类型 3碰;4杠,40明杠(补杠),41引杠(明杠),42暗杠(暗杠),7胡,8吃,
	SeatNo *int32  `protobuf:"varint,3,req,name=SeatNo" json:"SeatNo,omitempty"` //座位号
}

func (x *SCMJ_OpGroup) Reset() {
	*x = SCMJ_OpGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SCMJ_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCMJ_OpGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCMJ_OpGroup) ProtoMessage() {}

func (x *SCMJ_OpGroup) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SCMJ_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCMJ_OpGroup.ProtoReflect.Descriptor instead.
func (*SCMJ_OpGroup) Descriptor() ([]byte, []int) {
	return file_GameMsg_SCMJ_proto_rawDescGZIP(), []int{24}
}

func (x *SCMJ_OpGroup) GetCard() []int32 {
	if x != nil {
		return x.Card
	}
	return nil
}

func (x *SCMJ_OpGroup) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *SCMJ_OpGroup) GetSeatNo() int32 {
	if x != nil && x.SeatNo != nil {
		return *x.SeatNo
	}
	return 0
}

//服务端消息：游戏设置
type Mj_GameSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReadyTime *int32 `protobuf:"varint,1,req,name=ReadyTime" json:"ReadyTime,omitempty"` //准备时间
	BaseScore *int64 `protobuf:"varint,2,req,name=BaseScore" json:"BaseScore,omitempty"` //底分
}

func (x *Mj_GameSetting) Reset() {
	*x = Mj_GameSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SCMJ_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mj_GameSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mj_GameSetting) ProtoMessage() {}

func (x *Mj_GameSetting) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SCMJ_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mj_GameSetting.ProtoReflect.Descriptor instead.
func (*Mj_GameSetting) Descriptor() ([]byte, []int) {
	return file_GameMsg_SCMJ_proto_rawDescGZIP(), []int{25}
}

func (x *Mj_GameSetting) GetReadyTime() int32 {
	if x != nil && x.ReadyTime != nil {
		return *x.ReadyTime
	}
	return 0
}

func (x *Mj_GameSetting) GetBaseScore() int64 {
	if x != nil && x.BaseScore != nil {
		return *x.BaseScore
	}
	return 0
}

//异常
type SCMJ_Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorId   *int32  `protobuf:"varint,1,req,name=errorId" json:"errorId,omitempty"`    //错误id
	ErrorInfo *string `protobuf:"bytes,2,req,name=errorInfo" json:"errorInfo,omitempty"` //错误信息
}

func (x *SCMJ_Error) Reset() {
	*x = SCMJ_Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SCMJ_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCMJ_Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCMJ_Error) ProtoMessage() {}

func (x *SCMJ_Error) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SCMJ_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCMJ_Error.ProtoReflect.Descriptor instead.
func (*SCMJ_Error) Descriptor() ([]byte, []int) {
	return file_GameMsg_SCMJ_proto_rawDescGZIP(), []int{26}
}

func (x *SCMJ_Error) GetErrorId() int32 {
	if x != nil && x.ErrorId != nil {
		return *x.ErrorId
	}
	return 0
}

func (x *SCMJ_Error) GetErrorInfo() string {
	if x != nil && x.ErrorInfo != nil {
		return *x.ErrorInfo
	}
	return ""
}

var File_GameMsg_SCMJ_proto protoreflect.FileDescriptor

var file_GameMsg_SCMJ_proto_rawDesc = []byte{
	0x0a, 0x12, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x5f, 0x53, 0x43, 0x4d, 0x4a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x28,
	0x0a, 0x12, 0x53, 0x43, 0x4d, 0x4a, 0x5f, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74,
	0x44, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x04, 0x44, 0x69, 0x63, 0x65, 0x22, 0x7a, 0x0a, 0x12, 0x53, 0x43, 0x4d, 0x4a,
	0x5f, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x44, 0x65, 0x61, 0x6c, 0x12, 0x16,
	0x0a, 0x06, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06,
	0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x43,
	0x61, 0x72, 0x64, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x4e,
	0x75, 0x6d, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x53, 0x75, 0x72, 0x70, 0x6c, 0x75,
	0x73, 0x4e, 0x75, 0x6d, 0x22, 0x3f, 0x0a, 0x0b, 0x53, 0x43, 0x4d, 0x4a, 0x5f, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4f,
	0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x4f, 0x70,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x60, 0x0a, 0x14, 0x53, 0x43, 0x4d, 0x4a, 0x5f, 0x42, 0x72,
	0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x53,
	0x65, 0x61, 0x74, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x4f, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07,
	0x4f, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4b, 0x0a, 0x1a, 0x53, 0x43, 0x4d, 0x4a, 0x5f,
	0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x43, 0x68, 0x6f, 0x6f, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53,
	0x43, 0x4d, 0x4a, 0x5f, 0x43, 0x68, 0x6f, 0x6f, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x3d, 0x0a, 0x0f, 0x53, 0x43, 0x4d, 0x4a, 0x5f, 0x43, 0x68, 0x6f,
	0x6f, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x74, 0x4e,
	0x6f, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x12,
	0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x7b, 0x0a, 0x09, 0x53, 0x43, 0x4d, 0x4a, 0x5f, 0x57, 0x61, 0x69, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x06, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x75, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x4f, 0x75, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x4e, 0x75, 0x6d,
	0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x53, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x4e,
	0x75, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x22, 0xae, 0x01, 0x0a, 0x10, 0x53, 0x43, 0x4d, 0x4a, 0x5f, 0x4f, 0x70, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x47, 0x61, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x47, 0x61, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x43, 0x68, 0x69, 0x18, 0x04, 0x20, 0x02, 0x28, 0x08,
	0x52, 0x03, 0x43, 0x68, 0x69, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x65, 0x6e, 0x67, 0x18, 0x05, 0x20,
	0x02, 0x28, 0x08, 0x52, 0x04, 0x50, 0x65, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x47, 0x61, 0x6e,
	0x67, 0x18, 0x06, 0x20, 0x02, 0x28, 0x08, 0x52, 0x04, 0x47, 0x61, 0x6e, 0x67, 0x12, 0x0e, 0x0a,
	0x02, 0x48, 0x75, 0x18, 0x07, 0x20, 0x02, 0x28, 0x08, 0x52, 0x02, 0x48, 0x75, 0x12, 0x12, 0x0a,
	0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0xae, 0x01, 0x0a, 0x16, 0x53, 0x43, 0x4d, 0x4a, 0x5f, 0x42, 0x72, 0x6f, 0x61, 0x64,
	0x43, 0x61, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x53, 0x65,
	0x61, 0x74, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x65, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x42, 0x65, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f,
	0x12, 0x16, 0x0a, 0x06, 0x42, 0x65, 0x43, 0x61, 0x72, 0x64, 0x18, 0x06, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x06, 0x42, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x70, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x4f, 0x70, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x75,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x48, 0x75, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x3e, 0x0a, 0x0e, 0x53, 0x32, 0x43, 0x5f, 0x53, 0x43, 0x4d, 0x4a, 0x5f, 0x4c,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x2c, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x43,
	0x4d, 0x4a, 0x5f, 0x48, 0x61, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x73, 0x52, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x22, 0x3e, 0x0a, 0x0e, 0x53, 0x43, 0x4d, 0x4a, 0x5f, 0x48, 0x61, 0x6e, 0x64, 0x43,
	0x61, 0x72, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x12, 0x14, 0x0a, 0x05,
	0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x43, 0x61, 0x72,
	0x64, 0x73, 0x22, 0x2b, 0x0a, 0x0f, 0x43, 0x32, 0x53, 0x5f, 0x53, 0x43, 0x4d, 0x4a, 0x5f, 0x52,
	0x65, 0x6d, 0x69, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x75, 0x74, 0x43, 0x61, 0x72, 0x64,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x4f, 0x75, 0x74, 0x43, 0x61, 0x72, 0x64, 0x22,
	0x43, 0x0a, 0x12, 0x53, 0x32, 0x43, 0x5f, 0x53, 0x43, 0x4d, 0x4a, 0x5f, 0x52, 0x65, 0x6d, 0x69,
	0x6e, 0x64, 0x4d, 0x73, 0x67, 0x12, 0x2d, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53,
	0x43, 0x4d, 0x4a, 0x5f, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x22, 0x5a, 0x0a, 0x0f, 0x53, 0x43, 0x4d, 0x4a, 0x5f, 0x52, 0x65, 0x6d,
	0x69, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x75, 0x74, 0x43, 0x61,
	0x72, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x4f, 0x75, 0x74, 0x43, 0x61, 0x72,
	0x64, 0x12, 0x2d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x43, 0x4d, 0x4a, 0x5f,
	0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x59, 0x0a, 0x0f, 0x53, 0x43, 0x4d, 0x4a, 0x5f, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x72, 0x64, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x54, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x72, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x06, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x52, 0x61, 0x74, 0x65, 0x22, 0x28, 0x0a, 0x10, 0x43,
	0x32, 0x53, 0x5f, 0x53, 0x43, 0x4d, 0x4a, 0x5f, 0x54, 0x75, 0x6f, 0x47, 0x75, 0x61, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x52, 0x05,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x40, 0x0a, 0x10, 0x53, 0x32, 0x43, 0x5f, 0x53, 0x43, 0x4d,
	0x4a, 0x5f, 0x54, 0x75, 0x6f, 0x47, 0x75, 0x61, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x61,
	0x74, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x53, 0x65, 0x61, 0x74, 0x4e,
	0x6f, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x08,
	0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x42, 0x0a, 0x11, 0x53, 0x43, 0x4d, 0x4a, 0x5f,
	0x49, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x12, 0x2d, 0x0a, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6e, 0x65, 0x74,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x43, 0x4d, 0x4a, 0x5f, 0x53, 0x65, 0x74, 0x74, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x67, 0x0a, 0x0f, 0x53,
	0x43, 0x4d, 0x4a, 0x5f, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16,
	0x0a, 0x06, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06,
	0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x61,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x52, 0x61, 0x74, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x03, 0x52, 0x05, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x22, 0x62, 0x0a, 0x14, 0x53, 0x43, 0x4d, 0x4a, 0x5f, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x52, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x78, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x52,
	0x61, 0x74, 0x65, 0x4d, 0x61, 0x78, 0x12, 0x30, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x53, 0x43, 0x4d, 0x4a, 0x5f, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x7b, 0x0a, 0x10, 0x53, 0x43, 0x4d, 0x4a,
	0x5f, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06,
	0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x53, 0x65,
	0x61, 0x74, 0x4e, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x43,
	0x4d, 0x4a, 0x5f, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x4d, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xa7, 0x01, 0x0a, 0x11, 0x53, 0x43, 0x4d, 0x4a, 0x5f, 0x53,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x4d, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x52, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x52,
	0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x75, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x06, 0x48, 0x75, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d,
	0x79, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x03, 0x52, 0x07, 0x4d, 0x79,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x65, 0x61,
	0x74, 0x4e, 0x6f, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x46, 0x72, 0x6f, 0x6d, 0x53,
	0x65, 0x61, 0x74, 0x4e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x52, 0x61, 0x74, 0x65,
	0x18, 0x06, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x41, 0x64, 0x64, 0x52, 0x61, 0x74, 0x65, 0x22,
	0x91, 0x03, 0x0a, 0x0f, 0x53, 0x43, 0x4d, 0x4a, 0x5f, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x63, 0x65,
	0x6e, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x53, 0x65, 0x61,
	0x74, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0c, 0x42, 0x75, 0x74, 0x74, 0x6f,
	0x6e, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x47, 0x61, 0x6d, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x47, 0x61, 0x6d, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73,
	0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x53, 0x75, 0x72, 0x70, 0x6c,
	0x75, 0x73, 0x4e, 0x75, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0b, 0x53, 0x75, 0x72, 0x70,
	0x6c, 0x75, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x75, 0x72, 0x53, 0x65,
	0x61, 0x74, 0x4e, 0x6f, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x43, 0x75, 0x72, 0x53,
	0x65, 0x61, 0x74, 0x4e, 0x6f, 0x12, 0x30, 0x0a, 0x05, 0x43, 0x61, 0x6e, 0x4f, 0x70, 0x18, 0x06,
	0x20, 0x02, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x43, 0x4d, 0x4a, 0x5f, 0x4f, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x05, 0x43, 0x61, 0x6e, 0x4f, 0x70, 0x12, 0x33, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6e, 0x65, 0x74, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x43, 0x4d, 0x4a, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3f, 0x0a, 0x0c,
	0x49, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x43,
	0x4d, 0x4a, 0x5f, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x4d, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0c, 0x49, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x12, 0x34, 0x0a,
	0x06, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x18, 0x09, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x32, 0x43, 0x5f, 0x53, 0x43, 0x4d,
	0x4a, 0x5f, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x06, 0x52, 0x65, 0x6d,
	0x69, 0x6e, 0x64, 0x22, 0xc5, 0x02, 0x0a, 0x0d, 0x53, 0x43, 0x4d, 0x4a, 0x5f, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x12, 0x1a, 0x0a,
	0x08, 0x48, 0x61, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x08, 0x48, 0x61, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x69, 0x76,
	0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x52, 0x69,
	0x76, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x48, 0x61, 0x6e, 0x64, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x48, 0x61, 0x6e, 0x64,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x44, 0x69, 0x6e, 0x67, 0x51, 0x75, 0x65,
	0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x44, 0x69, 0x6e, 0x67, 0x51, 0x75, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x02,
	0x28, 0x08, 0x52, 0x09, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x54, 0x75, 0x6f, 0x47, 0x75, 0x61, 0x6e, 0x18, 0x07, 0x20, 0x02, 0x28, 0x08, 0x52, 0x07,
	0x54, 0x75, 0x6f, 0x47, 0x75, 0x61, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x75, 0x61, 0x5a, 0x68,
	0x75, 0x18, 0x08, 0x20, 0x02, 0x28, 0x08, 0x52, 0x06, 0x48, 0x75, 0x61, 0x5a, 0x68, 0x75, 0x12,
	0x16, 0x0a, 0x06, 0x44, 0x61, 0x6a, 0x69, 0x61, 0x6f, 0x18, 0x09, 0x20, 0x02, 0x28, 0x08, 0x52,
	0x06, 0x44, 0x61, 0x6a, 0x69, 0x61, 0x6f, 0x12, 0x2e, 0x0a, 0x06, 0x4f, 0x70, 0x43, 0x61, 0x72,
	0x64, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x43, 0x4d, 0x4a, 0x5f, 0x4f, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x06, 0x4f, 0x70, 0x43, 0x61, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x61, 0x74, 0x65, 0x18,
	0x0b, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x52, 0x61, 0x74, 0x65, 0x22, 0x4e, 0x0a, 0x0c, 0x53,
	0x43, 0x4d, 0x4a, 0x5f, 0x4f, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x43,
	0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x04, 0x43, 0x61, 0x72, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x18, 0x03, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x06, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x22, 0x4c, 0x0a, 0x0e, 0x4d,
	0x6a, 0x5f, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a,
	0x09, 0x52, 0x65, 0x61, 0x64, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x09, 0x52, 0x65, 0x61, 0x64, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x42,
	0x61, 0x73, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x09,
	0x42, 0x61, 0x73, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x44, 0x0a, 0x0a, 0x53, 0x43, 0x4d,
	0x4a, 0x5f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42,
	0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f,
}

var (
	file_GameMsg_SCMJ_proto_rawDescOnce sync.Once
	file_GameMsg_SCMJ_proto_rawDescData = file_GameMsg_SCMJ_proto_rawDesc
)

func file_GameMsg_SCMJ_proto_rawDescGZIP() []byte {
	file_GameMsg_SCMJ_proto_rawDescOnce.Do(func() {
		file_GameMsg_SCMJ_proto_rawDescData = protoimpl.X.CompressGZIP(file_GameMsg_SCMJ_proto_rawDescData)
	})
	return file_GameMsg_SCMJ_proto_rawDescData
}

var file_GameMsg_SCMJ_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_GameMsg_SCMJ_proto_goTypes = []interface{}{
	(*SCMJ_BroadcastDice)(nil),         // 0: netproto.SCMJ_BroadcastDice
	(*SCMJ_BroadcastDeal)(nil),         // 1: netproto.SCMJ_BroadcastDeal
	(*SCMJ_Action)(nil),                // 2: netproto.SCMJ_Action
	(*SCMJ_BroadcastAction)(nil),       // 3: netproto.SCMJ_BroadcastAction
	(*SCMJ_BroadcastChooseResult)(nil), // 4: netproto.SCMJ_BroadcastChooseResult
	(*SCMJ_ChooseInfo)(nil),            // 5: netproto.SCMJ_ChooseInfo
	(*SCMJ_Wait)(nil),                  // 6: netproto.SCMJ_Wait
	(*SCMJ_OpEventInfo)(nil),           // 7: netproto.SCMJ_OpEventInfo
	(*SCMJ_BroadCastUserOper)(nil),     // 8: netproto.SCMJ_BroadCastUserOper
	(*S2C_SCMJ_Light)(nil),             // 9: netproto.S2C_SCMJ_Light
	(*SCMJ_HandCards)(nil),             // 10: netproto.SCMJ_HandCards
	(*C2S_SCMJ_Remind)(nil),            // 11: netproto.C2S_SCMJ_Remind
	(*S2C_SCMJ_RemindMsg)(nil),         // 12: netproto.S2C_SCMJ_RemindMsg
	(*SCMJ_RemindData)(nil),            // 13: netproto.SCMJ_RemindData
	(*SCMJ_RemindInfo)(nil),            // 14: netproto.SCMJ_RemindInfo
	(*C2S_SCMJ_TuoGuan)(nil),           // 15: netproto.C2S_SCMJ_TuoGuan
	(*S2C_SCMJ_TuoGuan)(nil),           // 16: netproto.S2C_SCMJ_TuoGuan
	(*SCMJ_InTimeSettle)(nil),          // 17: netproto.SCMJ_InTimeSettle
	(*SCMJ_SettleInfo)(nil),            // 18: netproto.SCMJ_SettleInfo
	(*SCMJ_TotalSettleMent)(nil),       // 19: netproto.SCMJ_TotalSettleMent
	(*SCMJ_SettleTotal)(nil),           // 20: netproto.SCMJ_SettleTotal
	(*SCMJ_SettleMyInfo)(nil),          // 21: netproto.SCMJ_SettleMyInfo
	(*SCMJ_GameScence)(nil),            // 22: netproto.SCMJ_GameScence
	(*SCMJ_UserInfo)(nil),              // 23: netproto.SCMJ_UserInfo
	(*SCMJ_OpGroup)(nil),               // 24: netproto.SCMJ_OpGroup
	(*Mj_GameSetting)(nil),             // 25: netproto.Mj_GameSetting
	(*SCMJ_Error)(nil),                 // 26: netproto.SCMJ_Error
}
var file_GameMsg_SCMJ_proto_depIdxs = []int32{
	5,  // 0: netproto.SCMJ_BroadcastChooseResult.Info:type_name -> netproto.SCMJ_ChooseInfo
	10, // 1: netproto.S2C_SCMJ_Light.Data:type_name -> netproto.SCMJ_HandCards
	13, // 2: netproto.S2C_SCMJ_RemindMsg.Data:type_name -> netproto.SCMJ_RemindData
	14, // 3: netproto.SCMJ_RemindData.Info:type_name -> netproto.SCMJ_RemindInfo
	18, // 4: netproto.SCMJ_InTimeSettle.Info:type_name -> netproto.SCMJ_SettleInfo
	20, // 5: netproto.SCMJ_TotalSettleMent.Total:type_name -> netproto.SCMJ_SettleTotal
	21, // 6: netproto.SCMJ_SettleTotal.Info:type_name -> netproto.SCMJ_SettleMyInfo
	7,  // 7: netproto.SCMJ_GameScence.CanOp:type_name -> netproto.SCMJ_OpEventInfo
	23, // 8: netproto.SCMJ_GameScence.UserInfo:type_name -> netproto.SCMJ_UserInfo
	21, // 9: netproto.SCMJ_GameScence.InTimeSettle:type_name -> netproto.SCMJ_SettleMyInfo
	12, // 10: netproto.SCMJ_GameScence.Remind:type_name -> netproto.S2C_SCMJ_RemindMsg
	24, // 11: netproto.SCMJ_UserInfo.OpCard:type_name -> netproto.SCMJ_OpGroup
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_GameMsg_SCMJ_proto_init() }
func file_GameMsg_SCMJ_proto_init() {
	if File_GameMsg_SCMJ_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_GameMsg_SCMJ_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCMJ_BroadcastDice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SCMJ_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCMJ_BroadcastDeal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SCMJ_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCMJ_Action); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SCMJ_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCMJ_BroadcastAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SCMJ_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCMJ_BroadcastChooseResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SCMJ_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCMJ_ChooseInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SCMJ_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCMJ_Wait); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SCMJ_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCMJ_OpEventInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SCMJ_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCMJ_BroadCastUserOper); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SCMJ_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2C_SCMJ_Light); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SCMJ_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCMJ_HandCards); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SCMJ_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_SCMJ_Remind); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SCMJ_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2C_SCMJ_RemindMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SCMJ_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCMJ_RemindData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SCMJ_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCMJ_RemindInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SCMJ_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_SCMJ_TuoGuan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SCMJ_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2C_SCMJ_TuoGuan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SCMJ_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCMJ_InTimeSettle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SCMJ_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCMJ_SettleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SCMJ_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCMJ_TotalSettleMent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SCMJ_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCMJ_SettleTotal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SCMJ_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCMJ_SettleMyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SCMJ_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCMJ_GameScence); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SCMJ_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCMJ_UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SCMJ_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCMJ_OpGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SCMJ_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mj_GameSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SCMJ_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCMJ_Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_GameMsg_SCMJ_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_GameMsg_SCMJ_proto_goTypes,
		DependencyIndexes: file_GameMsg_SCMJ_proto_depIdxs,
		MessageInfos:      file_GameMsg_SCMJ_proto_msgTypes,
	}.Build()
	File_GameMsg_SCMJ_proto = out.File
	file_GameMsg_SCMJ_proto_rawDesc = nil
	file_GameMsg_SCMJ_proto_goTypes = nil
	file_GameMsg_SCMJ_proto_depIdxs = nil
}
