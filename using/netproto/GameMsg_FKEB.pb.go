// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: GameMsg_FKEB.proto

package netproto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//下注设置
type FKEB_Setting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BetCount    []int32 `protobuf:"varint,1,rep,name=BetCount" json:"BetCount,omitempty"`       //一次下注的数量
	BetMoney    *int32  `protobuf:"varint,2,req,name=BetMoney" json:"BetMoney,omitempty"`       //一次下注的钱
	ZhuangLimit *int64  `protobuf:"varint,3,req,name=ZhuangLimit" json:"ZhuangLimit,omitempty"` //上庄钱限制
}

func (x *FKEB_Setting) Reset() {
	*x = FKEB_Setting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_FKEB_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FKEB_Setting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FKEB_Setting) ProtoMessage() {}

func (x *FKEB_Setting) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_FKEB_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FKEB_Setting.ProtoReflect.Descriptor instead.
func (*FKEB_Setting) Descriptor() ([]byte, []int) {
	return file_GameMsg_FKEB_proto_rawDescGZIP(), []int{0}
}

func (x *FKEB_Setting) GetBetCount() []int32 {
	if x != nil {
		return x.BetCount
	}
	return nil
}

func (x *FKEB_Setting) GetBetMoney() int32 {
	if x != nil && x.BetMoney != nil {
		return *x.BetMoney
	}
	return 0
}

func (x *FKEB_Setting) GetZhuangLimit() int64 {
	if x != nil && x.ZhuangLimit != nil {
		return *x.ZhuangLimit
	}
	return 0
}

//状态消息
type FKEB_Sate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State *int32 `protobuf:"varint,1,req,name=State" json:"State,omitempty"` //状态
	Time  *int32 `protobuf:"varint,2,req,name=Time" json:"Time,omitempty"`   //此状态的剩余时间
}

func (x *FKEB_Sate) Reset() {
	*x = FKEB_Sate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_FKEB_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FKEB_Sate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FKEB_Sate) ProtoMessage() {}

func (x *FKEB_Sate) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_FKEB_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FKEB_Sate.ProtoReflect.Descriptor instead.
func (*FKEB_Sate) Descriptor() ([]byte, []int) {
	return file_GameMsg_FKEB_proto_rawDescGZIP(), []int{1}
}

func (x *FKEB_Sate) GetState() int32 {
	if x != nil && x.State != nil {
		return *x.State
	}
	return 0
}

func (x *FKEB_Sate) GetTime() int32 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

//用户断线重连下注消息
type FKEB_UserBetInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserMoney *int64               `protobuf:"varint,1,req,name=UserMoney" json:"UserMoney,omitempty"`
	BetInfo   []*FKEB_BroadCastBet `protobuf:"bytes,2,rep,name=BetInfo" json:"BetInfo,omitempty"`
}

func (x *FKEB_UserBetInfo) Reset() {
	*x = FKEB_UserBetInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_FKEB_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FKEB_UserBetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FKEB_UserBetInfo) ProtoMessage() {}

func (x *FKEB_UserBetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_FKEB_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FKEB_UserBetInfo.ProtoReflect.Descriptor instead.
func (*FKEB_UserBetInfo) Descriptor() ([]byte, []int) {
	return file_GameMsg_FKEB_proto_rawDescGZIP(), []int{2}
}

func (x *FKEB_UserBetInfo) GetUserMoney() int64 {
	if x != nil && x.UserMoney != nil {
		return *x.UserMoney
	}
	return 0
}

func (x *FKEB_UserBetInfo) GetBetInfo() []*FKEB_BroadCastBet {
	if x != nil {
		return x.BetInfo
	}
	return nil
}

//广播用户下注的数组
type FKEB_BroadCastBetArr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID          *int32               `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`
	BroadCastBetArr []*FKEB_BroadCastBet `protobuf:"bytes,2,rep,name=BroadCastBetArr" json:"BroadCastBetArr,omitempty"`
}

func (x *FKEB_BroadCastBetArr) Reset() {
	*x = FKEB_BroadCastBetArr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_FKEB_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FKEB_BroadCastBetArr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FKEB_BroadCastBetArr) ProtoMessage() {}

func (x *FKEB_BroadCastBetArr) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_FKEB_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FKEB_BroadCastBetArr.ProtoReflect.Descriptor instead.
func (*FKEB_BroadCastBetArr) Descriptor() ([]byte, []int) {
	return file_GameMsg_FKEB_proto_rawDescGZIP(), []int{3}
}

func (x *FKEB_BroadCastBetArr) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *FKEB_BroadCastBetArr) GetBroadCastBetArr() []*FKEB_BroadCastBet {
	if x != nil {
		return x.BroadCastBetArr
	}
	return nil
}

//广播用户下注内容数据结构
type FKEB_BroadCastBet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  *int32 `protobuf:"varint,1,req,name=Type" json:"Type,omitempty"`
	Money *int64 `protobuf:"varint,2,req,name=Money" json:"Money,omitempty"`
}

func (x *FKEB_BroadCastBet) Reset() {
	*x = FKEB_BroadCastBet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_FKEB_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FKEB_BroadCastBet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FKEB_BroadCastBet) ProtoMessage() {}

func (x *FKEB_BroadCastBet) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_FKEB_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FKEB_BroadCastBet.ProtoReflect.Descriptor instead.
func (*FKEB_BroadCastBet) Descriptor() ([]byte, []int) {
	return file_GameMsg_FKEB_proto_rawDescGZIP(), []int{4}
}

func (x *FKEB_BroadCastBet) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *FKEB_BroadCastBet) GetMoney() int64 {
	if x != nil && x.Money != nil {
		return *x.Money
	}
	return 0
}

//用户下注数组
type FKEB_BetArr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BetArr []*FKEB_Bet `protobuf:"bytes,1,rep,name=BetArr" json:"BetArr,omitempty"`
}

func (x *FKEB_BetArr) Reset() {
	*x = FKEB_BetArr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_FKEB_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FKEB_BetArr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FKEB_BetArr) ProtoMessage() {}

func (x *FKEB_BetArr) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_FKEB_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FKEB_BetArr.ProtoReflect.Descriptor instead.
func (*FKEB_BetArr) Descriptor() ([]byte, []int) {
	return file_GameMsg_FKEB_proto_rawDescGZIP(), []int{5}
}

func (x *FKEB_BetArr) GetBetArr() []*FKEB_Bet {
	if x != nil {
		return x.BetArr
	}
	return nil
}

//用户下注数据结构
type FKEB_Bet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BetType *int32 `protobuf:"varint,1,req,name=BetType" json:"BetType,omitempty"`
	Count   *int32 `protobuf:"varint,2,req,name=Count" json:"Count,omitempty"`
}

func (x *FKEB_Bet) Reset() {
	*x = FKEB_Bet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_FKEB_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FKEB_Bet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FKEB_Bet) ProtoMessage() {}

func (x *FKEB_Bet) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_FKEB_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FKEB_Bet.ProtoReflect.Descriptor instead.
func (*FKEB_Bet) Descriptor() ([]byte, []int) {
	return file_GameMsg_FKEB_proto_rawDescGZIP(), []int{6}
}

func (x *FKEB_Bet) GetBetType() int32 {
	if x != nil && x.BetType != nil {
		return *x.BetType
	}
	return 0
}

func (x *FKEB_Bet) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

//疯狂二八下注的结果
type FKEB_BetRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret    *int32      `protobuf:"varint,1,req,name=Ret" json:"Ret,omitempty"`      //0下注成功，-1用户金额不足，-2下注的类型未找到，-3庄家不能下注，-4此类下注已达到上限
	Money  *int64      `protobuf:"varint,2,req,name=Money" json:"Money,omitempty"`  //用户的钱，下注以后的金额。
	Type   *int32      `protobuf:"varint,3,opt,name=Type" json:"Type,omitempty"`    //下注超过限制的下注类型
	BetArr []*FKEB_Bet `protobuf:"bytes,4,rep,name=BetArr" json:"BetArr,omitempty"` //用户下注数据
}

func (x *FKEB_BetRet) Reset() {
	*x = FKEB_BetRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_FKEB_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FKEB_BetRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FKEB_BetRet) ProtoMessage() {}

func (x *FKEB_BetRet) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_FKEB_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FKEB_BetRet.ProtoReflect.Descriptor instead.
func (*FKEB_BetRet) Descriptor() ([]byte, []int) {
	return file_GameMsg_FKEB_proto_rawDescGZIP(), []int{7}
}

func (x *FKEB_BetRet) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *FKEB_BetRet) GetMoney() int64 {
	if x != nil && x.Money != nil {
		return *x.Money
	}
	return 0
}

func (x *FKEB_BetRet) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *FKEB_BetRet) GetBetArr() []*FKEB_Bet {
	if x != nil {
		return x.BetArr
	}
	return nil
}

//游戏麻将结果
type FKEB_GameResultMajiang struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetType []int32         `protobuf:"varint,1,rep,name=RetType" json:"RetType,omitempty"` //开奖结果
	SeZi    []int32         `protobuf:"varint,2,rep,name=SeZi" json:"SeZi,omitempty"`       //色子点数
	Majiang []*FKEB_Majiang `protobuf:"bytes,3,rep,name=Majiang" json:"Majiang,omitempty"`  //按照庄，顺，天，地顺序排列
}

func (x *FKEB_GameResultMajiang) Reset() {
	*x = FKEB_GameResultMajiang{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_FKEB_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FKEB_GameResultMajiang) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FKEB_GameResultMajiang) ProtoMessage() {}

func (x *FKEB_GameResultMajiang) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_FKEB_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FKEB_GameResultMajiang.ProtoReflect.Descriptor instead.
func (*FKEB_GameResultMajiang) Descriptor() ([]byte, []int) {
	return file_GameMsg_FKEB_proto_rawDescGZIP(), []int{8}
}

func (x *FKEB_GameResultMajiang) GetRetType() []int32 {
	if x != nil {
		return x.RetType
	}
	return nil
}

func (x *FKEB_GameResultMajiang) GetSeZi() []int32 {
	if x != nil {
		return x.SeZi
	}
	return nil
}

func (x *FKEB_GameResultMajiang) GetMajiang() []*FKEB_Majiang {
	if x != nil {
		return x.Majiang
	}
	return nil
}

//游戏用户赢钱结果
type FKEB_GameResultUserMoney struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZhuangWin   *int64             `protobuf:"varint,1,req,name=ZhuangWin" json:"ZhuangWin,omitempty"`
	SelfWin     *int64             `protobuf:"varint,2,req,name=SelfWin" json:"SelfWin,omitempty"`
	WinUserInfo []*FKEB_WinUerInfo `protobuf:"bytes,3,rep,name=WinUserInfo" json:"WinUserInfo,omitempty"` //赢钱前三名的人信息
}

func (x *FKEB_GameResultUserMoney) Reset() {
	*x = FKEB_GameResultUserMoney{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_FKEB_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FKEB_GameResultUserMoney) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FKEB_GameResultUserMoney) ProtoMessage() {}

func (x *FKEB_GameResultUserMoney) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_FKEB_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FKEB_GameResultUserMoney.ProtoReflect.Descriptor instead.
func (*FKEB_GameResultUserMoney) Descriptor() ([]byte, []int) {
	return file_GameMsg_FKEB_proto_rawDescGZIP(), []int{9}
}

func (x *FKEB_GameResultUserMoney) GetZhuangWin() int64 {
	if x != nil && x.ZhuangWin != nil {
		return *x.ZhuangWin
	}
	return 0
}

func (x *FKEB_GameResultUserMoney) GetSelfWin() int64 {
	if x != nil && x.SelfWin != nil {
		return *x.SelfWin
	}
	return 0
}

func (x *FKEB_GameResultUserMoney) GetWinUserInfo() []*FKEB_WinUerInfo {
	if x != nil {
		return x.WinUserInfo
	}
	return nil
}

//赢钱玩家信息
type FKEB_WinUerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName *string `protobuf:"bytes,1,req,name=UserName" json:"UserName,omitempty"`
	Win      *int64  `protobuf:"varint,2,req,name=Win" json:"Win,omitempty"`
}

func (x *FKEB_WinUerInfo) Reset() {
	*x = FKEB_WinUerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_FKEB_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FKEB_WinUerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FKEB_WinUerInfo) ProtoMessage() {}

func (x *FKEB_WinUerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_FKEB_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FKEB_WinUerInfo.ProtoReflect.Descriptor instead.
func (*FKEB_WinUerInfo) Descriptor() ([]byte, []int) {
	return file_GameMsg_FKEB_proto_rawDescGZIP(), []int{10}
}

func (x *FKEB_WinUerInfo) GetUserName() string {
	if x != nil && x.UserName != nil {
		return *x.UserName
	}
	return ""
}

func (x *FKEB_WinUerInfo) GetWin() int64 {
	if x != nil && x.Win != nil {
		return *x.Win
	}
	return 0
}

//疯狂二八牌的点数
type FKEB_Majiang struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Majiang1 *int32 `protobuf:"varint,1,req,name=Majiang1" json:"Majiang1,omitempty"` //麻将1
	Majiang2 *int32 `protobuf:"varint,2,req,name=Majiang2" json:"Majiang2,omitempty"` //麻将2
}

func (x *FKEB_Majiang) Reset() {
	*x = FKEB_Majiang{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_FKEB_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FKEB_Majiang) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FKEB_Majiang) ProtoMessage() {}

func (x *FKEB_Majiang) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_FKEB_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FKEB_Majiang.ProtoReflect.Descriptor instead.
func (*FKEB_Majiang) Descriptor() ([]byte, []int) {
	return file_GameMsg_FKEB_proto_rawDescGZIP(), []int{11}
}

func (x *FKEB_Majiang) GetMajiang1() int32 {
	if x != nil && x.Majiang1 != nil {
		return *x.Majiang1
	}
	return 0
}

func (x *FKEB_Majiang) GetMajiang2() int32 {
	if x != nil && x.Majiang2 != nil {
		return *x.Majiang2
	}
	return 0
}

//一局的麻将牌
type FKEB_Majiangs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetType  []int32         `protobuf:"varint,1,rep,name=RetType" json:"RetType,omitempty"`  //开奖结果
	Majiangs []*FKEB_Majiang `protobuf:"bytes,2,rep,name=Majiangs" json:"Majiangs,omitempty"` //按照庄，顺，天，地顺序排列
}

func (x *FKEB_Majiangs) Reset() {
	*x = FKEB_Majiangs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_FKEB_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FKEB_Majiangs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FKEB_Majiangs) ProtoMessage() {}

func (x *FKEB_Majiangs) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_FKEB_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FKEB_Majiangs.ProtoReflect.Descriptor instead.
func (*FKEB_Majiangs) Descriptor() ([]byte, []int) {
	return file_GameMsg_FKEB_proto_rawDescGZIP(), []int{12}
}

func (x *FKEB_Majiangs) GetRetType() []int32 {
	if x != nil {
		return x.RetType
	}
	return nil
}

func (x *FKEB_Majiangs) GetMajiangs() []*FKEB_Majiang {
	if x != nil {
		return x.Majiangs
	}
	return nil
}

//前20次开出的牌
type FKEB_ResultCardList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaJiangList []*FKEB_Majiangs `protobuf:"bytes,1,rep,name=MaJiangList" json:"MaJiangList,omitempty"`
}

func (x *FKEB_ResultCardList) Reset() {
	*x = FKEB_ResultCardList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_FKEB_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FKEB_ResultCardList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FKEB_ResultCardList) ProtoMessage() {}

func (x *FKEB_ResultCardList) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_FKEB_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FKEB_ResultCardList.ProtoReflect.Descriptor instead.
func (*FKEB_ResultCardList) Descriptor() ([]byte, []int) {
	return file_GameMsg_FKEB_proto_rawDescGZIP(), []int{13}
}

func (x *FKEB_ResultCardList) GetMaJiangList() []*FKEB_Majiangs {
	if x != nil {
		return x.MaJiangList
	}
	return nil
}

//上庄结果
type FKEB_ShangzhuangRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"` //值为1时下庄成功，值为0表示上庄成功，值为-1时上庄失败资金不足，值为-2时已经在上庄列表中。
}

func (x *FKEB_ShangzhuangRet) Reset() {
	*x = FKEB_ShangzhuangRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_FKEB_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FKEB_ShangzhuangRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FKEB_ShangzhuangRet) ProtoMessage() {}

func (x *FKEB_ShangzhuangRet) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_FKEB_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FKEB_ShangzhuangRet.ProtoReflect.Descriptor instead.
func (*FKEB_ShangzhuangRet) Descriptor() ([]byte, []int) {
	return file_GameMsg_FKEB_proto_rawDescGZIP(), []int{14}
}

func (x *FKEB_ShangzhuangRet) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

//是否上庄
type FKEB_ShangZhuang struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsShangZhuang *bool `protobuf:"varint,1,req,name=IsShangZhuang" json:"IsShangZhuang,omitempty"`
}

func (x *FKEB_ShangZhuang) Reset() {
	*x = FKEB_ShangZhuang{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_FKEB_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FKEB_ShangZhuang) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FKEB_ShangZhuang) ProtoMessage() {}

func (x *FKEB_ShangZhuang) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_FKEB_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FKEB_ShangZhuang.ProtoReflect.Descriptor instead.
func (*FKEB_ShangZhuang) Descriptor() ([]byte, []int) {
	return file_GameMsg_FKEB_proto_rawDescGZIP(), []int{15}
}

func (x *FKEB_ShangZhuang) GetIsShangZhuang() bool {
	if x != nil && x.IsShangZhuang != nil {
		return *x.IsShangZhuang
	}
	return false
}

//庄家信息
type FKEB_ZhuangInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   *int32      `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`
	LastTurn *int32      `protobuf:"varint,2,req,name=LastTurn" json:"LastTurn,omitempty"`
	UserInfo []*GameUser `protobuf:"bytes,3,rep,name=UserInfo" json:"UserInfo,omitempty"`
}

func (x *FKEB_ZhuangInfo) Reset() {
	*x = FKEB_ZhuangInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_FKEB_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FKEB_ZhuangInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FKEB_ZhuangInfo) ProtoMessage() {}

func (x *FKEB_ZhuangInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_FKEB_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FKEB_ZhuangInfo.ProtoReflect.Descriptor instead.
func (*FKEB_ZhuangInfo) Descriptor() ([]byte, []int) {
	return file_GameMsg_FKEB_proto_rawDescGZIP(), []int{16}
}

func (x *FKEB_ZhuangInfo) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *FKEB_ZhuangInfo) GetLastTurn() int32 {
	if x != nil && x.LastTurn != nil {
		return *x.LastTurn
	}
	return 0
}

func (x *FKEB_ZhuangInfo) GetUserInfo() []*GameUser {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

//上庄列表
type FKEB_ZhuangList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserInfo []*GameUser `protobuf:"bytes,1,rep,name=UserInfo" json:"UserInfo,omitempty"`
}

func (x *FKEB_ZhuangList) Reset() {
	*x = FKEB_ZhuangList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_FKEB_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FKEB_ZhuangList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FKEB_ZhuangList) ProtoMessage() {}

func (x *FKEB_ZhuangList) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_FKEB_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FKEB_ZhuangList.ProtoReflect.Descriptor instead.
func (*FKEB_ZhuangList) Descriptor() ([]byte, []int) {
	return file_GameMsg_FKEB_proto_rawDescGZIP(), []int{17}
}

func (x *FKEB_ZhuangList) GetUserInfo() []*GameUser {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

//清除结果回应消息
type FKEB_BetClearRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Money *int64 `protobuf:"varint,1,req,name=Money" json:"Money,omitempty"` //当前的钱
	Ret   *int32 `protobuf:"varint,2,req,name=Ret" json:"Ret,omitempty"`     //清除结果-1，清理失败，达到清理上限，0清理成功
}

func (x *FKEB_BetClearRet) Reset() {
	*x = FKEB_BetClearRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_FKEB_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FKEB_BetClearRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FKEB_BetClearRet) ProtoMessage() {}

func (x *FKEB_BetClearRet) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_FKEB_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FKEB_BetClearRet.ProtoReflect.Descriptor instead.
func (*FKEB_BetClearRet) Descriptor() ([]byte, []int) {
	return file_GameMsg_FKEB_proto_rawDescGZIP(), []int{18}
}

func (x *FKEB_BetClearRet) GetMoney() int64 {
	if x != nil && x.Money != nil {
		return *x.Money
	}
	return 0
}

func (x *FKEB_BetClearRet) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

//游戏用户赢钱结果
type FKEB_GameZhuangWinRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZhuangWin *int64 `protobuf:"varint,1,req,name=ZhuangWin" json:"ZhuangWin,omitempty"`
}

func (x *FKEB_GameZhuangWinRet) Reset() {
	*x = FKEB_GameZhuangWinRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_FKEB_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FKEB_GameZhuangWinRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FKEB_GameZhuangWinRet) ProtoMessage() {}

func (x *FKEB_GameZhuangWinRet) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_FKEB_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FKEB_GameZhuangWinRet.ProtoReflect.Descriptor instead.
func (*FKEB_GameZhuangWinRet) Descriptor() ([]byte, []int) {
	return file_GameMsg_FKEB_proto_rawDescGZIP(), []int{19}
}

func (x *FKEB_GameZhuangWinRet) GetZhuangWin() int64 {
	if x != nil && x.ZhuangWin != nil {
		return *x.ZhuangWin
	}
	return 0
}

var File_GameMsg_FKEB_proto protoreflect.FileDescriptor

var file_GameMsg_FKEB_proto_rawDesc = []byte{
	0x0a, 0x12, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x5f, 0x46, 0x4b, 0x45, 0x42, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d,
	0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x68, 0x0a,
	0x0c, 0x46, 0x4b, 0x45, 0x42, 0x5f, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a,
	0x08, 0x42, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x08, 0x42, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x65, 0x74,
	0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x42, 0x65, 0x74,
	0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x5a, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0b, 0x5a, 0x68, 0x75, 0x61,
	0x6e, 0x67, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x35, 0x0a, 0x09, 0x46, 0x4b, 0x45, 0x42, 0x5f,
	0x53, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x67,
	0x0a, 0x10, 0x46, 0x4b, 0x45, 0x42, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x09, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x6e, 0x65, 0x79,
	0x12, 0x35, 0x0a, 0x07, 0x42, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x4b, 0x45,
	0x42, 0x5f, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x42, 0x65, 0x74, 0x52, 0x07,
	0x42, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x75, 0x0a, 0x14, 0x46, 0x4b, 0x45, 0x42, 0x5f,
	0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x42, 0x65, 0x74, 0x41, 0x72, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x45, 0x0a, 0x0f, 0x42, 0x72, 0x6f, 0x61, 0x64,
	0x43, 0x61, 0x73, 0x74, 0x42, 0x65, 0x74, 0x41, 0x72, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x4b, 0x45, 0x42,
	0x5f, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x42, 0x65, 0x74, 0x52, 0x0f, 0x42,
	0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x42, 0x65, 0x74, 0x41, 0x72, 0x72, 0x22, 0x3d,
	0x0a, 0x11, 0x46, 0x4b, 0x45, 0x42, 0x5f, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74,
	0x42, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x6f, 0x6e, 0x65, 0x79,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x05, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x22, 0x39, 0x0a,
	0x0b, 0x46, 0x4b, 0x45, 0x42, 0x5f, 0x42, 0x65, 0x74, 0x41, 0x72, 0x72, 0x12, 0x2a, 0x0a, 0x06,
	0x42, 0x65, 0x74, 0x41, 0x72, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6e,
	0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x4b, 0x45, 0x42, 0x5f, 0x42, 0x65, 0x74,
	0x52, 0x06, 0x42, 0x65, 0x74, 0x41, 0x72, 0x72, 0x22, 0x3a, 0x0a, 0x08, 0x46, 0x4b, 0x45, 0x42,
	0x5f, 0x42, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x42, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x75, 0x0a, 0x0b, 0x46, 0x4b, 0x45, 0x42, 0x5f, 0x42, 0x65, 0x74,
	0x52, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x03, 0x52, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x03, 0x52, 0x05, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x2a, 0x0a, 0x06, 0x42, 0x65, 0x74, 0x41, 0x72, 0x72, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x4b, 0x45, 0x42, 0x5f,
	0x42, 0x65, 0x74, 0x52, 0x06, 0x42, 0x65, 0x74, 0x41, 0x72, 0x72, 0x22, 0x78, 0x0a, 0x16, 0x46,
	0x4b, 0x45, 0x42, 0x5f, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x61,
	0x6a, 0x69, 0x61, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x52, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x53, 0x65, 0x5a, 0x69, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x04, 0x53,
	0x65, 0x5a, 0x69, 0x12, 0x30, 0x0a, 0x07, 0x4d, 0x61, 0x6a, 0x69, 0x61, 0x6e, 0x67, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x46, 0x4b, 0x45, 0x42, 0x5f, 0x4d, 0x61, 0x6a, 0x69, 0x61, 0x6e, 0x67, 0x52, 0x07, 0x4d, 0x61,
	0x6a, 0x69, 0x61, 0x6e, 0x67, 0x22, 0x8f, 0x01, 0x0a, 0x18, 0x46, 0x4b, 0x45, 0x42, 0x5f, 0x47,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x6e,
	0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x5a, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x57, 0x69, 0x6e, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x09, 0x5a, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x57, 0x69, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x53, 0x65, 0x6c, 0x66, 0x57, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x03, 0x52, 0x07, 0x53, 0x65, 0x6c, 0x66, 0x57, 0x69, 0x6e, 0x12, 0x3b, 0x0a, 0x0b, 0x57, 0x69,
	0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x4b, 0x45, 0x42, 0x5f,
	0x57, 0x69, 0x6e, 0x55, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x57, 0x69, 0x6e, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x3f, 0x0a, 0x0f, 0x46, 0x4b, 0x45, 0x42, 0x5f,
	0x57, 0x69, 0x6e, 0x55, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x57, 0x69, 0x6e, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x03, 0x52, 0x03, 0x57, 0x69, 0x6e, 0x22, 0x46, 0x0a, 0x0c, 0x46, 0x4b, 0x45, 0x42,
	0x5f, 0x4d, 0x61, 0x6a, 0x69, 0x61, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x61, 0x6a, 0x69,
	0x61, 0x6e, 0x67, 0x31, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x4d, 0x61, 0x6a, 0x69,
	0x61, 0x6e, 0x67, 0x31, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x61, 0x6a, 0x69, 0x61, 0x6e, 0x67, 0x32,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x4d, 0x61, 0x6a, 0x69, 0x61, 0x6e, 0x67, 0x32,
	0x22, 0x5d, 0x0a, 0x0d, 0x46, 0x4b, 0x45, 0x42, 0x5f, 0x4d, 0x61, 0x6a, 0x69, 0x61, 0x6e, 0x67,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x07, 0x52, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x4d,
	0x61, 0x6a, 0x69, 0x61, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x4b, 0x45, 0x42, 0x5f, 0x4d, 0x61,
	0x6a, 0x69, 0x61, 0x6e, 0x67, 0x52, 0x08, 0x4d, 0x61, 0x6a, 0x69, 0x61, 0x6e, 0x67, 0x73, 0x22,
	0x50, 0x0a, 0x13, 0x46, 0x4b, 0x45, 0x42, 0x5f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x61,
	0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x0b, 0x4d, 0x61, 0x4a, 0x69, 0x61, 0x6e,
	0x67, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6e, 0x65,
	0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x4b, 0x45, 0x42, 0x5f, 0x4d, 0x61, 0x6a, 0x69,
	0x61, 0x6e, 0x67, 0x73, 0x52, 0x0b, 0x4d, 0x61, 0x4a, 0x69, 0x61, 0x6e, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x27, 0x0a, 0x13, 0x46, 0x4b, 0x45, 0x42, 0x5f, 0x53, 0x68, 0x61, 0x6e, 0x67, 0x7a,
	0x68, 0x75, 0x61, 0x6e, 0x67, 0x52, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x22, 0x38, 0x0a, 0x10, 0x46, 0x4b,
	0x45, 0x42, 0x5f, 0x53, 0x68, 0x61, 0x6e, 0x67, 0x5a, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x12, 0x24,
	0x0a, 0x0d, 0x49, 0x73, 0x53, 0x68, 0x61, 0x6e, 0x67, 0x5a, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x08, 0x52, 0x0d, 0x49, 0x73, 0x53, 0x68, 0x61, 0x6e, 0x67, 0x5a, 0x68,
	0x75, 0x61, 0x6e, 0x67, 0x22, 0x75, 0x0a, 0x0f, 0x46, 0x4b, 0x45, 0x42, 0x5f, 0x5a, 0x68, 0x75,
	0x61, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x54, 0x75, 0x72, 0x6e, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x54, 0x75, 0x72, 0x6e, 0x12, 0x2e, 0x0a, 0x08, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x41, 0x0a, 0x0f, 0x46,
	0x4b, 0x45, 0x42, 0x5f, 0x5a, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2e,
	0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x3a,
	0x0a, 0x10, 0x46, 0x4b, 0x45, 0x42, 0x5f, 0x42, 0x65, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x52,
	0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x03, 0x52, 0x05, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x52, 0x65, 0x74, 0x22, 0x35, 0x0a, 0x15, 0x46, 0x4b,
	0x45, 0x42, 0x5f, 0x47, 0x61, 0x6d, 0x65, 0x5a, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x57, 0x69, 0x6e,
	0x52, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x5a, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x57, 0x69, 0x6e,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x09, 0x5a, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x57, 0x69,
	0x6e, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f,
}

var (
	file_GameMsg_FKEB_proto_rawDescOnce sync.Once
	file_GameMsg_FKEB_proto_rawDescData = file_GameMsg_FKEB_proto_rawDesc
)

func file_GameMsg_FKEB_proto_rawDescGZIP() []byte {
	file_GameMsg_FKEB_proto_rawDescOnce.Do(func() {
		file_GameMsg_FKEB_proto_rawDescData = protoimpl.X.CompressGZIP(file_GameMsg_FKEB_proto_rawDescData)
	})
	return file_GameMsg_FKEB_proto_rawDescData
}

var file_GameMsg_FKEB_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_GameMsg_FKEB_proto_goTypes = []interface{}{
	(*FKEB_Setting)(nil),             // 0: netproto.FKEB_Setting
	(*FKEB_Sate)(nil),                // 1: netproto.FKEB_Sate
	(*FKEB_UserBetInfo)(nil),         // 2: netproto.FKEB_UserBetInfo
	(*FKEB_BroadCastBetArr)(nil),     // 3: netproto.FKEB_BroadCastBetArr
	(*FKEB_BroadCastBet)(nil),        // 4: netproto.FKEB_BroadCastBet
	(*FKEB_BetArr)(nil),              // 5: netproto.FKEB_BetArr
	(*FKEB_Bet)(nil),                 // 6: netproto.FKEB_Bet
	(*FKEB_BetRet)(nil),              // 7: netproto.FKEB_BetRet
	(*FKEB_GameResultMajiang)(nil),   // 8: netproto.FKEB_GameResultMajiang
	(*FKEB_GameResultUserMoney)(nil), // 9: netproto.FKEB_GameResultUserMoney
	(*FKEB_WinUerInfo)(nil),          // 10: netproto.FKEB_WinUerInfo
	(*FKEB_Majiang)(nil),             // 11: netproto.FKEB_Majiang
	(*FKEB_Majiangs)(nil),            // 12: netproto.FKEB_Majiangs
	(*FKEB_ResultCardList)(nil),      // 13: netproto.FKEB_ResultCardList
	(*FKEB_ShangzhuangRet)(nil),      // 14: netproto.FKEB_ShangzhuangRet
	(*FKEB_ShangZhuang)(nil),         // 15: netproto.FKEB_ShangZhuang
	(*FKEB_ZhuangInfo)(nil),          // 16: netproto.FKEB_ZhuangInfo
	(*FKEB_ZhuangList)(nil),          // 17: netproto.FKEB_ZhuangList
	(*FKEB_BetClearRet)(nil),         // 18: netproto.FKEB_BetClearRet
	(*FKEB_GameZhuangWinRet)(nil),    // 19: netproto.FKEB_GameZhuangWinRet
	(*GameUser)(nil),                 // 20: netproto.GameUser
}
var file_GameMsg_FKEB_proto_depIdxs = []int32{
	4,  // 0: netproto.FKEB_UserBetInfo.BetInfo:type_name -> netproto.FKEB_BroadCastBet
	4,  // 1: netproto.FKEB_BroadCastBetArr.BroadCastBetArr:type_name -> netproto.FKEB_BroadCastBet
	6,  // 2: netproto.FKEB_BetArr.BetArr:type_name -> netproto.FKEB_Bet
	6,  // 3: netproto.FKEB_BetRet.BetArr:type_name -> netproto.FKEB_Bet
	11, // 4: netproto.FKEB_GameResultMajiang.Majiang:type_name -> netproto.FKEB_Majiang
	10, // 5: netproto.FKEB_GameResultUserMoney.WinUserInfo:type_name -> netproto.FKEB_WinUerInfo
	11, // 6: netproto.FKEB_Majiangs.Majiangs:type_name -> netproto.FKEB_Majiang
	12, // 7: netproto.FKEB_ResultCardList.MaJiangList:type_name -> netproto.FKEB_Majiangs
	20, // 8: netproto.FKEB_ZhuangInfo.UserInfo:type_name -> netproto.GameUser
	20, // 9: netproto.FKEB_ZhuangList.UserInfo:type_name -> netproto.GameUser
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_GameMsg_FKEB_proto_init() }
func file_GameMsg_FKEB_proto_init() {
	if File_GameMsg_FKEB_proto != nil {
		return
	}
	file_GameMsg_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_GameMsg_FKEB_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FKEB_Setting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_FKEB_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FKEB_Sate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_FKEB_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FKEB_UserBetInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_FKEB_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FKEB_BroadCastBetArr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_FKEB_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FKEB_BroadCastBet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_FKEB_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FKEB_BetArr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_FKEB_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FKEB_Bet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_FKEB_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FKEB_BetRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_FKEB_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FKEB_GameResultMajiang); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_FKEB_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FKEB_GameResultUserMoney); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_FKEB_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FKEB_WinUerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_FKEB_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FKEB_Majiang); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_FKEB_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FKEB_Majiangs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_FKEB_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FKEB_ResultCardList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_FKEB_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FKEB_ShangzhuangRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_FKEB_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FKEB_ShangZhuang); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_FKEB_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FKEB_ZhuangInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_FKEB_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FKEB_ZhuangList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_FKEB_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FKEB_BetClearRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_FKEB_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FKEB_GameZhuangWinRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_GameMsg_FKEB_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_GameMsg_FKEB_proto_goTypes,
		DependencyIndexes: file_GameMsg_FKEB_proto_depIdxs,
		MessageInfos:      file_GameMsg_FKEB_proto_msgTypes,
	}.Build()
	File_GameMsg_FKEB_proto = out.File
	file_GameMsg_FKEB_proto_rawDesc = nil
	file_GameMsg_FKEB_proto_goTypes = nil
	file_GameMsg_FKEB_proto_depIdxs = nil
}
