// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: HallMsg.proto

package netproto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// 游客登录
type GuestLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HDCode     *string `protobuf:"bytes,1,req,name=HDCode" json:"HDCode,omitempty"`                // 设备码
	HDType     *int32  `protobuf:"varint,2,req,name=HDType" json:"HDType,omitempty"`               // 设备类型 1.PC 2.Android 3.IOS
	SiteID     *int32  `protobuf:"varint,3,req,name=SiteID" json:"SiteID,omitempty"`               // 渠道ID
	Version    *string `protobuf:"bytes,4,req,name=Version" json:"Version,omitempty"`              // 客户端版本号
	PlatformID *int32  `protobuf:"varint,5,req,name=PlatformID" json:"PlatformID,omitempty"`       // 平台号
	ServerID   *int32  `protobuf:"varint,6,opt,name=ServerID" json:"ServerID,omitempty"`           // 服务器ID
	InviteCode *string `protobuf:"bytes,7,opt,name=InviteCode" json:"InviteCode,omitempty"`        // 邀請碼
	GuestKey   *string `protobuf:"bytes,8,opt,name=GuestKey" json:"GuestKey,omitempty"`            // check key
	Area_ID    *int32  `protobuf:"varint,9,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *GuestLogin) Reset() {
	*x = GuestLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuestLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuestLogin) ProtoMessage() {}

func (x *GuestLogin) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuestLogin.ProtoReflect.Descriptor instead.
func (*GuestLogin) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{0}
}

func (x *GuestLogin) GetHDCode() string {
	if x != nil && x.HDCode != nil {
		return *x.HDCode
	}
	return ""
}

func (x *GuestLogin) GetHDType() int32 {
	if x != nil && x.HDType != nil {
		return *x.HDType
	}
	return 0
}

func (x *GuestLogin) GetSiteID() int32 {
	if x != nil && x.SiteID != nil {
		return *x.SiteID
	}
	return 0
}

func (x *GuestLogin) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

func (x *GuestLogin) GetPlatformID() int32 {
	if x != nil && x.PlatformID != nil {
		return *x.PlatformID
	}
	return 0
}

func (x *GuestLogin) GetServerID() int32 {
	if x != nil && x.ServerID != nil {
		return *x.ServerID
	}
	return 0
}

func (x *GuestLogin) GetInviteCode() string {
	if x != nil && x.InviteCode != nil {
		return *x.InviteCode
	}
	return ""
}

func (x *GuestLogin) GetGuestKey() string {
	if x != nil && x.GuestKey != nil {
		return *x.GuestKey
	}
	return ""
}

func (x *GuestLogin) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 用户登录
type UserLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HDCode     *string `protobuf:"bytes,1,req,name=HDCode" json:"HDCode,omitempty"`                 // 设备码
	HDType     *int32  `protobuf:"varint,2,req,name=HDType" json:"HDType,omitempty"`                // 设备类型
	SiteID     *int32  `protobuf:"varint,3,req,name=SiteID" json:"SiteID,omitempty"`                // 渠道ID
	Version    *string `protobuf:"bytes,4,req,name=Version" json:"Version,omitempty"`               // 客户端版本号
	PlatformID *int32  `protobuf:"varint,5,req,name=PlatformID" json:"PlatformID,omitempty"`        // 平台号
	LoginName  *string `protobuf:"bytes,6,opt,name=LoginName" json:"LoginName,omitempty"`           // 用户名
	Password   *string `protobuf:"bytes,7,opt,name=Password" json:"Password,omitempty"`             // 密码
	UserID     *int32  `protobuf:"varint,8,opt,name=UserID" json:"UserID,omitempty"`                // 用户ID
	Cer        *string `protobuf:"bytes,9,opt,name=Cer" json:"Cer,omitempty"`                       // 证书
	Area_ID    *int32  `protobuf:"varint,10,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *UserLogin) Reset() {
	*x = UserLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLogin) ProtoMessage() {}

func (x *UserLogin) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLogin.ProtoReflect.Descriptor instead.
func (*UserLogin) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{1}
}

func (x *UserLogin) GetHDCode() string {
	if x != nil && x.HDCode != nil {
		return *x.HDCode
	}
	return ""
}

func (x *UserLogin) GetHDType() int32 {
	if x != nil && x.HDType != nil {
		return *x.HDType
	}
	return 0
}

func (x *UserLogin) GetSiteID() int32 {
	if x != nil && x.SiteID != nil {
		return *x.SiteID
	}
	return 0
}

func (x *UserLogin) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

func (x *UserLogin) GetPlatformID() int32 {
	if x != nil && x.PlatformID != nil {
		return *x.PlatformID
	}
	return 0
}

func (x *UserLogin) GetLoginName() string {
	if x != nil && x.LoginName != nil {
		return *x.LoginName
	}
	return ""
}

func (x *UserLogin) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

func (x *UserLogin) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *UserLogin) GetCer() string {
	if x != nil && x.Cer != nil {
		return *x.Cer
	}
	return ""
}

func (x *UserLogin) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 用户登录结果
type UserLoginRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     *int32             `protobuf:"varint,1,req,name=Code" json:"Code,omitempty"`                   // 登录结果代码
	Message  *string            `protobuf:"bytes,2,req,name=Message" json:"Message,omitempty"`              // 提示消息
	UserID   *int32             `protobuf:"varint,3,opt,name=UserID" json:"UserID,omitempty"`               // 用户ID
	Cer      *string            `protobuf:"bytes,4,opt,name=Cer" json:"Cer,omitempty"`                      // 用户证书
	HDCode   *string            `protobuf:"bytes,5,opt,name=HDCode" json:"HDCode,omitempty"`                // 设备码
	HDType   *int32             `protobuf:"varint,6,opt,name=HDType" json:"HDType,omitempty"`               // 设备类型
	UserData *UserHallLogonData `protobuf:"bytes,7,opt,name=UserData" json:"UserData,omitempty"`            // 用户数据
	Area_ID  *int32             `protobuf:"varint,8,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
	FlowInfo *FlowAmountInfo    `protobuf:"bytes,9,opt,name=FlowInfo" json:"FlowInfo,omitempty"`            // 充值返利活動
}

func (x *UserLoginRet) Reset() {
	*x = UserLoginRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLoginRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLoginRet) ProtoMessage() {}

func (x *UserLoginRet) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLoginRet.ProtoReflect.Descriptor instead.
func (*UserLoginRet) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{2}
}

func (x *UserLoginRet) GetCode() int32 {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return 0
}

func (x *UserLoginRet) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *UserLoginRet) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *UserLoginRet) GetCer() string {
	if x != nil && x.Cer != nil {
		return *x.Cer
	}
	return ""
}

func (x *UserLoginRet) GetHDCode() string {
	if x != nil && x.HDCode != nil {
		return *x.HDCode
	}
	return ""
}

func (x *UserLoginRet) GetHDType() int32 {
	if x != nil && x.HDType != nil {
		return *x.HDType
	}
	return 0
}

func (x *UserLoginRet) GetUserData() *UserHallLogonData {
	if x != nil {
		return x.UserData
	}
	return nil
}

func (x *UserLoginRet) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *UserLoginRet) GetFlowInfo() *FlowAmountInfo {
	if x != nil {
		return x.FlowInfo
	}
	return nil
}

// 充值返利活動
type FlowAmountInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status          *int32  `protobuf:"varint,1,opt,name=Status" json:"Status,omitempty"`                   // 開關(1,0) (返利活動)
	UnionPlatform   *int32  `protobuf:"varint,2,opt,name=UnionPlatform" json:"UnionPlatform,omitempty"`     // 种类(如轰达或77) (返利活動)
	FlowAmountNow   *int32  `protobuf:"varint,3,opt,name=FlowAmountNow" json:"FlowAmountNow,omitempty"`     // 目前流水 (返利活動)
	FlowAmountLimit *int32  `protobuf:"varint,4,opt,name=FlowAmountLimit" json:"FlowAmountLimit,omitempty"` // 流水限制 (返利活動)
	Achievement     *int32  `protobuf:"varint,5,opt,name=Achievement" json:"Achievement,omitempty"`         // 是否達標 (返利活動)
	FlowAmountRate  *int32  `protobuf:"varint,6,opt,name=FlowAmountRate" json:"FlowAmountRate,omitempty"`   // 返利百分比 (返利活動)
	BonusRate       *int32  `protobuf:"varint,7,opt,name=BonusRate" json:"BonusRate,omitempty"`             // 兌換金額倍數 (返利活動)
	CustomerDomain  *string `protobuf:"bytes,8,opt,name=CustomerDomain" json:"CustomerDomain,omitempty"`
}

func (x *FlowAmountInfo) Reset() {
	*x = FlowAmountInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlowAmountInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowAmountInfo) ProtoMessage() {}

func (x *FlowAmountInfo) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowAmountInfo.ProtoReflect.Descriptor instead.
func (*FlowAmountInfo) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{3}
}

func (x *FlowAmountInfo) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *FlowAmountInfo) GetUnionPlatform() int32 {
	if x != nil && x.UnionPlatform != nil {
		return *x.UnionPlatform
	}
	return 0
}

func (x *FlowAmountInfo) GetFlowAmountNow() int32 {
	if x != nil && x.FlowAmountNow != nil {
		return *x.FlowAmountNow
	}
	return 0
}

func (x *FlowAmountInfo) GetFlowAmountLimit() int32 {
	if x != nil && x.FlowAmountLimit != nil {
		return *x.FlowAmountLimit
	}
	return 0
}

func (x *FlowAmountInfo) GetAchievement() int32 {
	if x != nil && x.Achievement != nil {
		return *x.Achievement
	}
	return 0
}

func (x *FlowAmountInfo) GetFlowAmountRate() int32 {
	if x != nil && x.FlowAmountRate != nil {
		return *x.FlowAmountRate
	}
	return 0
}

func (x *FlowAmountInfo) GetBonusRate() int32 {
	if x != nil && x.BonusRate != nil {
		return *x.BonusRate
	}
	return 0
}

func (x *FlowAmountInfo) GetCustomerDomain() string {
	if x != nil && x.CustomerDomain != nil {
		return *x.CustomerDomain
	}
	return ""
}

// 用户大厅登录数据
type UserHallLogonData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoginName               *string        `protobuf:"bytes,1,opt,name=LoginName" json:"LoginName,omitempty"`                               // 用户名
	NickName                *string        `protobuf:"bytes,2,opt,name=NickName" json:"NickName,omitempty"`                                 // 昵称
	UserType                *int32         `protobuf:"varint,3,req,name=UserType" json:"UserType,omitempty"`                                // 用户类型
	Sex                     *int32         `protobuf:"varint,4,opt,name=Sex" json:"Sex,omitempty"`                                          // 用户性别
	HeadID                  *int32         `protobuf:"varint,5,opt,name=HeadID" json:"HeadID,omitempty"`                                    // 头像ID
	IsTopWindow             *bool          `protobuf:"varint,6,opt,name=IsTopWindow" json:"IsTopWindow,omitempty"`                          // 是否弹窗
	CashAmount              *int64         `protobuf:"varint,7,req,name=CashAmount" json:"CashAmount,omitempty"`                            // 当前现金数
	BankAmount              *int64         `protobuf:"varint,8,opt,name=BankAmount" json:"BankAmount,omitempty"`                            // 当前银行数
	IsGaming                *bool          `protobuf:"varint,9,req,name=IsGaming" json:"IsGaming,omitempty"`                                // 是否游戏中
	ServerAddr              *string        `protobuf:"bytes,10,opt,name=ServerAddr" json:"ServerAddr,omitempty"`                            // 服务器地址
	ServerName              *string        `protobuf:"bytes,11,opt,name=ServerName" json:"ServerName,omitempty"`                            // 服务器名称
	IsKick                  *bool          `protobuf:"varint,12,opt,name=IsKick" json:"IsKick,omitempty"`                                   // 是否踢人
	IsBindGuest             *bool          `protobuf:"varint,13,opt,name=IsBindGuest" json:"IsBindGuest,omitempty"`                         // 是否绑定游客
	UserLevel               *int32         `protobuf:"varint,14,opt,name=UserLevel" json:"UserLevel,omitempty"`                             // 用户等级
	LevelKey                *string        `protobuf:"bytes,15,opt,name=LevelKey" json:"LevelKey,omitempty"`                                // 等级校验字符串
	AnnMsg                  *string        `protobuf:"bytes,16,opt,name=AnnMsg" json:"AnnMsg,omitempty"`                                    // 弹出公告
	ConvertRateTipMsg       *string        `protobuf:"bytes,17,opt,name=ConvertRateTipMsg" json:"ConvertRateTipMsg,omitempty"`              // 兑换提示消息
	BankPwdTipMsg           *string        `protobuf:"bytes,18,opt,name=BankPwdTipMsg" json:"BankPwdTipMsg,omitempty"`                      // 银行修改密码提示消息
	UIFlag                  *string        `protobuf:"bytes,19,opt,name=UIFlag" json:"UIFlag,omitempty"`                                    // UI预留标记
	PaySort                 *string        `protobuf:"bytes,20,opt,name=PaySort" json:"PaySort,omitempty"`                                  // 充值方式开关与顺序
	UpGradeMsg              *string        `protobuf:"bytes,21,opt,name=UpGradeMsg" json:"UpGradeMsg,omitempty"`                            // 升级提示
	LockGameID              *int32         `protobuf:"varint,22,opt,name=LockGameID" json:"LockGameID,omitempty"`                           // 是否在游戏中
	IsBindZhifubao          *bool          `protobuf:"varint,23,opt,name=IsBindZhifubao" json:"IsBindZhifubao,omitempty"`                   // 是否绑定支付宝
	Zhifubao                *string        `protobuf:"bytes,24,opt,name=Zhifubao" json:"Zhifubao,omitempty"`                                // 支付宝账号
	RealName                *string        `protobuf:"bytes,25,opt,name=RealName" json:"RealName,omitempty"`                                // 真实姓名
	GameList                []int32        `protobuf:"varint,26,rep,name=GameList" json:"GameList,omitempty"`                               // 游戏列表
	PayAmountConfig         *string        `protobuf:"bytes,27,opt,name=PayAmountConfig" json:"PayAmountConfig,omitempty"`                  // 充值金额配置
	PayNotifyMsg            *string        `protobuf:"bytes,28,opt,name=PayNotifyMsg" json:"PayNotifyMsg,omitempty"`                        // 充值到账通知信息
	NotifyFlag              *string        `protobuf:"bytes,29,opt,name=NotifyFlag" json:"NotifyFlag,omitempty"`                            // 通知标记0没有通知，1有通知  第1位表示是否有新邮件 后面位数备用
	PayTips                 *string        `protobuf:"bytes,30,opt,name=PayTips" json:"PayTips,omitempty"`                                  // 充值提示说明
	IsBindBankCard          *bool          `protobuf:"varint,31,opt,name=IsBindBankCard" json:"IsBindBankCard,omitempty"`                   // 是否绑定銀行卡
	BankName                *string        `protobuf:"bytes,32,opt,name=BankName" json:"BankName,omitempty"`                                // 銀行名稱
	BankCode                *string        `protobuf:"bytes,33,opt,name=BankCode" json:"BankCode,omitempty"`                                // 銀行代碼
	BankCardNum             *string        `protobuf:"bytes,34,opt,name=BankCardNum" json:"BankCardNum,omitempty"`                          // 銀行卡號
	BankRealName            *string        `protobuf:"bytes,35,opt,name=BankRealName" json:"BankRealName,omitempty"`                        // 銀行卡姓名
	PayAmountRange          *string        `protobuf:"bytes,36,opt,name=PayAmountRange" json:"PayAmountRange,omitempty"`                    // 充值金額範圍配置
	UISort                  *string        `protobuf:"bytes,37,opt,name=UISort" json:"UISort,omitempty"`                                    // 充值分類排序
	GameList2               []*GameList2   `protobuf:"bytes,38,rep,name=GameList2" json:"GameList2,omitempty"`                              // 游戏列表含狀態
	Banner                  []*Banner      `protobuf:"bytes,39,rep,name=Banner" json:"Banner,omitempty"`                                    // 廣告輪播圖
	SumCharge               *int32         `protobuf:"varint,40,req,name=SumCharge" json:"SumCharge,omitempty"`                             // 充值金額
	ShowConvertLimit        *int32         `protobuf:"varint,41,opt,name=ShowConvertLimit" json:"ShowConvertLimit,omitempty"`               // 顯示兌換的充值金額 (單位分)
	ShowAllGameLimit        *int32         `protobuf:"varint,42,opt,name=ShowAllGameLimit" json:"ShowAllGameLimit,omitempty"`               // 顯示所有遊戲充值金額 (單位分)
	QuestionContactTip      *string        `protobuf:"bytes,43,opt,name=QuestionContactTip" json:"QuestionContactTip,omitempty"`            // 詢問客服系統提示文字
	AnnMsgShow              *int32         `protobuf:"varint,44,opt,name=AnnMsgShow" json:"AnnMsgShow,omitempty"`                           // 公告開關
	ClubOpen                *bool          `protobuf:"varint,45,opt,name=ClubOpen" json:"ClubOpen,omitempty"`                               // 是否開啟代理
	PaymentInfoList         []*PaymentInfo `protobuf:"bytes,46,rep,name=PaymentInfoList" json:"PaymentInfoList,omitempty"`                  // 支付信息列表
	ConvertBankShow         *int32         `protobuf:"varint,47,opt,name=ConvertBankShow" json:"ConvertBankShow,omitempty"`                 // 是否顯示兌換銀行顯示
	ConvertAlipayShow       *int32         `protobuf:"varint,48,opt,name=ConvertAlipayShow" json:"ConvertAlipayShow,omitempty"`             // 是否顯示兌換支付寶顯示
	Area_ID                 *int32         `protobuf:"varint,49,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"`                     // 渠道ID
	ShowVIPAgent            *int64         `protobuf:"varint,50,opt,name=ShowVIPAgent" json:"ShowVIPAgent,omitempty"`                       // 多少金額可以顯示ＶＩＰ代理
	ShopNameID              *int32         `protobuf:"varint,51,opt,name=ShopNameID" json:"ShopNameID,omitempty"`                           // 1=商城 2=支付
	AgentNameID             *int32         `protobuf:"varint,52,opt,name=AgentNameID" json:"AgentNameID,omitempty"`                         // 1=代理支付 2=VIP
	ShowCS                  *int64         `protobuf:"varint,53,opt,name=ShowCS" json:"ShowCS,omitempty"`                                   // 顯示客服充值金額 (單位分)
	PlaytimeCS              *int32         `protobuf:"varint,54,opt,name=PlaytimeCS" json:"PlaytimeCS,omitempty"`                           // 游戏多久显示客服
	PlaytimeConvert         *int32         `protobuf:"varint,55,opt,name=PlaytimeConvert" json:"PlaytimeConvert,omitempty"`                 // 游戏多久显示兑换
	PlaytimeVIPAgent        *int32         `protobuf:"varint,56,opt,name=PlaytimeVIPAgent" json:"PlaytimeVIPAgent,omitempty"`               // 游戏多久显示充值代理
	ShowConvertBindPhone    *int32         `protobuf:"varint,57,opt,name=ShowConvertBindPhone" json:"ShowConvertBindPhone,omitempty"`       // 是否綁定手機顯示兌換
	ShowAllGameBindPhone    *int32         `protobuf:"varint,58,opt,name=ShowAllGameBindPhone" json:"ShowAllGameBindPhone,omitempty"`       // 是否綁定手機顯示所有遊戲
	ShowVIPAgentBindPhone   *int32         `protobuf:"varint,59,opt,name=ShowVIPAgentBindPhone" json:"ShowVIPAgentBindPhone,omitempty"`     // 是否綁定手機顯VIP代理
	ShowCSBindPhone         *int32         `protobuf:"varint,60,opt,name=ShowCSBindPhone" json:"ShowCSBindPhone,omitempty"`                 // 否綁定手機顯示客服
	ShowConvertPopup        *int32         `protobuf:"varint,61,opt,name=ShowConvertPopup" json:"ShowConvertPopup,omitempty"`               // 是否強制顯示兌換按鈕
	ConvertPopupText        *string        `protobuf:"bytes,62,opt,name=ConvertPopupText" json:"ConvertPopupText,omitempty"`                // 強制顯示兌換按鈕時的訊息內容
	CouponAmount            *int64         `protobuf:"varint,63,opt,name=CouponAmount" json:"CouponAmount,omitempty"`                       // 当前礼码数
	AvatarFrame             *int32         `protobuf:"varint,64,opt,name=AvatarFrame" json:"AvatarFrame,omitempty"`                         // VIP 頭像框 ID
	GiftMoney               *int32         `protobuf:"varint,65,opt,name=GiftMoney" json:"GiftMoney,omitempty"`                             // 綁定送金幣
	ShowCampaignAtLogin     *int32         `protobuf:"varint,66,opt,name=ShowCampaignAtLogin" json:"ShowCampaignAtLogin,omitempty"`         // 回傳登入彈跳活動視窗
	ShowFirstDepositAtLogin *int32         `protobuf:"varint,67,opt,name=ShowFirstDepositAtLogin" json:"ShowFirstDepositAtLogin,omitempty"` // 是否在登入時彈跳首充返利活動視窗
	UserChargeLevel         *int32         `protobuf:"varint,68,opt,name=UserChargeLevel" json:"UserChargeLevel,omitempty"`                 // 玩家充值等级(支付)
}

func (x *UserHallLogonData) Reset() {
	*x = UserHallLogonData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserHallLogonData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserHallLogonData) ProtoMessage() {}

func (x *UserHallLogonData) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserHallLogonData.ProtoReflect.Descriptor instead.
func (*UserHallLogonData) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{4}
}

func (x *UserHallLogonData) GetLoginName() string {
	if x != nil && x.LoginName != nil {
		return *x.LoginName
	}
	return ""
}

func (x *UserHallLogonData) GetNickName() string {
	if x != nil && x.NickName != nil {
		return *x.NickName
	}
	return ""
}

func (x *UserHallLogonData) GetUserType() int32 {
	if x != nil && x.UserType != nil {
		return *x.UserType
	}
	return 0
}

func (x *UserHallLogonData) GetSex() int32 {
	if x != nil && x.Sex != nil {
		return *x.Sex
	}
	return 0
}

func (x *UserHallLogonData) GetHeadID() int32 {
	if x != nil && x.HeadID != nil {
		return *x.HeadID
	}
	return 0
}

func (x *UserHallLogonData) GetIsTopWindow() bool {
	if x != nil && x.IsTopWindow != nil {
		return *x.IsTopWindow
	}
	return false
}

func (x *UserHallLogonData) GetCashAmount() int64 {
	if x != nil && x.CashAmount != nil {
		return *x.CashAmount
	}
	return 0
}

func (x *UserHallLogonData) GetBankAmount() int64 {
	if x != nil && x.BankAmount != nil {
		return *x.BankAmount
	}
	return 0
}

func (x *UserHallLogonData) GetIsGaming() bool {
	if x != nil && x.IsGaming != nil {
		return *x.IsGaming
	}
	return false
}

func (x *UserHallLogonData) GetServerAddr() string {
	if x != nil && x.ServerAddr != nil {
		return *x.ServerAddr
	}
	return ""
}

func (x *UserHallLogonData) GetServerName() string {
	if x != nil && x.ServerName != nil {
		return *x.ServerName
	}
	return ""
}

func (x *UserHallLogonData) GetIsKick() bool {
	if x != nil && x.IsKick != nil {
		return *x.IsKick
	}
	return false
}

func (x *UserHallLogonData) GetIsBindGuest() bool {
	if x != nil && x.IsBindGuest != nil {
		return *x.IsBindGuest
	}
	return false
}

func (x *UserHallLogonData) GetUserLevel() int32 {
	if x != nil && x.UserLevel != nil {
		return *x.UserLevel
	}
	return 0
}

func (x *UserHallLogonData) GetLevelKey() string {
	if x != nil && x.LevelKey != nil {
		return *x.LevelKey
	}
	return ""
}

func (x *UserHallLogonData) GetAnnMsg() string {
	if x != nil && x.AnnMsg != nil {
		return *x.AnnMsg
	}
	return ""
}

func (x *UserHallLogonData) GetConvertRateTipMsg() string {
	if x != nil && x.ConvertRateTipMsg != nil {
		return *x.ConvertRateTipMsg
	}
	return ""
}

func (x *UserHallLogonData) GetBankPwdTipMsg() string {
	if x != nil && x.BankPwdTipMsg != nil {
		return *x.BankPwdTipMsg
	}
	return ""
}

func (x *UserHallLogonData) GetUIFlag() string {
	if x != nil && x.UIFlag != nil {
		return *x.UIFlag
	}
	return ""
}

func (x *UserHallLogonData) GetPaySort() string {
	if x != nil && x.PaySort != nil {
		return *x.PaySort
	}
	return ""
}

func (x *UserHallLogonData) GetUpGradeMsg() string {
	if x != nil && x.UpGradeMsg != nil {
		return *x.UpGradeMsg
	}
	return ""
}

func (x *UserHallLogonData) GetLockGameID() int32 {
	if x != nil && x.LockGameID != nil {
		return *x.LockGameID
	}
	return 0
}

func (x *UserHallLogonData) GetIsBindZhifubao() bool {
	if x != nil && x.IsBindZhifubao != nil {
		return *x.IsBindZhifubao
	}
	return false
}

func (x *UserHallLogonData) GetZhifubao() string {
	if x != nil && x.Zhifubao != nil {
		return *x.Zhifubao
	}
	return ""
}

func (x *UserHallLogonData) GetRealName() string {
	if x != nil && x.RealName != nil {
		return *x.RealName
	}
	return ""
}

func (x *UserHallLogonData) GetGameList() []int32 {
	if x != nil {
		return x.GameList
	}
	return nil
}

func (x *UserHallLogonData) GetPayAmountConfig() string {
	if x != nil && x.PayAmountConfig != nil {
		return *x.PayAmountConfig
	}
	return ""
}

func (x *UserHallLogonData) GetPayNotifyMsg() string {
	if x != nil && x.PayNotifyMsg != nil {
		return *x.PayNotifyMsg
	}
	return ""
}

func (x *UserHallLogonData) GetNotifyFlag() string {
	if x != nil && x.NotifyFlag != nil {
		return *x.NotifyFlag
	}
	return ""
}

func (x *UserHallLogonData) GetPayTips() string {
	if x != nil && x.PayTips != nil {
		return *x.PayTips
	}
	return ""
}

func (x *UserHallLogonData) GetIsBindBankCard() bool {
	if x != nil && x.IsBindBankCard != nil {
		return *x.IsBindBankCard
	}
	return false
}

func (x *UserHallLogonData) GetBankName() string {
	if x != nil && x.BankName != nil {
		return *x.BankName
	}
	return ""
}

func (x *UserHallLogonData) GetBankCode() string {
	if x != nil && x.BankCode != nil {
		return *x.BankCode
	}
	return ""
}

func (x *UserHallLogonData) GetBankCardNum() string {
	if x != nil && x.BankCardNum != nil {
		return *x.BankCardNum
	}
	return ""
}

func (x *UserHallLogonData) GetBankRealName() string {
	if x != nil && x.BankRealName != nil {
		return *x.BankRealName
	}
	return ""
}

func (x *UserHallLogonData) GetPayAmountRange() string {
	if x != nil && x.PayAmountRange != nil {
		return *x.PayAmountRange
	}
	return ""
}

func (x *UserHallLogonData) GetUISort() string {
	if x != nil && x.UISort != nil {
		return *x.UISort
	}
	return ""
}

func (x *UserHallLogonData) GetGameList2() []*GameList2 {
	if x != nil {
		return x.GameList2
	}
	return nil
}

func (x *UserHallLogonData) GetBanner() []*Banner {
	if x != nil {
		return x.Banner
	}
	return nil
}

func (x *UserHallLogonData) GetSumCharge() int32 {
	if x != nil && x.SumCharge != nil {
		return *x.SumCharge
	}
	return 0
}

func (x *UserHallLogonData) GetShowConvertLimit() int32 {
	if x != nil && x.ShowConvertLimit != nil {
		return *x.ShowConvertLimit
	}
	return 0
}

func (x *UserHallLogonData) GetShowAllGameLimit() int32 {
	if x != nil && x.ShowAllGameLimit != nil {
		return *x.ShowAllGameLimit
	}
	return 0
}

func (x *UserHallLogonData) GetQuestionContactTip() string {
	if x != nil && x.QuestionContactTip != nil {
		return *x.QuestionContactTip
	}
	return ""
}

func (x *UserHallLogonData) GetAnnMsgShow() int32 {
	if x != nil && x.AnnMsgShow != nil {
		return *x.AnnMsgShow
	}
	return 0
}

func (x *UserHallLogonData) GetClubOpen() bool {
	if x != nil && x.ClubOpen != nil {
		return *x.ClubOpen
	}
	return false
}

func (x *UserHallLogonData) GetPaymentInfoList() []*PaymentInfo {
	if x != nil {
		return x.PaymentInfoList
	}
	return nil
}

func (x *UserHallLogonData) GetConvertBankShow() int32 {
	if x != nil && x.ConvertBankShow != nil {
		return *x.ConvertBankShow
	}
	return 0
}

func (x *UserHallLogonData) GetConvertAlipayShow() int32 {
	if x != nil && x.ConvertAlipayShow != nil {
		return *x.ConvertAlipayShow
	}
	return 0
}

func (x *UserHallLogonData) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *UserHallLogonData) GetShowVIPAgent() int64 {
	if x != nil && x.ShowVIPAgent != nil {
		return *x.ShowVIPAgent
	}
	return 0
}

func (x *UserHallLogonData) GetShopNameID() int32 {
	if x != nil && x.ShopNameID != nil {
		return *x.ShopNameID
	}
	return 0
}

func (x *UserHallLogonData) GetAgentNameID() int32 {
	if x != nil && x.AgentNameID != nil {
		return *x.AgentNameID
	}
	return 0
}

func (x *UserHallLogonData) GetShowCS() int64 {
	if x != nil && x.ShowCS != nil {
		return *x.ShowCS
	}
	return 0
}

func (x *UserHallLogonData) GetPlaytimeCS() int32 {
	if x != nil && x.PlaytimeCS != nil {
		return *x.PlaytimeCS
	}
	return 0
}

func (x *UserHallLogonData) GetPlaytimeConvert() int32 {
	if x != nil && x.PlaytimeConvert != nil {
		return *x.PlaytimeConvert
	}
	return 0
}

func (x *UserHallLogonData) GetPlaytimeVIPAgent() int32 {
	if x != nil && x.PlaytimeVIPAgent != nil {
		return *x.PlaytimeVIPAgent
	}
	return 0
}

func (x *UserHallLogonData) GetShowConvertBindPhone() int32 {
	if x != nil && x.ShowConvertBindPhone != nil {
		return *x.ShowConvertBindPhone
	}
	return 0
}

func (x *UserHallLogonData) GetShowAllGameBindPhone() int32 {
	if x != nil && x.ShowAllGameBindPhone != nil {
		return *x.ShowAllGameBindPhone
	}
	return 0
}

func (x *UserHallLogonData) GetShowVIPAgentBindPhone() int32 {
	if x != nil && x.ShowVIPAgentBindPhone != nil {
		return *x.ShowVIPAgentBindPhone
	}
	return 0
}

func (x *UserHallLogonData) GetShowCSBindPhone() int32 {
	if x != nil && x.ShowCSBindPhone != nil {
		return *x.ShowCSBindPhone
	}
	return 0
}

func (x *UserHallLogonData) GetShowConvertPopup() int32 {
	if x != nil && x.ShowConvertPopup != nil {
		return *x.ShowConvertPopup
	}
	return 0
}

func (x *UserHallLogonData) GetConvertPopupText() string {
	if x != nil && x.ConvertPopupText != nil {
		return *x.ConvertPopupText
	}
	return ""
}

func (x *UserHallLogonData) GetCouponAmount() int64 {
	if x != nil && x.CouponAmount != nil {
		return *x.CouponAmount
	}
	return 0
}

func (x *UserHallLogonData) GetAvatarFrame() int32 {
	if x != nil && x.AvatarFrame != nil {
		return *x.AvatarFrame
	}
	return 0
}

func (x *UserHallLogonData) GetGiftMoney() int32 {
	if x != nil && x.GiftMoney != nil {
		return *x.GiftMoney
	}
	return 0
}

func (x *UserHallLogonData) GetShowCampaignAtLogin() int32 {
	if x != nil && x.ShowCampaignAtLogin != nil {
		return *x.ShowCampaignAtLogin
	}
	return 0
}

func (x *UserHallLogonData) GetShowFirstDepositAtLogin() int32 {
	if x != nil && x.ShowFirstDepositAtLogin != nil {
		return *x.ShowFirstDepositAtLogin
	}
	return 0
}

func (x *UserHallLogonData) GetUserChargeLevel() int32 {
	if x != nil && x.UserChargeLevel != nil {
		return *x.UserChargeLevel
	}
	return 0
}

// 支付信息
type PaymentInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GWID       *int32  `protobuf:"varint,1,req,name=GWID" json:"GWID,omitempty"`
	TypeID     *int32  `protobuf:"varint,2,req,name=TypeID" json:"TypeID,omitempty"`
	TypeName   *string `protobuf:"bytes,3,req,name=TypeName" json:"TypeName,omitempty"`
	AmountSort *string `protobuf:"bytes,4,req,name=AmountSort" json:"AmountSort,omitempty"`
	Area_ID    *int32  `protobuf:"varint,5,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *PaymentInfo) Reset() {
	*x = PaymentInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentInfo) ProtoMessage() {}

func (x *PaymentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentInfo.ProtoReflect.Descriptor instead.
func (*PaymentInfo) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{5}
}

func (x *PaymentInfo) GetGWID() int32 {
	if x != nil && x.GWID != nil {
		return *x.GWID
	}
	return 0
}

func (x *PaymentInfo) GetTypeID() int32 {
	if x != nil && x.TypeID != nil {
		return *x.TypeID
	}
	return 0
}

func (x *PaymentInfo) GetTypeName() string {
	if x != nil && x.TypeName != nil {
		return *x.TypeName
	}
	return ""
}

func (x *PaymentInfo) GetAmountSort() string {
	if x != nil && x.AmountSort != nil {
		return *x.AmountSort
	}
	return ""
}

func (x *PaymentInfo) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 廣告輪播圖
type Banner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Picture  *string `protobuf:"bytes,1,req,name=Picture" json:"Picture,omitempty"`
	Link     *string `protobuf:"bytes,2,req,name=Link" json:"Link,omitempty"`
	Behavior *int32  `protobuf:"varint,3,req,name=Behavior" json:"Behavior,omitempty"`
	Area_ID  *int32  `protobuf:"varint,4,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *Banner) Reset() {
	*x = Banner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Banner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Banner) ProtoMessage() {}

func (x *Banner) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Banner.ProtoReflect.Descriptor instead.
func (*Banner) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{6}
}

func (x *Banner) GetPicture() string {
	if x != nil && x.Picture != nil {
		return *x.Picture
	}
	return ""
}

func (x *Banner) GetLink() string {
	if x != nil && x.Link != nil {
		return *x.Link
	}
	return ""
}

func (x *Banner) GetBehavior() int32 {
	if x != nil && x.Behavior != nil {
		return *x.Behavior
	}
	return 0
}

func (x *Banner) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 游戏列表含狀態
type GameList2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameID    *int32  `protobuf:"varint,1,req,name=GameID" json:"GameID,omitempty"`
	Popular   *int32  `protobuf:"varint,2,req,name=Popular" json:"Popular,omitempty"`
	IconName  *string `protobuf:"bytes,3,opt,name=IconName" json:"IconName,omitempty"`
	AliasName *string `protobuf:"bytes,4,opt,name=AliasName" json:"AliasName,omitempty"`
	IconTitle *string `protobuf:"bytes,5,opt,name=IconTitle" json:"IconTitle,omitempty"`
	Skin      *string `protobuf:"bytes,6,opt,name=Skin" json:"Skin,omitempty"`
	Area_ID   *int32  `protobuf:"varint,7,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *GameList2) Reset() {
	*x = GameList2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameList2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameList2) ProtoMessage() {}

func (x *GameList2) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameList2.ProtoReflect.Descriptor instead.
func (*GameList2) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{7}
}

func (x *GameList2) GetGameID() int32 {
	if x != nil && x.GameID != nil {
		return *x.GameID
	}
	return 0
}

func (x *GameList2) GetPopular() int32 {
	if x != nil && x.Popular != nil {
		return *x.Popular
	}
	return 0
}

func (x *GameList2) GetIconName() string {
	if x != nil && x.IconName != nil {
		return *x.IconName
	}
	return ""
}

func (x *GameList2) GetAliasName() string {
	if x != nil && x.AliasName != nil {
		return *x.AliasName
	}
	return ""
}

func (x *GameList2) GetIconTitle() string {
	if x != nil && x.IconTitle != nil {
		return *x.IconTitle
	}
	return ""
}

func (x *GameList2) GetSkin() string {
	if x != nil && x.Skin != nil {
		return *x.Skin
	}
	return ""
}

func (x *GameList2) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 用户登出
type UserLogout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID  *int32  `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`               // 用户ID
	Cer     *string `protobuf:"bytes,2,req,name=Cer" json:"Cer,omitempty"`                      // 证书
	Area_ID *int32  `protobuf:"varint,3,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *UserLogout) Reset() {
	*x = UserLogout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLogout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLogout) ProtoMessage() {}

func (x *UserLogout) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLogout.ProtoReflect.Descriptor instead.
func (*UserLogout) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{8}
}

func (x *UserLogout) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *UserLogout) GetCer() string {
	if x != nil && x.Cer != nil {
		return *x.Cer
	}
	return ""
}

func (x *UserLogout) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 平台版本信息
type HallVerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AreaId  *int64 `protobuf:"varint,1,req,name=AreaId" json:"AreaId,omitempty"`
	Area_ID *int32 `protobuf:"varint,2,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *HallVerReq) Reset() {
	*x = HallVerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HallVerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HallVerReq) ProtoMessage() {}

func (x *HallVerReq) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HallVerReq.ProtoReflect.Descriptor instead.
func (*HallVerReq) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{9}
}

func (x *HallVerReq) GetAreaId() int64 {
	if x != nil && x.AreaId != nil {
		return *x.AreaId
	}
	return 0
}

func (x *HallVerReq) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 注意版本号字符串可能为空。这时服务器可能是在出错的情况下。 客户端应该提示错误并退出
type HallVerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AndroidVersion  *string `protobuf:"bytes,1,req,name=AndroidVersion" json:"AndroidVersion,omitempty"`
	IOSVersion      *string `protobuf:"bytes,2,req,name=IOSVersion" json:"IOSVersion,omitempty"`
	UpdateDomain    *string `protobuf:"bytes,3,opt,name=UpdateDomain" json:"UpdateDomain,omitempty"`
	BillDomain      *string `protobuf:"bytes,4,opt,name=BillDomain" json:"BillDomain,omitempty"`
	ClubDomain      *string `protobuf:"bytes,5,opt,name=ClubDomain" json:"ClubDomain,omitempty"`
	CustomerDomain  *string `protobuf:"bytes,6,opt,name=CustomerDomain" json:"CustomerDomain,omitempty"`
	AreaConfig      *string `protobuf:"bytes,7,opt,name=AreaConfig" json:"AreaConfig,omitempty"`
	Area_ID         *int32  `protobuf:"varint,8,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
	AndroidVersion2 *string `protobuf:"bytes,9,opt,name=AndroidVersion2" json:"AndroidVersion2,omitempty"`
	IOSVersion2     *string `protobuf:"bytes,10,opt,name=IOSVersion2" json:"IOSVersion2,omitempty"`
}

func (x *HallVerInfo) Reset() {
	*x = HallVerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HallVerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HallVerInfo) ProtoMessage() {}

func (x *HallVerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HallVerInfo.ProtoReflect.Descriptor instead.
func (*HallVerInfo) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{10}
}

func (x *HallVerInfo) GetAndroidVersion() string {
	if x != nil && x.AndroidVersion != nil {
		return *x.AndroidVersion
	}
	return ""
}

func (x *HallVerInfo) GetIOSVersion() string {
	if x != nil && x.IOSVersion != nil {
		return *x.IOSVersion
	}
	return ""
}

func (x *HallVerInfo) GetUpdateDomain() string {
	if x != nil && x.UpdateDomain != nil {
		return *x.UpdateDomain
	}
	return ""
}

func (x *HallVerInfo) GetBillDomain() string {
	if x != nil && x.BillDomain != nil {
		return *x.BillDomain
	}
	return ""
}

func (x *HallVerInfo) GetClubDomain() string {
	if x != nil && x.ClubDomain != nil {
		return *x.ClubDomain
	}
	return ""
}

func (x *HallVerInfo) GetCustomerDomain() string {
	if x != nil && x.CustomerDomain != nil {
		return *x.CustomerDomain
	}
	return ""
}

func (x *HallVerInfo) GetAreaConfig() string {
	if x != nil && x.AreaConfig != nil {
		return *x.AreaConfig
	}
	return ""
}

func (x *HallVerInfo) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *HallVerInfo) GetAndroidVersion2() string {
	if x != nil && x.AndroidVersion2 != nil {
		return *x.AndroidVersion2
	}
	return ""
}

func (x *HallVerInfo) GetIOSVersion2() string {
	if x != nil && x.IOSVersion2 != nil {
		return *x.IOSVersion2
	}
	return ""
}

// 所有服务器信息
type AllGameServerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerList []*GameServerInfo `protobuf:"bytes,1,rep,name=ServerList" json:"ServerList,omitempty"`
	Area_ID    *int32            `protobuf:"varint,2,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *AllGameServerInfo) Reset() {
	*x = AllGameServerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllGameServerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllGameServerInfo) ProtoMessage() {}

func (x *AllGameServerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllGameServerInfo.ProtoReflect.Descriptor instead.
func (*AllGameServerInfo) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{11}
}

func (x *AllGameServerInfo) GetServerList() []*GameServerInfo {
	if x != nil {
		return x.ServerList
	}
	return nil
}

func (x *AllGameServerInfo) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 游戏服务器列表
type GameServerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameID         *int32  `protobuf:"varint,1,req,name=GameID" json:"GameID,omitempty"`                //游戏ID
	GameName       *string `protobuf:"bytes,2,req,name=GameName" json:"GameName,omitempty"`             //游戏名称
	LoginMoney     *int32  `protobuf:"varint,3,req,name=LoginMoney" json:"LoginMoney,omitempty"`        //入场金币数
	Flag           *string `protobuf:"bytes,4,req,name=Flag" json:"Flag,omitempty"`                     //标记
	Status         *string `protobuf:"bytes,5,req,name=Status" json:"Status,omitempty"`                 //状态
	BaseScore      *int32  `protobuf:"varint,6,req,name=BaseScore" json:"BaseScore,omitempty"`          //底分
	Single         *int32  `protobuf:"varint,7,opt,name=Single" json:"Single,omitempty"`                //直接進入取第一個服務器進入, 0=>顯示房間列表, 1=>第一個服務器進入
	AndroidVersion *string `protobuf:"bytes,8,opt,name=AndroidVersion" json:"AndroidVersion,omitempty"` // 客戶端版本號
	IOSVersion     *string `protobuf:"bytes,9,opt,name=IOSVersion" json:"IOSVersion,omitempty"`         // 客戶端版本號
	KickOutMoney   *int32  `protobuf:"varint,10,opt,name=KickOutMoney" json:"KickOutMoney,omitempty"`   //入场金币数
	MaxOdd         *int32  `protobuf:"varint,11,opt,name=MaxOdd" json:"MaxOdd,omitempty"`               // 最高倍數
	GameType       *int32  `protobuf:"varint,12,opt,name=GameType" json:"GameType,omitempty"`           //遊戲類型: 1.真錢 2.比賽 3.休閒
	Area_ID        *int32  `protobuf:"varint,13,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
	Port           *int32  `protobuf:"varint,14,opt,name=Port" json:"Port,omitempty"`
	ServerID       *int32  `protobuf:"varint,15,opt,name=ServerID" json:"ServerID,omitempty"`
	IPAddress      *string `protobuf:"bytes,16,opt,name=IPAddress" json:"IPAddress,omitempty"`
	RoomDesc       *string `protobuf:"bytes,17,opt,name=RoomDesc" json:"RoomDesc,omitempty"`       //房间描述，红包扫雷游戏专用：10包1倍 7包1.5倍 5包2倍
	BetLimit       *int32  `protobuf:"varint,18,opt,name=BetLimit" json:"BetLimit,omitempty"`      //下注上限
	TipBetRange    *string `protobuf:"bytes,19,opt,name=TipBetRange" json:"TipBetRange,omitempty"` //提示下注限紅區間
}

func (x *GameServerInfo) Reset() {
	*x = GameServerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameServerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameServerInfo) ProtoMessage() {}

func (x *GameServerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameServerInfo.ProtoReflect.Descriptor instead.
func (*GameServerInfo) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{12}
}

func (x *GameServerInfo) GetGameID() int32 {
	if x != nil && x.GameID != nil {
		return *x.GameID
	}
	return 0
}

func (x *GameServerInfo) GetGameName() string {
	if x != nil && x.GameName != nil {
		return *x.GameName
	}
	return ""
}

func (x *GameServerInfo) GetLoginMoney() int32 {
	if x != nil && x.LoginMoney != nil {
		return *x.LoginMoney
	}
	return 0
}

func (x *GameServerInfo) GetFlag() string {
	if x != nil && x.Flag != nil {
		return *x.Flag
	}
	return ""
}

func (x *GameServerInfo) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *GameServerInfo) GetBaseScore() int32 {
	if x != nil && x.BaseScore != nil {
		return *x.BaseScore
	}
	return 0
}

func (x *GameServerInfo) GetSingle() int32 {
	if x != nil && x.Single != nil {
		return *x.Single
	}
	return 0
}

func (x *GameServerInfo) GetAndroidVersion() string {
	if x != nil && x.AndroidVersion != nil {
		return *x.AndroidVersion
	}
	return ""
}

func (x *GameServerInfo) GetIOSVersion() string {
	if x != nil && x.IOSVersion != nil {
		return *x.IOSVersion
	}
	return ""
}

func (x *GameServerInfo) GetKickOutMoney() int32 {
	if x != nil && x.KickOutMoney != nil {
		return *x.KickOutMoney
	}
	return 0
}

func (x *GameServerInfo) GetMaxOdd() int32 {
	if x != nil && x.MaxOdd != nil {
		return *x.MaxOdd
	}
	return 0
}

func (x *GameServerInfo) GetGameType() int32 {
	if x != nil && x.GameType != nil {
		return *x.GameType
	}
	return 0
}

func (x *GameServerInfo) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *GameServerInfo) GetPort() int32 {
	if x != nil && x.Port != nil {
		return *x.Port
	}
	return 0
}

func (x *GameServerInfo) GetServerID() int32 {
	if x != nil && x.ServerID != nil {
		return *x.ServerID
	}
	return 0
}

func (x *GameServerInfo) GetIPAddress() string {
	if x != nil && x.IPAddress != nil {
		return *x.IPAddress
	}
	return ""
}

func (x *GameServerInfo) GetRoomDesc() string {
	if x != nil && x.RoomDesc != nil {
		return *x.RoomDesc
	}
	return ""
}

func (x *GameServerInfo) GetBetLimit() int32 {
	if x != nil && x.BetLimit != nil {
		return *x.BetLimit
	}
	return 0
}

func (x *GameServerInfo) GetTipBetRange() string {
	if x != nil && x.TipBetRange != nil {
		return *x.TipBetRange
	}
	return ""
}

// 请求游戏服务器地址
type RequestGameServerAddrInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerFlag *string `protobuf:"bytes,1,req,name=ServerFlag" json:"ServerFlag,omitempty"`        //服务器标记
	GameID     *int32  `protobuf:"varint,2,req,name=GameID" json:"GameID,omitempty"`               //游戏ID
	Area_ID    *int32  `protobuf:"varint,3,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *RequestGameServerAddrInfo) Reset() {
	*x = RequestGameServerAddrInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestGameServerAddrInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGameServerAddrInfo) ProtoMessage() {}

func (x *RequestGameServerAddrInfo) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGameServerAddrInfo.ProtoReflect.Descriptor instead.
func (*RequestGameServerAddrInfo) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{13}
}

func (x *RequestGameServerAddrInfo) GetServerFlag() string {
	if x != nil && x.ServerFlag != nil {
		return *x.ServerFlag
	}
	return ""
}

func (x *RequestGameServerAddrInfo) GetGameID() int32 {
	if x != nil && x.GameID != nil {
		return *x.GameID
	}
	return 0
}

func (x *RequestGameServerAddrInfo) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 游戏服务器地址信息
type GameServerAddr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerID  *int32  `protobuf:"varint,1,req,name=ServerID" json:"ServerID,omitempty"`           //服务器ID
	IPAddress *string `protobuf:"bytes,2,req,name=IPAddress" json:"IPAddress,omitempty"`          //服务器地址
	Port      *int32  `protobuf:"varint,3,req,name=Port" json:"Port,omitempty"`                   //服务器端口
	Area_ID   *int32  `protobuf:"varint,4,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
	StatusID  *int32  `protobuf:"varint,5,opt,name=StatusID" json:"StatusID,omitempty"`           // 0正常, 1異常重連
}

func (x *GameServerAddr) Reset() {
	*x = GameServerAddr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameServerAddr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameServerAddr) ProtoMessage() {}

func (x *GameServerAddr) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameServerAddr.ProtoReflect.Descriptor instead.
func (*GameServerAddr) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{14}
}

func (x *GameServerAddr) GetServerID() int32 {
	if x != nil && x.ServerID != nil {
		return *x.ServerID
	}
	return 0
}

func (x *GameServerAddr) GetIPAddress() string {
	if x != nil && x.IPAddress != nil {
		return *x.IPAddress
	}
	return ""
}

func (x *GameServerAddr) GetPort() int32 {
	if x != nil && x.Port != nil {
		return *x.Port
	}
	return 0
}

func (x *GameServerAddr) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *GameServerAddr) GetStatusID() int32 {
	if x != nil && x.StatusID != nil {
		return *x.StatusID
	}
	return 0
}

// 绑定支付宝
type ZhifubaoInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Zhifubao *string `protobuf:"bytes,1,req,name=Zhifubao" json:"Zhifubao,omitempty"`            //支付宝
	RealName *string `protobuf:"bytes,2,req,name=RealName" json:"RealName,omitempty"`            //实名
	VCode    *string `protobuf:"bytes,3,req,name=VCode" json:"VCode,omitempty"`                  //验证码
	CodeType *int32  `protobuf:"varint,4,req,name=CodeType" json:"CodeType,omitempty"`           //验证码类型, 4綁定, 5變更
	Area_ID  *int32  `protobuf:"varint,5,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *ZhifubaoInfo) Reset() {
	*x = ZhifubaoInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZhifubaoInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZhifubaoInfo) ProtoMessage() {}

func (x *ZhifubaoInfo) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZhifubaoInfo.ProtoReflect.Descriptor instead.
func (*ZhifubaoInfo) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{15}
}

func (x *ZhifubaoInfo) GetZhifubao() string {
	if x != nil && x.Zhifubao != nil {
		return *x.Zhifubao
	}
	return ""
}

func (x *ZhifubaoInfo) GetRealName() string {
	if x != nil && x.RealName != nil {
		return *x.RealName
	}
	return ""
}

func (x *ZhifubaoInfo) GetVCode() string {
	if x != nil && x.VCode != nil {
		return *x.VCode
	}
	return ""
}

func (x *ZhifubaoInfo) GetCodeType() int32 {
	if x != nil && x.CodeType != nil {
		return *x.CodeType
	}
	return 0
}

func (x *ZhifubaoInfo) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 绑定銀行卡
type BankCardInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BankCardNum *string `protobuf:"bytes,1,req,name=BankCardNum" json:"BankCardNum,omitempty"`      //銀行卡號
	RealName    *string `protobuf:"bytes,2,req,name=RealName" json:"RealName,omitempty"`            //实名
	BankCode    *string `protobuf:"bytes,3,req,name=BankCode" json:"BankCode,omitempty"`            //銀行代碼
	VCode       *string `protobuf:"bytes,4,req,name=VCode" json:"VCode,omitempty"`                  //验证码
	CodeType    *int32  `protobuf:"varint,5,req,name=CodeType" json:"CodeType,omitempty"`           //验证码类型, 4綁定, 5變更
	Area_ID     *int32  `protobuf:"varint,6,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *BankCardInfo) Reset() {
	*x = BankCardInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BankCardInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BankCardInfo) ProtoMessage() {}

func (x *BankCardInfo) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BankCardInfo.ProtoReflect.Descriptor instead.
func (*BankCardInfo) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{16}
}

func (x *BankCardInfo) GetBankCardNum() string {
	if x != nil && x.BankCardNum != nil {
		return *x.BankCardNum
	}
	return ""
}

func (x *BankCardInfo) GetRealName() string {
	if x != nil && x.RealName != nil {
		return *x.RealName
	}
	return ""
}

func (x *BankCardInfo) GetBankCode() string {
	if x != nil && x.BankCode != nil {
		return *x.BankCode
	}
	return ""
}

func (x *BankCardInfo) GetVCode() string {
	if x != nil && x.VCode != nil {
		return *x.VCode
	}
	return ""
}

func (x *BankCardInfo) GetCodeType() int32 {
	if x != nil && x.CodeType != nil {
		return *x.CodeType
	}
	return 0
}

func (x *BankCardInfo) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 修改密码
type ModifyPassword struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldPwd      *string `protobuf:"bytes,1,req,name=OldPwd" json:"OldPwd,omitempty"`                //旧密码
	NewPassword *string `protobuf:"bytes,2,req,name=NewPassword" json:"NewPassword,omitempty"`      //新密码
	Area_ID     *int32  `protobuf:"varint,3,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *ModifyPassword) Reset() {
	*x = ModifyPassword{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyPassword) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyPassword) ProtoMessage() {}

func (x *ModifyPassword) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyPassword.ProtoReflect.Descriptor instead.
func (*ModifyPassword) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{17}
}

func (x *ModifyPassword) GetOldPwd() string {
	if x != nil && x.OldPwd != nil {
		return *x.OldPwd
	}
	return ""
}

func (x *ModifyPassword) GetNewPassword() string {
	if x != nil && x.NewPassword != nil {
		return *x.NewPassword
	}
	return ""
}

func (x *ModifyPassword) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 发送验证码
type SendPhoneVCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tel      *string `protobuf:"bytes,1,opt,name=Tel" json:"Tel,omitempty"`                      //用户手机号码
	CodeType *int32  `protobuf:"varint,2,req,name=CodeType" json:"CodeType,omitempty"`           //验证码类型	 1 注册 2 找回密码 3 找回银行密码 4 綁定兌換帳號資訊 5 變更兌換帳號資訊
	Area_ID  *int32  `protobuf:"varint,3,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *SendPhoneVCode) Reset() {
	*x = SendPhoneVCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendPhoneVCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendPhoneVCode) ProtoMessage() {}

func (x *SendPhoneVCode) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendPhoneVCode.ProtoReflect.Descriptor instead.
func (*SendPhoneVCode) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{18}
}

func (x *SendPhoneVCode) GetTel() string {
	if x != nil && x.Tel != nil {
		return *x.Tel
	}
	return ""
}

func (x *SendPhoneVCode) GetCodeType() int32 {
	if x != nil && x.CodeType != nil {
		return *x.CodeType
	}
	return 0
}

func (x *SendPhoneVCode) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 发送验证码结果
type SendPhoneVCodeRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      *int32  `protobuf:"varint,1,req,name=Code" json:"Code,omitempty"`
	Message   *string `protobuf:"bytes,2,req,name=Message" json:"Message,omitempty"`
	CountDown *int32  `protobuf:"varint,3,req,name=CountDown" json:"CountDown,omitempty"`
	CodeID    *int32  `protobuf:"varint,4,req,name=CodeID" json:"CodeID,omitempty"`
	Area_ID   *int32  `protobuf:"varint,5,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *SendPhoneVCodeRet) Reset() {
	*x = SendPhoneVCodeRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendPhoneVCodeRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendPhoneVCodeRet) ProtoMessage() {}

func (x *SendPhoneVCodeRet) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendPhoneVCodeRet.ProtoReflect.Descriptor instead.
func (*SendPhoneVCodeRet) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{19}
}

func (x *SendPhoneVCodeRet) GetCode() int32 {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return 0
}

func (x *SendPhoneVCodeRet) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *SendPhoneVCodeRet) GetCountDown() int32 {
	if x != nil && x.CountDown != nil {
		return *x.CountDown
	}
	return 0
}

func (x *SendPhoneVCodeRet) GetCodeID() int32 {
	if x != nil && x.CodeID != nil {
		return *x.CodeID
	}
	return 0
}

func (x *SendPhoneVCodeRet) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 修改头像
type ModifyFace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FaceID  *int32 `protobuf:"varint,1,req,name=FaceID" json:"FaceID,omitempty"`
	Area_ID *int32 `protobuf:"varint,2,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *ModifyFace) Reset() {
	*x = ModifyFace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyFace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyFace) ProtoMessage() {}

func (x *ModifyFace) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyFace.ProtoReflect.Descriptor instead.
func (*ModifyFace) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{20}
}

func (x *ModifyFace) GetFaceID() int32 {
	if x != nil && x.FaceID != nil {
		return *x.FaceID
	}
	return 0
}

func (x *ModifyFace) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 存取款
type MoneyDeposit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount        *int64  `protobuf:"varint,1,req,name=Amount" json:"Amount,omitempty"`
	MoneyPassword *string `protobuf:"bytes,2,opt,name=MoneyPassword" json:"MoneyPassword,omitempty"`
	OP            *int32  `protobuf:"varint,3,req,name=OP" json:"OP,omitempty"`                       // 0 存款 1 取款
	Area_ID       *int32  `protobuf:"varint,4,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *MoneyDeposit) Reset() {
	*x = MoneyDeposit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoneyDeposit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoneyDeposit) ProtoMessage() {}

func (x *MoneyDeposit) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoneyDeposit.ProtoReflect.Descriptor instead.
func (*MoneyDeposit) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{21}
}

func (x *MoneyDeposit) GetAmount() int64 {
	if x != nil && x.Amount != nil {
		return *x.Amount
	}
	return 0
}

func (x *MoneyDeposit) GetMoneyPassword() string {
	if x != nil && x.MoneyPassword != nil {
		return *x.MoneyPassword
	}
	return ""
}

func (x *MoneyDeposit) GetOP() int32 {
	if x != nil && x.OP != nil {
		return *x.OP
	}
	return 0
}

func (x *MoneyDeposit) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 存取款结果
type MoneyDepositRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount       *int64  `protobuf:"varint,1,req,name=Amount" json:"Amount,omitempty"`
	OP           *int32  `protobuf:"varint,2,req,name=OP" json:"OP,omitempty"` // 0 存款 1 取款
	Code         *int32  `protobuf:"varint,3,req,name=Code" json:"Code,omitempty"`
	Message      *string `protobuf:"bytes,4,req,name=Message" json:"Message,omitempty"`
	CurrentMoney *int64  `protobuf:"varint,5,req,name=CurrentMoney" json:"CurrentMoney,omitempty"`
	CurrentBank  *int64  `protobuf:"varint,6,req,name=CurrentBank" json:"CurrentBank,omitempty"`
	Area_ID      *int32  `protobuf:"varint,7,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *MoneyDepositRet) Reset() {
	*x = MoneyDepositRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoneyDepositRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoneyDepositRet) ProtoMessage() {}

func (x *MoneyDepositRet) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoneyDepositRet.ProtoReflect.Descriptor instead.
func (*MoneyDepositRet) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{22}
}

func (x *MoneyDepositRet) GetAmount() int64 {
	if x != nil && x.Amount != nil {
		return *x.Amount
	}
	return 0
}

func (x *MoneyDepositRet) GetOP() int32 {
	if x != nil && x.OP != nil {
		return *x.OP
	}
	return 0
}

func (x *MoneyDepositRet) GetCode() int32 {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return 0
}

func (x *MoneyDepositRet) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *MoneyDepositRet) GetCurrentMoney() int64 {
	if x != nil && x.CurrentMoney != nil {
		return *x.CurrentMoney
	}
	return 0
}

func (x *MoneyDepositRet) GetCurrentBank() int64 {
	if x != nil && x.CurrentBank != nil {
		return *x.CurrentBank
	}
	return 0
}

func (x *MoneyDepositRet) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 绑定游客账号
type BindGuestAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tel      *string `protobuf:"bytes,1,req,name=Tel" json:"Tel,omitempty"`                      // 手机号码
	VCode    *string `protobuf:"bytes,2,req,name=VCode" json:"VCode,omitempty"`                  // 验证码
	Password *string `protobuf:"bytes,3,req,name=Password" json:"Password,omitempty"`            // 密码
	Area_ID  *int32  `protobuf:"varint,4,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *BindGuestAccount) Reset() {
	*x = BindGuestAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindGuestAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindGuestAccount) ProtoMessage() {}

func (x *BindGuestAccount) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindGuestAccount.ProtoReflect.Descriptor instead.
func (*BindGuestAccount) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{23}
}

func (x *BindGuestAccount) GetTel() string {
	if x != nil && x.Tel != nil {
		return *x.Tel
	}
	return ""
}

func (x *BindGuestAccount) GetVCode() string {
	if x != nil && x.VCode != nil {
		return *x.VCode
	}
	return ""
}

func (x *BindGuestAccount) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

func (x *BindGuestAccount) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 请求用户大厅信息
type RequestUserHallInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HDCode *string `protobuf:"bytes,1,req,name=HDCode" json:"HDCode,omitempty"` // 账号
	Cer    *string `protobuf:"bytes,2,req,name=Cer" json:"Cer,omitempty"`       // 用户证书
}

func (x *RequestUserHallInfo) Reset() {
	*x = RequestUserHallInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestUserHallInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestUserHallInfo) ProtoMessage() {}

func (x *RequestUserHallInfo) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestUserHallInfo.ProtoReflect.Descriptor instead.
func (*RequestUserHallInfo) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{24}
}

func (x *RequestUserHallInfo) GetHDCode() string {
	if x != nil && x.HDCode != nil {
		return *x.HDCode
	}
	return ""
}

func (x *RequestUserHallInfo) GetCer() string {
	if x != nil && x.Cer != nil {
		return *x.Cer
	}
	return ""
}

// 回复大厅用户信息
type ResUserHallInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       *int32  `protobuf:"varint,1,req,name=Code" json:"Code,omitempty"`
	Message    *string `protobuf:"bytes,2,req,name=Message" json:"Message,omitempty"`
	TotalMoney *int64  `protobuf:"varint,3,opt,name=total_money,json=totalMoney" json:"total_money,omitempty"` //总金额
}

func (x *ResUserHallInfo) Reset() {
	*x = ResUserHallInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResUserHallInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResUserHallInfo) ProtoMessage() {}

func (x *ResUserHallInfo) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResUserHallInfo.ProtoReflect.Descriptor instead.
func (*ResUserHallInfo) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{25}
}

func (x *ResUserHallInfo) GetCode() int32 {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return 0
}

func (x *ResUserHallInfo) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *ResUserHallInfo) GetTotalMoney() int64 {
	if x != nil && x.TotalMoney != nil {
		return *x.TotalMoney
	}
	return 0
}

// 找回账号密码信息
type FindSetPwdByPhone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tel      *string `protobuf:"bytes,1,req,name=Tel" json:"Tel,omitempty"`                      // 手机号码
	VCode    *string `protobuf:"bytes,2,req,name=VCode" json:"VCode,omitempty"`                  // 验证码
	Password *string `protobuf:"bytes,3,req,name=Password" json:"Password,omitempty"`            // 密码
	Area_ID  *int32  `protobuf:"varint,4,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *FindSetPwdByPhone) Reset() {
	*x = FindSetPwdByPhone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindSetPwdByPhone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindSetPwdByPhone) ProtoMessage() {}

func (x *FindSetPwdByPhone) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindSetPwdByPhone.ProtoReflect.Descriptor instead.
func (*FindSetPwdByPhone) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{26}
}

func (x *FindSetPwdByPhone) GetTel() string {
	if x != nil && x.Tel != nil {
		return *x.Tel
	}
	return ""
}

func (x *FindSetPwdByPhone) GetVCode() string {
	if x != nil && x.VCode != nil {
		return *x.VCode
	}
	return ""
}

func (x *FindSetPwdByPhone) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

func (x *FindSetPwdByPhone) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 修改银行密码
type ModifyBankPassword struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldPwd      *string `protobuf:"bytes,1,req,name=OldPwd" json:"OldPwd,omitempty"`                // 旧密码
	NewPassword *string `protobuf:"bytes,2,req,name=NewPassword" json:"NewPassword,omitempty"`      // 新密码
	Area_ID     *int32  `protobuf:"varint,3,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *ModifyBankPassword) Reset() {
	*x = ModifyBankPassword{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyBankPassword) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyBankPassword) ProtoMessage() {}

func (x *ModifyBankPassword) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyBankPassword.ProtoReflect.Descriptor instead.
func (*ModifyBankPassword) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{27}
}

func (x *ModifyBankPassword) GetOldPwd() string {
	if x != nil && x.OldPwd != nil {
		return *x.OldPwd
	}
	return ""
}

func (x *ModifyBankPassword) GetNewPassword() string {
	if x != nil && x.NewPassword != nil {
		return *x.NewPassword
	}
	return ""
}

func (x *ModifyBankPassword) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 找回银行密码信息
type FindSetBankPwdByPhone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VCode    *string `protobuf:"bytes,1,req,name=VCode" json:"VCode,omitempty"`                  // 验证码
	Password *string `protobuf:"bytes,2,req,name=Password" json:"Password,omitempty"`            // 密码
	Area_ID  *int32  `protobuf:"varint,3,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *FindSetBankPwdByPhone) Reset() {
	*x = FindSetBankPwdByPhone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindSetBankPwdByPhone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindSetBankPwdByPhone) ProtoMessage() {}

func (x *FindSetBankPwdByPhone) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindSetBankPwdByPhone.ProtoReflect.Descriptor instead.
func (*FindSetBankPwdByPhone) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{28}
}

func (x *FindSetBankPwdByPhone) GetVCode() string {
	if x != nil && x.VCode != nil {
		return *x.VCode
	}
	return ""
}

func (x *FindSetBankPwdByPhone) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

func (x *FindSetBankPwdByPhone) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

//邮件详情
type MailDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID       *int32  `protobuf:"varint,1,req,name=ID" json:"ID,omitempty"`                       //邮件ID
	Title    *string `protobuf:"bytes,2,req,name=Title" json:"Title,omitempty"`                  //邮件标题
	Content  *string `protobuf:"bytes,3,req,name=Content" json:"Content,omitempty"`              //邮件内容
	IsRead   *bool   `protobuf:"varint,4,req,name=IsRead" json:"IsRead,omitempty"`               //是否已读
	SendTime *string `protobuf:"bytes,5,req,name=SendTime" json:"SendTime,omitempty"`            //发送时间
	Area_ID  *int32  `protobuf:"varint,6,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *MailDetail) Reset() {
	*x = MailDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MailDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailDetail) ProtoMessage() {}

func (x *MailDetail) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MailDetail.ProtoReflect.Descriptor instead.
func (*MailDetail) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{29}
}

func (x *MailDetail) GetID() int32 {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return 0
}

func (x *MailDetail) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *MailDetail) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

func (x *MailDetail) GetIsRead() bool {
	if x != nil && x.IsRead != nil {
		return *x.IsRead
	}
	return false
}

func (x *MailDetail) GetSendTime() string {
	if x != nil && x.SendTime != nil {
		return *x.SendTime
	}
	return ""
}

func (x *MailDetail) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

//获取邮件列表
type MailList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MailList []*MailDetail `protobuf:"bytes,1,rep,name=MailList" json:"MailList,omitempty"`            // 邮件列表
	Area_ID  *int32        `protobuf:"varint,2,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *MailList) Reset() {
	*x = MailList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MailList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailList) ProtoMessage() {}

func (x *MailList) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MailList.ProtoReflect.Descriptor instead.
func (*MailList) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{30}
}

func (x *MailList) GetMailList() []*MailDetail {
	if x != nil {
		return x.MailList
	}
	return nil
}

func (x *MailList) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 获取邮件详情
type RequestMailDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID      *int32 `protobuf:"varint,1,req,name=ID" json:"ID,omitempty"`                       // 邮件ID
	Area_ID *int32 `protobuf:"varint,2,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *RequestMailDetail) Reset() {
	*x = RequestMailDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestMailDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestMailDetail) ProtoMessage() {}

func (x *RequestMailDetail) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestMailDetail.ProtoReflect.Descriptor instead.
func (*RequestMailDetail) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{31}
}

func (x *RequestMailDetail) GetID() int32 {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return 0
}

func (x *RequestMailDetail) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 发送联系客服问题
type ContactService struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg          *string `protobuf:"bytes,1,req,name=Msg" json:"Msg,omitempty"`
	QuestionType *int32  `protobuf:"varint,2,req,name=QuestionType" json:"QuestionType,omitempty"` // 0無分類, 1無法登錄, 2帳號異常, 3其他
	PlatformID   *int32  `protobuf:"varint,3,req,name=PlatformID" json:"PlatformID,omitempty"`
	AreaID       *int32  `protobuf:"varint,4,req,name=AreaID" json:"AreaID,omitempty"`
	Area_ID      *int32  `protobuf:"varint,5,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *ContactService) Reset() {
	*x = ContactService{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContactService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactService) ProtoMessage() {}

func (x *ContactService) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactService.ProtoReflect.Descriptor instead.
func (*ContactService) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{32}
}

func (x *ContactService) GetMsg() string {
	if x != nil && x.Msg != nil {
		return *x.Msg
	}
	return ""
}

func (x *ContactService) GetQuestionType() int32 {
	if x != nil && x.QuestionType != nil {
		return *x.QuestionType
	}
	return 0
}

func (x *ContactService) GetPlatformID() int32 {
	if x != nil && x.PlatformID != nil {
		return *x.PlatformID
	}
	return 0
}

func (x *ContactService) GetAreaID() int32 {
	if x != nil && x.AreaID != nil {
		return *x.AreaID
	}
	return 0
}

func (x *ContactService) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 代理详情
type AgentDeatil struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    *string `protobuf:"bytes,1,req,name=Name" json:"Name,omitempty"`                    // 代理名称
	WXNo    *string `protobuf:"bytes,2,req,name=WXNo" json:"WXNo,omitempty"`                    // 徽信号
	QQ      *string `protobuf:"bytes,3,req,name=QQ" json:"QQ,omitempty"`                        // QQ号
	Alipay  *string `protobuf:"bytes,4,opt,name=Alipay" json:"Alipay,omitempty"`                // Alipay号
	Jiuliao *string `protobuf:"bytes,5,opt,name=Jiuliao" json:"Jiuliao,omitempty"`              // 久聊
	Area_ID *int32  `protobuf:"varint,6,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *AgentDeatil) Reset() {
	*x = AgentDeatil{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentDeatil) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentDeatil) ProtoMessage() {}

func (x *AgentDeatil) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentDeatil.ProtoReflect.Descriptor instead.
func (*AgentDeatil) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{33}
}

func (x *AgentDeatil) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *AgentDeatil) GetWXNo() string {
	if x != nil && x.WXNo != nil {
		return *x.WXNo
	}
	return ""
}

func (x *AgentDeatil) GetQQ() string {
	if x != nil && x.QQ != nil {
		return *x.QQ
	}
	return ""
}

func (x *AgentDeatil) GetAlipay() string {
	if x != nil && x.Alipay != nil {
		return *x.Alipay
	}
	return ""
}

func (x *AgentDeatil) GetJiuliao() string {
	if x != nil && x.Jiuliao != nil {
		return *x.Jiuliao
	}
	return ""
}

func (x *AgentDeatil) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 代理列表
type AgentList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentList []*AgentDeatil `protobuf:"bytes,1,rep,name=AgentList" json:"AgentList,omitempty"`          // 代理列表
	Area_ID   *int32         `protobuf:"varint,2,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *AgentList) Reset() {
	*x = AgentList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentList) ProtoMessage() {}

func (x *AgentList) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentList.ProtoReflect.Descriptor instead.
func (*AgentList) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{34}
}

func (x *AgentList) GetAgentList() []*AgentDeatil {
	if x != nil {
		return x.AgentList
	}
	return nil
}

func (x *AgentList) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 举报代理信息
type ReportAgent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AreaID    *int32  `protobuf:"varint,1,req,name=AreaID" json:"AreaID,omitempty"`               // 渠道ID
	AgentName *string `protobuf:"bytes,2,req,name=AgentName" json:"AgentName,omitempty"`          // 代理名称
	Content   *string `protobuf:"bytes,3,req,name=Content" json:"Content,omitempty"`              // 举报内容
	Area_ID   *int32  `protobuf:"varint,4,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *ReportAgent) Reset() {
	*x = ReportAgent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportAgent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportAgent) ProtoMessage() {}

func (x *ReportAgent) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportAgent.ProtoReflect.Descriptor instead.
func (*ReportAgent) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{35}
}

func (x *ReportAgent) GetAreaID() int32 {
	if x != nil && x.AreaID != nil {
		return *x.AreaID
	}
	return 0
}

func (x *ReportAgent) GetAgentName() string {
	if x != nil && x.AgentName != nil {
		return *x.AgentName
	}
	return ""
}

func (x *ReportAgent) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

func (x *ReportAgent) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 请求代理信息
type RequestAgentList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AreaID  *int32 `protobuf:"varint,2,req,name=AreaID" json:"AreaID,omitempty"`               // 渠道ID
	Area_ID *int32 `protobuf:"varint,3,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *RequestAgentList) Reset() {
	*x = RequestAgentList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestAgentList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestAgentList) ProtoMessage() {}

func (x *RequestAgentList) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestAgentList.ProtoReflect.Descriptor instead.
func (*RequestAgentList) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{36}
}

func (x *RequestAgentList) GetAreaID() int32 {
	if x != nil && x.AreaID != nil {
		return *x.AreaID
	}
	return 0
}

func (x *RequestAgentList) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 代理招商
type ApplyAgent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AreaID  *int32  `protobuf:"varint,1,req,name=AreaID" json:"AreaID,omitempty"`               // 渠道ID
	Name    *string `protobuf:"bytes,2,req,name=Name" json:"Name,omitempty"`                    // 姓名
	Tel     *string `protobuf:"bytes,3,req,name=Tel" json:"Tel,omitempty"`                      // 电话
	QQ      *string `protobuf:"bytes,4,req,name=QQ" json:"QQ,omitempty"`                        // QQ号码
	WXNo    *string `protobuf:"bytes,5,req,name=WXNo" json:"WXNo,omitempty"`                    // WX号
	Memo    *string `protobuf:"bytes,6,req,name=Memo" json:"Memo,omitempty"`                    // 说明
	Alipay  *string `protobuf:"bytes,7,opt,name=Alipay" json:"Alipay,omitempty"`                // Alipay
	Area_ID *int32  `protobuf:"varint,8,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *ApplyAgent) Reset() {
	*x = ApplyAgent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyAgent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyAgent) ProtoMessage() {}

func (x *ApplyAgent) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyAgent.ProtoReflect.Descriptor instead.
func (*ApplyAgent) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{37}
}

func (x *ApplyAgent) GetAreaID() int32 {
	if x != nil && x.AreaID != nil {
		return *x.AreaID
	}
	return 0
}

func (x *ApplyAgent) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ApplyAgent) GetTel() string {
	if x != nil && x.Tel != nil {
		return *x.Tel
	}
	return ""
}

func (x *ApplyAgent) GetQQ() string {
	if x != nil && x.QQ != nil {
		return *x.QQ
	}
	return ""
}

func (x *ApplyAgent) GetWXNo() string {
	if x != nil && x.WXNo != nil {
		return *x.WXNo
	}
	return ""
}

func (x *ApplyAgent) GetMemo() string {
	if x != nil && x.Memo != nil {
		return *x.Memo
	}
	return ""
}

func (x *ApplyAgent) GetAlipay() string {
	if x != nil && x.Alipay != nil {
		return *x.Alipay
	}
	return ""
}

func (x *ApplyAgent) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 兑换金币信息
type ConvertMoney struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount      *int64 `protobuf:"varint,1,req,name=Amount" json:"Amount,omitempty"`               // 兑换数量,单位分
	ConvertType *int32 `protobuf:"varint,2,req,name=ConvertType" json:"ConvertType,omitempty"`     // 兌換方式,1.支付寶 2.銀行卡
	Area_ID     *int32 `protobuf:"varint,3,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *ConvertMoney) Reset() {
	*x = ConvertMoney{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConvertMoney) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConvertMoney) ProtoMessage() {}

func (x *ConvertMoney) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConvertMoney.ProtoReflect.Descriptor instead.
func (*ConvertMoney) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{38}
}

func (x *ConvertMoney) GetAmount() int64 {
	if x != nil && x.Amount != nil {
		return *x.Amount
	}
	return 0
}

func (x *ConvertMoney) GetConvertType() int32 {
	if x != nil && x.ConvertType != nil {
		return *x.ConvertType
	}
	return 0
}

func (x *ConvertMoney) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 创建充值订单请求信息
type CreatePayOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayTypeID *int32  `protobuf:"varint,1,req,name=PayTypeID" json:"PayTypeID,omitempty"`         // 充值类型 1.支付宝 2.微信 3.银联 4.QQ钱包
	Amount    *int64  `protobuf:"varint,2,req,name=Amount" json:"Amount,omitempty"`               // 充值数量,单位分
	Area_ID   *int32  `protobuf:"varint,3,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
	AccountID *int32  `protobuf:"varint,4,opt,name=AccountID" json:"AccountID,omitempty"`         // 线下帐户ID
	ChvPayer  *string `protobuf:"bytes,5,opt,name=ChvPayer" json:"ChvPayer,omitempty"`            // 付款人资讯
}

func (x *CreatePayOrder) Reset() {
	*x = CreatePayOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePayOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePayOrder) ProtoMessage() {}

func (x *CreatePayOrder) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePayOrder.ProtoReflect.Descriptor instead.
func (*CreatePayOrder) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{39}
}

func (x *CreatePayOrder) GetPayTypeID() int32 {
	if x != nil && x.PayTypeID != nil {
		return *x.PayTypeID
	}
	return 0
}

func (x *CreatePayOrder) GetAmount() int64 {
	if x != nil && x.Amount != nil {
		return *x.Amount
	}
	return 0
}

func (x *CreatePayOrder) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *CreatePayOrder) GetAccountID() int32 {
	if x != nil && x.AccountID != nil {
		return *x.AccountID
	}
	return 0
}

func (x *CreatePayOrder) GetChvPayer() string {
	if x != nil && x.ChvPayer != nil {
		return *x.ChvPayer
	}
	return ""
}

// 创建充值订单返回信息
type CreatePayOrderRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    *int32  `protobuf:"varint,1,req,name=code" json:"code,omitempty"`                   // 订单创建结果
	Message *string `protobuf:"bytes,2,req,name=message" json:"message,omitempty"`              // 返回消息
	OrderID *int32  `protobuf:"varint,3,req,name=OrderID" json:"OrderID,omitempty"`             // 订单编号
	Area_ID *int32  `protobuf:"varint,4,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *CreatePayOrderRet) Reset() {
	*x = CreatePayOrderRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePayOrderRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePayOrderRet) ProtoMessage() {}

func (x *CreatePayOrderRet) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePayOrderRet.ProtoReflect.Descriptor instead.
func (*CreatePayOrderRet) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{40}
}

func (x *CreatePayOrderRet) GetCode() int32 {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return 0
}

func (x *CreatePayOrderRet) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *CreatePayOrderRet) GetOrderID() int32 {
	if x != nil && x.OrderID != nil {
		return *x.OrderID
	}
	return 0
}

func (x *CreatePayOrderRet) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 获取FAQ信息
type GetFAQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlatformID *int32 `protobuf:"varint,1,req,name=PlatformID" json:"PlatformID,omitempty"`       // 平台ID
	Area_ID    *int32 `protobuf:"varint,2,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *GetFAQ) Reset() {
	*x = GetFAQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFAQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFAQ) ProtoMessage() {}

func (x *GetFAQ) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFAQ.ProtoReflect.Descriptor instead.
func (*GetFAQ) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{41}
}

func (x *GetFAQ) GetPlatformID() int32 {
	if x != nil && x.PlatformID != nil {
		return *x.PlatformID
	}
	return 0
}

func (x *GetFAQ) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// FAQ信息
type FAQDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content *string `protobuf:"bytes,1,req,name=Content" json:"Content,omitempty"`              // FAQ内容
	Area_ID *int32  `protobuf:"varint,2,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *FAQDetail) Reset() {
	*x = FAQDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FAQDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FAQDetail) ProtoMessage() {}

func (x *FAQDetail) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FAQDetail.ProtoReflect.Descriptor instead.
func (*FAQDetail) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{42}
}

func (x *FAQDetail) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

func (x *FAQDetail) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 查詢兌換記錄
type GetConvertLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TnyStatus *int32 `protobuf:"varint,1,req,name=TnyStatus" json:"TnyStatus,omitempty"` // 狀態
	// {0:"兑换完成",1:"审核中",2:"审核通过",3:"已打款",4:"订单异常",5:"异常帐号",6:"黑名单",7:"账户错误",8:"拒绝兑换",9:"疑似洗钱",10:"补单完成
	// ",11:"退还金币",99:"全部"};
	LogRange *int32 `protobuf:"varint,2,req,name=LogRange" json:"LogRange,omitempty"`           // 1(一周),2(半個月),3(一個月),4(三個月)
	Area_ID  *int32 `protobuf:"varint,3,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *GetConvertLog) Reset() {
	*x = GetConvertLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConvertLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConvertLog) ProtoMessage() {}

func (x *GetConvertLog) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConvertLog.ProtoReflect.Descriptor instead.
func (*GetConvertLog) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{43}
}

func (x *GetConvertLog) GetTnyStatus() int32 {
	if x != nil && x.TnyStatus != nil {
		return *x.TnyStatus
	}
	return 0
}

func (x *GetConvertLog) GetLogRange() int32 {
	if x != nil && x.LogRange != nil {
		return *x.LogRange
	}
	return 0
}

func (x *GetConvertLog) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 兌換記錄
type ConvertLogDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount     *int64  `protobuf:"varint,1,req,name=Amount" json:"Amount,omitempty"`               // 兌換金額,單位分
	TaxAmount  *int64  `protobuf:"varint,2,req,name=TaxAmount" json:"TaxAmount,omitempty"`         // 手續費,單位分
	Status     *int32  `protobuf:"varint,3,req,name=Status" json:"Status,omitempty"`               // 狀態
	Payment    *string `protobuf:"bytes,4,req,name=Payment" json:"Payment,omitempty"`              // 收款方式
	CreateTime *string `protobuf:"bytes,5,req,name=CreateTime" json:"CreateTime,omitempty"`        // 兌換時間
	Area_ID    *int32  `protobuf:"varint,6,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *ConvertLogDetail) Reset() {
	*x = ConvertLogDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConvertLogDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConvertLogDetail) ProtoMessage() {}

func (x *ConvertLogDetail) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConvertLogDetail.ProtoReflect.Descriptor instead.
func (*ConvertLogDetail) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{44}
}

func (x *ConvertLogDetail) GetAmount() int64 {
	if x != nil && x.Amount != nil {
		return *x.Amount
	}
	return 0
}

func (x *ConvertLogDetail) GetTaxAmount() int64 {
	if x != nil && x.TaxAmount != nil {
		return *x.TaxAmount
	}
	return 0
}

func (x *ConvertLogDetail) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *ConvertLogDetail) GetPayment() string {
	if x != nil && x.Payment != nil {
		return *x.Payment
	}
	return ""
}

func (x *ConvertLogDetail) GetCreateTime() string {
	if x != nil && x.CreateTime != nil {
		return *x.CreateTime
	}
	return ""
}

func (x *ConvertLogDetail) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 兌換記錄列表
type ConvertLogList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConvertLogList []*ConvertLogDetail `protobuf:"bytes,1,rep,name=ConvertLogList" json:"ConvertLogList,omitempty"` // 兌換記錄列表
	Area_ID        *int32              `protobuf:"varint,2,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"`  // 渠道ID
}

func (x *ConvertLogList) Reset() {
	*x = ConvertLogList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConvertLogList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConvertLogList) ProtoMessage() {}

func (x *ConvertLogList) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConvertLogList.ProtoReflect.Descriptor instead.
func (*ConvertLogList) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{45}
}

func (x *ConvertLogList) GetConvertLogList() []*ConvertLogDetail {
	if x != nil {
		return x.ConvertLogList
	}
	return nil
}

func (x *ConvertLogList) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 銀行資訊
type BankDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BankCode *string `protobuf:"bytes,1,req,name=BankCode" json:"BankCode,omitempty"`            // 銀行代碼
	BankName *string `protobuf:"bytes,2,req,name=BankName" json:"BankName,omitempty"`            // 銀行名稱
	Area_ID  *int32  `protobuf:"varint,3,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *BankDetail) Reset() {
	*x = BankDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BankDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BankDetail) ProtoMessage() {}

func (x *BankDetail) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BankDetail.ProtoReflect.Descriptor instead.
func (*BankDetail) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{46}
}

func (x *BankDetail) GetBankCode() string {
	if x != nil && x.BankCode != nil {
		return *x.BankCode
	}
	return ""
}

func (x *BankDetail) GetBankName() string {
	if x != nil && x.BankName != nil {
		return *x.BankName
	}
	return ""
}

func (x *BankDetail) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 銀行資訊列表
type BankList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BankList []*BankDetail `protobuf:"bytes,1,rep,name=BankList" json:"BankList,omitempty"`            // 銀行資訊列表
	Area_ID  *int32        `protobuf:"varint,2,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *BankList) Reset() {
	*x = BankList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BankList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BankList) ProtoMessage() {}

func (x *BankList) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BankList.ProtoReflect.Descriptor instead.
func (*BankList) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{47}
}

func (x *BankList) GetBankList() []*BankDetail {
	if x != nil {
		return x.BankList
	}
	return nil
}

func (x *BankList) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 登入獎勵
type LoginBonusData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoginTimes *int32 `protobuf:"varint,1,req,name=LoginTimes" json:"LoginTimes,omitempty"` // 己領取次數
	RetCode    *int32 `protobuf:"varint,2,req,name=RetCode" json:"RetCode,omitempty"`       // 領取代碼 0 本日己領取, 1 成功領取, 2可領取, -1 活動不存在, -2
	// 已領超過七次限制, -3 充值金額不足, -4 帳號未綁定
	RetMsg        *string `protobuf:"bytes,3,req,name=RetMsg" json:"RetMsg,omitempty"`                // 領取訊息
	CurrentAmount *int64  `protobuf:"varint,4,opt,name=CurrentAmount" json:"CurrentAmount,omitempty"` // 領取後用戶金幣數量
	GiftCash      *int64  `protobuf:"varint,5,opt,name=GiftCash" json:"GiftCash,omitempty"`           // 最低充值金額
	Area_ID       *int32  `protobuf:"varint,6,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
	BonusDayData  []int32 `protobuf:"varint,7,rep,name=BonusDayData" json:"BonusDayData,omitempty"`   //每日獎勵Array
}

func (x *LoginBonusData) Reset() {
	*x = LoginBonusData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginBonusData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginBonusData) ProtoMessage() {}

func (x *LoginBonusData) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginBonusData.ProtoReflect.Descriptor instead.
func (*LoginBonusData) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{48}
}

func (x *LoginBonusData) GetLoginTimes() int32 {
	if x != nil && x.LoginTimes != nil {
		return *x.LoginTimes
	}
	return 0
}

func (x *LoginBonusData) GetRetCode() int32 {
	if x != nil && x.RetCode != nil {
		return *x.RetCode
	}
	return 0
}

func (x *LoginBonusData) GetRetMsg() string {
	if x != nil && x.RetMsg != nil {
		return *x.RetMsg
	}
	return ""
}

func (x *LoginBonusData) GetCurrentAmount() int64 {
	if x != nil && x.CurrentAmount != nil {
		return *x.CurrentAmount
	}
	return 0
}

func (x *LoginBonusData) GetGiftCash() int64 {
	if x != nil && x.GiftCash != nil {
		return *x.GiftCash
	}
	return 0
}

func (x *LoginBonusData) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *LoginBonusData) GetBonusDayData() []int32 {
	if x != nil {
		return x.BonusDayData
	}
	return nil
}

// 取得代理資訊
type AgentData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID          *int32            `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`                  // 用戶ID
	RetCode         *int32            `protobuf:"varint,2,req,name=RetCode" json:"RetCode,omitempty"`                // 返回消息 0 代理, -1 非代理
	AgentDetailData *AgentDetailData  `protobuf:"bytes,3,req,name=AgentDetailData" json:"AgentDetailData,omitempty"` // 代理詳細資訊
	DownSteamList   []*AgentDownSteam `protobuf:"bytes,4,rep,name=DownSteamList" json:"DownSteamList,omitempty"`     // 代理下線資訊
	Area_ID         *int32            `protobuf:"varint,5,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"`    // 渠道ID
}

func (x *AgentData) Reset() {
	*x = AgentData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentData) ProtoMessage() {}

func (x *AgentData) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentData.ProtoReflect.Descriptor instead.
func (*AgentData) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{49}
}

func (x *AgentData) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *AgentData) GetRetCode() int32 {
	if x != nil && x.RetCode != nil {
		return *x.RetCode
	}
	return 0
}

func (x *AgentData) GetAgentDetailData() *AgentDetailData {
	if x != nil {
		return x.AgentDetailData
	}
	return nil
}

func (x *AgentData) GetDownSteamList() []*AgentDownSteam {
	if x != nil {
		return x.DownSteamList
	}
	return nil
}

func (x *AgentData) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 代理詳細資訊
type AgentDetailData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID        *int32  `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`                // 用戶ID
	Class         *int32  `protobuf:"varint,2,req,name=Class" json:"Class,omitempty"`                  // 階級( 0 系統管理者 1 一級代理  2 二級代理 99 一般玩家  100 渠道代理)
	Status        *int32  `protobuf:"varint,3,req,name=Status" json:"Status,omitempty"`                // 狀態( 0 關閉; 1 開啟 2 審核中)
	Level         *int32  `protobuf:"varint,4,req,name=Level" json:"Level,omitempty"`                  // 等級( 1 王者 2 黃金 3 鑽石)
	InviteCode    *string `protobuf:"bytes,5,req,name=InviteCode" json:"InviteCode,omitempty"`         // 代理邀請碼
	ParentUserID  *int32  `protobuf:"varint,6,req,name=ParentUserID" json:"ParentUserID,omitempty"`    // 上級代理ID
	TotalFlows    *int32  `protobuf:"varint,7,req,name=TotalFlows" json:"TotalFlows,omitempty"`        // 總流水
	TotalIncome   *int32  `protobuf:"varint,8,req,name=TotalIncome" json:"TotalIncome,omitempty"`      // 總收入
	RemainAmount  *int32  `protobuf:"varint,9,req,name=RemainAmount" json:"RemainAmount,omitempty"`    // 提領後剩餘可提領金額
	CanBeAgent    *int32  `protobuf:"varint,10,req,name=CanBeAgent" json:"CanBeAgent,omitempty"`       // 是否可成為代理 0不行 1可以
	OfficeUser1   *string `protobuf:"bytes,11,req,name=OfficeUser1" json:"OfficeUser1,omitempty"`      // 1號諮詢專員
	ParentWeixin  *string `protobuf:"bytes,12,req,name=ParentWeixin" json:"ParentWeixin,omitempty"`    // 上級的微信號
	DownloadURL   *string `protobuf:"bytes,13,req,name=DownloadURL" json:"DownloadURL,omitempty"`      // 上級的URL
	CurrentIncome *int32  `protobuf:"varint,14,req,name=CurrentIncome" json:"CurrentIncome,omitempty"` // 總收入
	OfficeUser2   *string `protobuf:"bytes,15,req,name=OfficeUser2" json:"OfficeUser2,omitempty"`      // 2號諮詢專員
	OfficeUser3   *string `protobuf:"bytes,16,req,name=OfficeUser3" json:"OfficeUser3,omitempty"`      // 3號諮詢專員
	QRUrl         *string `protobuf:"bytes,17,req,name=QRUrl" json:"QRUrl,omitempty"`                  // 二維碼地址
	User1Type     *int32  `protobuf:"varint,18,req,name=User1Type" json:"User1Type,omitempty"`         // 客服代理類別1
	User2Type     *int32  `protobuf:"varint,19,req,name=User2Type" json:"User2Type,omitempty"`         // 客服代理類別2
	User3Type     *int32  `protobuf:"varint,20,req,name=User3Type" json:"User3Type,omitempty"`         // 客服代理類別3
	Area_ID       *int32  `protobuf:"varint,21,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *AgentDetailData) Reset() {
	*x = AgentDetailData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentDetailData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentDetailData) ProtoMessage() {}

func (x *AgentDetailData) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentDetailData.ProtoReflect.Descriptor instead.
func (*AgentDetailData) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{50}
}

func (x *AgentDetailData) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *AgentDetailData) GetClass() int32 {
	if x != nil && x.Class != nil {
		return *x.Class
	}
	return 0
}

func (x *AgentDetailData) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *AgentDetailData) GetLevel() int32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

func (x *AgentDetailData) GetInviteCode() string {
	if x != nil && x.InviteCode != nil {
		return *x.InviteCode
	}
	return ""
}

func (x *AgentDetailData) GetParentUserID() int32 {
	if x != nil && x.ParentUserID != nil {
		return *x.ParentUserID
	}
	return 0
}

func (x *AgentDetailData) GetTotalFlows() int32 {
	if x != nil && x.TotalFlows != nil {
		return *x.TotalFlows
	}
	return 0
}

func (x *AgentDetailData) GetTotalIncome() int32 {
	if x != nil && x.TotalIncome != nil {
		return *x.TotalIncome
	}
	return 0
}

func (x *AgentDetailData) GetRemainAmount() int32 {
	if x != nil && x.RemainAmount != nil {
		return *x.RemainAmount
	}
	return 0
}

func (x *AgentDetailData) GetCanBeAgent() int32 {
	if x != nil && x.CanBeAgent != nil {
		return *x.CanBeAgent
	}
	return 0
}

func (x *AgentDetailData) GetOfficeUser1() string {
	if x != nil && x.OfficeUser1 != nil {
		return *x.OfficeUser1
	}
	return ""
}

func (x *AgentDetailData) GetParentWeixin() string {
	if x != nil && x.ParentWeixin != nil {
		return *x.ParentWeixin
	}
	return ""
}

func (x *AgentDetailData) GetDownloadURL() string {
	if x != nil && x.DownloadURL != nil {
		return *x.DownloadURL
	}
	return ""
}

func (x *AgentDetailData) GetCurrentIncome() int32 {
	if x != nil && x.CurrentIncome != nil {
		return *x.CurrentIncome
	}
	return 0
}

func (x *AgentDetailData) GetOfficeUser2() string {
	if x != nil && x.OfficeUser2 != nil {
		return *x.OfficeUser2
	}
	return ""
}

func (x *AgentDetailData) GetOfficeUser3() string {
	if x != nil && x.OfficeUser3 != nil {
		return *x.OfficeUser3
	}
	return ""
}

func (x *AgentDetailData) GetQRUrl() string {
	if x != nil && x.QRUrl != nil {
		return *x.QRUrl
	}
	return ""
}

func (x *AgentDetailData) GetUser1Type() int32 {
	if x != nil && x.User1Type != nil {
		return *x.User1Type
	}
	return 0
}

func (x *AgentDetailData) GetUser2Type() int32 {
	if x != nil && x.User2Type != nil {
		return *x.User2Type
	}
	return 0
}

func (x *AgentDetailData) GetUser3Type() int32 {
	if x != nil && x.User3Type != nil {
		return *x.User3Type
	}
	return 0
}

func (x *AgentDetailData) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 代理下線資訊
type AgentDownSteam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID    *int32 `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`               // 用戶ID
	Yesterday *int32 `protobuf:"varint,2,req,name=Yesterday" json:"Yesterday,omitempty"`         // 昨日流水
	Today     *int32 `protobuf:"varint,3,req,name=Today" json:"Today,omitempty"`                 // 今日流水
	Area_ID   *int32 `protobuf:"varint,4,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *AgentDownSteam) Reset() {
	*x = AgentDownSteam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentDownSteam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentDownSteam) ProtoMessage() {}

func (x *AgentDownSteam) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentDownSteam.ProtoReflect.Descriptor instead.
func (*AgentDownSteam) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{51}
}

func (x *AgentDownSteam) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *AgentDownSteam) GetYesterday() int32 {
	if x != nil && x.Yesterday != nil {
		return *x.Yesterday
	}
	return 0
}

func (x *AgentDownSteam) GetToday() int32 {
	if x != nil && x.Today != nil {
		return *x.Today
	}
	return 0
}

func (x *AgentDownSteam) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 申請代理下線
type JoinAgentList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID     *int32  `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`               // 用戶ID
	InviteCode *string `protobuf:"bytes,2,req,name=InviteCode" json:"InviteCode,omitempty"`        // 邀請碼
	RetCode    *int32  `protobuf:"varint,3,req,name=RetCode" json:"RetCode,omitempty"`             // 返回消息 1 成功, -1 失敗(邀請碼錯誤或是代理已綁定)
	RetMsg     *string `protobuf:"bytes,4,req,name=RetMsg" json:"RetMsg,omitempty"`                // 結果狀態
	Area_ID    *int32  `protobuf:"varint,5,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *JoinAgentList) Reset() {
	*x = JoinAgentList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinAgentList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinAgentList) ProtoMessage() {}

func (x *JoinAgentList) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinAgentList.ProtoReflect.Descriptor instead.
func (*JoinAgentList) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{52}
}

func (x *JoinAgentList) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *JoinAgentList) GetInviteCode() string {
	if x != nil && x.InviteCode != nil {
		return *x.InviteCode
	}
	return ""
}

func (x *JoinAgentList) GetRetCode() int32 {
	if x != nil && x.RetCode != nil {
		return *x.RetCode
	}
	return 0
}

func (x *JoinAgentList) GetRetMsg() string {
	if x != nil && x.RetMsg != nil {
		return *x.RetMsg
	}
	return ""
}

func (x *JoinAgentList) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 申請成為代理
type ApplyAgentList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID  *int32  `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`               // 用戶ID
	RetCode *int32  `protobuf:"varint,2,req,name=RetCode" json:"RetCode,omitempty"`             // 返回消息 1 成功, -1 失敗(邀請碼錯誤或是代理已綁定)
	RetMsg  *string `protobuf:"bytes,3,req,name=RetMsg" json:"RetMsg,omitempty"`                // 結果狀態
	Area_ID *int32  `protobuf:"varint,4,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *ApplyAgentList) Reset() {
	*x = ApplyAgentList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyAgentList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyAgentList) ProtoMessage() {}

func (x *ApplyAgentList) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyAgentList.ProtoReflect.Descriptor instead.
func (*ApplyAgentList) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{53}
}

func (x *ApplyAgentList) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *ApplyAgentList) GetRetCode() int32 {
	if x != nil && x.RetCode != nil {
		return *x.RetCode
	}
	return 0
}

func (x *ApplyAgentList) GetRetMsg() string {
	if x != nil && x.RetMsg != nil {
		return *x.RetMsg
	}
	return ""
}

func (x *ApplyAgentList) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 未讀客服消息數量
type CSNotiftyCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID  *int32 `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`               // 用戶ID
	Count   *int32 `protobuf:"varint,2,req,name=Count" json:"Count,omitempty"`                 // 未讀數量
	Area_ID *int32 `protobuf:"varint,3,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *CSNotiftyCount) Reset() {
	*x = CSNotiftyCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSNotiftyCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSNotiftyCount) ProtoMessage() {}

func (x *CSNotiftyCount) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSNotiftyCount.ProtoReflect.Descriptor instead.
func (*CSNotiftyCount) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{54}
}

func (x *CSNotiftyCount) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *CSNotiftyCount) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *CSNotiftyCount) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 申請成為代理
type RequestApplyAgent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID  *int32  `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`               // 用戶ID
	Tel     *string `protobuf:"bytes,2,req,name=Tel" json:"Tel,omitempty"`                      // 用戶電話
	Weixin  *string `protobuf:"bytes,3,req,name=Weixin" json:"Weixin,omitempty"`                // 用戶微信
	QQ      *string `protobuf:"bytes,4,opt,name=QQ" json:"QQ,omitempty"`                        // 用戶QQ號
	Email   *string `protobuf:"bytes,5,opt,name=Email" json:"Email,omitempty"`                  // 用戶信箱
	VCode   *string `protobuf:"bytes,6,req,name=VCode" json:"VCode,omitempty"`                  // 邀請碼
	Area_ID *int32  `protobuf:"varint,7,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *RequestApplyAgent) Reset() {
	*x = RequestApplyAgent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestApplyAgent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestApplyAgent) ProtoMessage() {}

func (x *RequestApplyAgent) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestApplyAgent.ProtoReflect.Descriptor instead.
func (*RequestApplyAgent) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{55}
}

func (x *RequestApplyAgent) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *RequestApplyAgent) GetTel() string {
	if x != nil && x.Tel != nil {
		return *x.Tel
	}
	return ""
}

func (x *RequestApplyAgent) GetWeixin() string {
	if x != nil && x.Weixin != nil {
		return *x.Weixin
	}
	return ""
}

func (x *RequestApplyAgent) GetQQ() string {
	if x != nil && x.QQ != nil {
		return *x.QQ
	}
	return ""
}

func (x *RequestApplyAgent) GetEmail() string {
	if x != nil && x.Email != nil {
		return *x.Email
	}
	return ""
}

func (x *RequestApplyAgent) GetVCode() string {
	if x != nil && x.VCode != nil {
		return *x.VCode
	}
	return ""
}

func (x *RequestApplyAgent) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 代理訪問資料傳遞
type ProxyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    *string `protobuf:"bytes,1,req,name=data" json:"data,omitempty"`
	Type    *string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Area_ID *int32  `protobuf:"varint,3,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *ProxyData) Reset() {
	*x = ProxyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyData) ProtoMessage() {}

func (x *ProxyData) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyData.ProtoReflect.Descriptor instead.
func (*ProxyData) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{56}
}

func (x *ProxyData) GetData() string {
	if x != nil && x.Data != nil {
		return *x.Data
	}
	return ""
}

func (x *ProxyData) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *ProxyData) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 代理訪問POST資料傳遞
type ProxyPOSTData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url      *string `protobuf:"bytes,1,req,name=Url" json:"Url,omitempty"`
	HtmlData *string `protobuf:"bytes,2,req,name=HtmlData" json:"HtmlData,omitempty"`
	Area_ID  *int32  `protobuf:"varint,3,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
	Type     *string `protobuf:"bytes,4,opt,name=type" json:"type,omitempty"`
}

func (x *ProxyPOSTData) Reset() {
	*x = ProxyPOSTData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyPOSTData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyPOSTData) ProtoMessage() {}

func (x *ProxyPOSTData) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyPOSTData.ProtoReflect.Descriptor instead.
func (*ProxyPOSTData) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{57}
}

func (x *ProxyPOSTData) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *ProxyPOSTData) GetHtmlData() string {
	if x != nil && x.HtmlData != nil {
		return *x.HtmlData
	}
	return ""
}

func (x *ProxyPOSTData) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *ProxyPOSTData) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

// 查詢比賽活動公告
type GetGameCompetitionMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameID  *int32 `protobuf:"varint,1,req,name=GameID" json:"GameID,omitempty"`
	FlagID  *int32 `protobuf:"varint,2,req,name=FlagID" json:"FlagID,omitempty"`
	UserID  *int32 `protobuf:"varint,3,opt,name=UserID" json:"UserID,omitempty"`
	Area_ID *int32 `protobuf:"varint,4,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *GetGameCompetitionMsg) Reset() {
	*x = GetGameCompetitionMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGameCompetitionMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameCompetitionMsg) ProtoMessage() {}

func (x *GetGameCompetitionMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameCompetitionMsg.ProtoReflect.Descriptor instead.
func (*GetGameCompetitionMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{58}
}

func (x *GetGameCompetitionMsg) GetGameID() int32 {
	if x != nil && x.GameID != nil {
		return *x.GameID
	}
	return 0
}

func (x *GetGameCompetitionMsg) GetFlagID() int32 {
	if x != nil && x.FlagID != nil {
		return *x.FlagID
	}
	return 0
}

func (x *GetGameCompetitionMsg) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *GetGameCompetitionMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 回傳比賽活動公告
type GameCompetitionMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Leaderboard []*LeaderboardDetail `protobuf:"bytes,1,rep,name=Leaderboard" json:"Leaderboard,omitempty"` // 排行榜
	UserID      *int32               `protobuf:"varint,2,req,name=UserID" json:"UserID,omitempty"`
	BestScore   *int32               `protobuf:"varint,3,req,name=BestScore" json:"BestScore,omitempty"`         // 最好的一次分數
	FreeTimes   *int32               `protobuf:"varint,4,opt,name=FreeTimes" json:"FreeTimes,omitempty"`         // 免費次數
	UserRanking *int32               `protobuf:"varint,5,req,name=UserRanking" json:"UserRanking,omitempty"`     // 目前排名
	MsgInfo     []string             `protobuf:"bytes,6,rep,name=MsgInfo" json:"MsgInfo,omitempty"`              // 公告訊息
	Charge      *int32               `protobuf:"varint,7,opt,name=Charge" json:"Charge,omitempty"`               // 入場費
	PiSaiTime   *int32               `protobuf:"varint,8,opt,name=PiSaiTime" json:"PiSaiTime,omitempty"`         // 比賽剩餘時間
	Area_ID     *int32               `protobuf:"varint,9,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *GameCompetitionMsg) Reset() {
	*x = GameCompetitionMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameCompetitionMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameCompetitionMsg) ProtoMessage() {}

func (x *GameCompetitionMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameCompetitionMsg.ProtoReflect.Descriptor instead.
func (*GameCompetitionMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{59}
}

func (x *GameCompetitionMsg) GetLeaderboard() []*LeaderboardDetail {
	if x != nil {
		return x.Leaderboard
	}
	return nil
}

func (x *GameCompetitionMsg) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *GameCompetitionMsg) GetBestScore() int32 {
	if x != nil && x.BestScore != nil {
		return *x.BestScore
	}
	return 0
}

func (x *GameCompetitionMsg) GetFreeTimes() int32 {
	if x != nil && x.FreeTimes != nil {
		return *x.FreeTimes
	}
	return 0
}

func (x *GameCompetitionMsg) GetUserRanking() int32 {
	if x != nil && x.UserRanking != nil {
		return *x.UserRanking
	}
	return 0
}

func (x *GameCompetitionMsg) GetMsgInfo() []string {
	if x != nil {
		return x.MsgInfo
	}
	return nil
}

func (x *GameCompetitionMsg) GetCharge() int32 {
	if x != nil && x.Charge != nil {
		return *x.Charge
	}
	return 0
}

func (x *GameCompetitionMsg) GetPiSaiTime() int32 {
	if x != nil && x.PiSaiTime != nil {
		return *x.PiSaiTime
	}
	return 0
}

func (x *GameCompetitionMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 排行榜
type LeaderboardDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TitleName       *string           `protobuf:"bytes,1,req,name=TitleName" json:"TitleName,omitempty"`             // 頁籤名稱
	LeaderboardList []*ScoreboardList `protobuf:"bytes,2,rep,name=LeaderboardList" json:"LeaderboardList,omitempty"` // 分數排名詳細資料
	Area_ID         *int32            `protobuf:"varint,3,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"`    // 渠道ID
}

func (x *LeaderboardDetail) Reset() {
	*x = LeaderboardDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaderboardDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaderboardDetail) ProtoMessage() {}

func (x *LeaderboardDetail) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaderboardDetail.ProtoReflect.Descriptor instead.
func (*LeaderboardDetail) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{60}
}

func (x *LeaderboardDetail) GetTitleName() string {
	if x != nil && x.TitleName != nil {
		return *x.TitleName
	}
	return ""
}

func (x *LeaderboardDetail) GetLeaderboardList() []*ScoreboardList {
	if x != nil {
		return x.LeaderboardList
	}
	return nil
}

func (x *LeaderboardDetail) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 分數排名詳細資料
type ScoreboardList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SortID  *int32  `protobuf:"varint,1,req,name=SortID" json:"SortID,omitempty"` // 排名
	UserID  *string `protobuf:"bytes,2,req,name=UserID" json:"UserID,omitempty"`
	Score   *int32  `protobuf:"varint,3,req,name=Score" json:"Score,omitempty"`                 // 比賽分數
	Area_ID *int32  `protobuf:"varint,4,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *ScoreboardList) Reset() {
	*x = ScoreboardList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScoreboardList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScoreboardList) ProtoMessage() {}

func (x *ScoreboardList) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScoreboardList.ProtoReflect.Descriptor instead.
func (*ScoreboardList) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{61}
}

func (x *ScoreboardList) GetSortID() int32 {
	if x != nil && x.SortID != nil {
		return *x.SortID
	}
	return 0
}

func (x *ScoreboardList) GetUserID() string {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return ""
}

func (x *ScoreboardList) GetScore() int32 {
	if x != nil && x.Score != nil {
		return *x.Score
	}
	return 0
}

func (x *ScoreboardList) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 查詢比賽規則 GetGameCompetitionMsg
type GetGameCompetitionRuleMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameID  *int32 `protobuf:"varint,1,req,name=GameID" json:"GameID,omitempty"`
	Area_ID *int32 `protobuf:"varint,2,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *GetGameCompetitionRuleMsg) Reset() {
	*x = GetGameCompetitionRuleMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGameCompetitionRuleMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameCompetitionRuleMsg) ProtoMessage() {}

func (x *GetGameCompetitionRuleMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameCompetitionRuleMsg.ProtoReflect.Descriptor instead.
func (*GetGameCompetitionRuleMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{62}
}

func (x *GetGameCompetitionRuleMsg) GetGameID() int32 {
	if x != nil && x.GameID != nil {
		return *x.GameID
	}
	return 0
}

func (x *GetGameCompetitionRuleMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 回傳比賽規則
type GameCompetitionRuleMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Charge      *int32            `protobuf:"varint,1,req,name=Charge" json:"Charge,omitempty"`                // 入場費用
	PlayTime    *int32            `protobuf:"varint,2,req,name=PlayTime" json:"PlayTime,omitempty"`            // 限定的時間(s)
	Coin        *int32            `protobuf:"varint,3,req,name=Coin" json:"Coin,omitempty"`                    // 固定比賽幣
	OrderTicket []*OrderTicketMsg `protobuf:"bytes,4,rep,name=OrderTicket" json:"OrderTicket,omitempty"`       // 充值金額對應免費次數
	RewardInfo  []*RewardDetail   `protobuf:"bytes,5,rep,name=RewardInfo" json:"RewardInfo,omitempty"`         // 每日和每周獎勵與時間
	StartTime   *string           `protobuf:"bytes,6,req,name=StartTime" json:"StartTime,omitempty"`           // 開始時間
	EndTime     *string           `protobuf:"bytes,7,req,name=EndTime" json:"EndTime,omitempty"`               // 結束時間
	Show        *int32            `protobuf:"varint,8,req,name=Show" json:"Show,omitempty"`                    // 0關閉 1顯示
	EnterTime   *string           `protobuf:"bytes,9,req,name=EnterTime" json:"EnterTime,omitempty"`           // 最後進入時間
	ContestID   *int32            `protobuf:"varint,10,req,name=ContestID" json:"ContestID,omitempty"`         // 比賽活動ID
	Area_ID     *int32            `protobuf:"varint,11,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *GameCompetitionRuleMsg) Reset() {
	*x = GameCompetitionRuleMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameCompetitionRuleMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameCompetitionRuleMsg) ProtoMessage() {}

func (x *GameCompetitionRuleMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameCompetitionRuleMsg.ProtoReflect.Descriptor instead.
func (*GameCompetitionRuleMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{63}
}

func (x *GameCompetitionRuleMsg) GetCharge() int32 {
	if x != nil && x.Charge != nil {
		return *x.Charge
	}
	return 0
}

func (x *GameCompetitionRuleMsg) GetPlayTime() int32 {
	if x != nil && x.PlayTime != nil {
		return *x.PlayTime
	}
	return 0
}

func (x *GameCompetitionRuleMsg) GetCoin() int32 {
	if x != nil && x.Coin != nil {
		return *x.Coin
	}
	return 0
}

func (x *GameCompetitionRuleMsg) GetOrderTicket() []*OrderTicketMsg {
	if x != nil {
		return x.OrderTicket
	}
	return nil
}

func (x *GameCompetitionRuleMsg) GetRewardInfo() []*RewardDetail {
	if x != nil {
		return x.RewardInfo
	}
	return nil
}

func (x *GameCompetitionRuleMsg) GetStartTime() string {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return ""
}

func (x *GameCompetitionRuleMsg) GetEndTime() string {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return ""
}

func (x *GameCompetitionRuleMsg) GetShow() int32 {
	if x != nil && x.Show != nil {
		return *x.Show
	}
	return 0
}

func (x *GameCompetitionRuleMsg) GetEnterTime() string {
	if x != nil && x.EnterTime != nil {
		return *x.EnterTime
	}
	return ""
}

func (x *GameCompetitionRuleMsg) GetContestID() int32 {
	if x != nil && x.ContestID != nil {
		return *x.ContestID
	}
	return 0
}

func (x *GameCompetitionRuleMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 每日和每周獎勵與時間
type RewardDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     *int32  `protobuf:"varint,1,req,name=Type" json:"Type,omitempty"`                   // 1每日 2每周
	Bonus    []int32 `protobuf:"varint,2,rep,name=Bonus" json:"Bonus,omitempty"`                 // 排名的獎勵
	DeadLine *string `protobuf:"bytes,3,req,name=DeadLine" json:"DeadLine,omitempty"`            // 截止時間
	Area_ID  *int32  `protobuf:"varint,4,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *RewardDetail) Reset() {
	*x = RewardDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RewardDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewardDetail) ProtoMessage() {}

func (x *RewardDetail) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RewardDetail.ProtoReflect.Descriptor instead.
func (*RewardDetail) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{64}
}

func (x *RewardDetail) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *RewardDetail) GetBonus() []int32 {
	if x != nil {
		return x.Bonus
	}
	return nil
}

func (x *RewardDetail) GetDeadLine() string {
	if x != nil && x.DeadLine != nil {
		return *x.DeadLine
	}
	return ""
}

func (x *RewardDetail) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 充值金額對應免費次數
type OrderTicketMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         *int32 `protobuf:"varint,1,req,name=ID" json:"ID,omitempty"`                       // id
	OrderReach *int32 `protobuf:"varint,2,req,name=OrderReach" json:"OrderReach,omitempty"`       // 充值金額
	FreeTicket *int32 `protobuf:"varint,3,req,name=FreeTicket" json:"FreeTicket,omitempty"`       // 免費次數
	Area_ID    *int32 `protobuf:"varint,4,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *OrderTicketMsg) Reset() {
	*x = OrderTicketMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderTicketMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderTicketMsg) ProtoMessage() {}

func (x *OrderTicketMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderTicketMsg.ProtoReflect.Descriptor instead.
func (*OrderTicketMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{65}
}

func (x *OrderTicketMsg) GetID() int32 {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return 0
}

func (x *OrderTicketMsg) GetOrderReach() int32 {
	if x != nil && x.OrderReach != nil {
		return *x.OrderReach
	}
	return 0
}

func (x *OrderTicketMsg) GetFreeTicket() int32 {
	if x != nil && x.FreeTicket != nil {
		return *x.FreeTicket
	}
	return 0
}

func (x *OrderTicketMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 更新推播序號
type ClientUpdateUserNotifyIdx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Idx     *int64 `protobuf:"varint,1,req,name=Idx" json:"Idx,omitempty"`
	Area_ID *int32 `protobuf:"varint,2,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *ClientUpdateUserNotifyIdx) Reset() {
	*x = ClientUpdateUserNotifyIdx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientUpdateUserNotifyIdx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientUpdateUserNotifyIdx) ProtoMessage() {}

func (x *ClientUpdateUserNotifyIdx) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientUpdateUserNotifyIdx.ProtoReflect.Descriptor instead.
func (*ClientUpdateUserNotifyIdx) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{66}
}

func (x *ClientUpdateUserNotifyIdx) GetIdx() int64 {
	if x != nil && x.Idx != nil {
		return *x.Idx
	}
	return 0
}

func (x *ClientUpdateUserNotifyIdx) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 查詢買票入場
type GetBuyTicketMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameID  *int32 `protobuf:"varint,1,req,name=GameID" json:"GameID,omitempty"`
	FlagID  *int32 `protobuf:"varint,2,req,name=FlagID" json:"FlagID,omitempty"`
	UserID  *int32 `protobuf:"varint,3,opt,name=UserID" json:"UserID,omitempty"`
	Area_ID *int32 `protobuf:"varint,4,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *GetBuyTicketMsg) Reset() {
	*x = GetBuyTicketMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBuyTicketMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBuyTicketMsg) ProtoMessage() {}

func (x *GetBuyTicketMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBuyTicketMsg.ProtoReflect.Descriptor instead.
func (*GetBuyTicketMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{67}
}

func (x *GetBuyTicketMsg) GetGameID() int32 {
	if x != nil && x.GameID != nil {
		return *x.GameID
	}
	return 0
}

func (x *GetBuyTicketMsg) GetFlagID() int32 {
	if x != nil && x.FlagID != nil {
		return *x.FlagID
	}
	return 0
}

func (x *GetBuyTicketMsg) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *GetBuyTicketMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 回傳買票入場
type BuyTicketMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode *int32  `protobuf:"varint,2,req,name=RetCode" json:"RetCode,omitempty"`             // 返回消息 1 成功, -1 失敗(邀請碼錯誤或是代理已綁定)
	RetMsg  *string `protobuf:"bytes,3,req,name=RetMsg" json:"RetMsg,omitempty"`                // 結果狀態
	Area_ID *int32  `protobuf:"varint,4,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *BuyTicketMsg) Reset() {
	*x = BuyTicketMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyTicketMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyTicketMsg) ProtoMessage() {}

func (x *BuyTicketMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyTicketMsg.ProtoReflect.Descriptor instead.
func (*BuyTicketMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{68}
}

func (x *BuyTicketMsg) GetRetCode() int32 {
	if x != nil && x.RetCode != nil {
		return *x.RetCode
	}
	return 0
}

func (x *BuyTicketMsg) GetRetMsg() string {
	if x != nil && x.RetMsg != nil {
		return *x.RetMsg
	}
	return ""
}

func (x *BuyTicketMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 回傳獎金池
type JackpotPoolRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount  *int64 `protobuf:"varint,1,req,name=amount" json:"amount,omitempty"`               // 獎金
	Area_ID *int32 `protobuf:"varint,2,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *JackpotPoolRet) Reset() {
	*x = JackpotPoolRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JackpotPoolRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JackpotPoolRet) ProtoMessage() {}

func (x *JackpotPoolRet) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JackpotPoolRet.ProtoReflect.Descriptor instead.
func (*JackpotPoolRet) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{69}
}

func (x *JackpotPoolRet) GetAmount() int64 {
	if x != nil && x.Amount != nil {
		return *x.Amount
	}
	return 0
}

func (x *JackpotPoolRet) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 查詢全民代理QRCode
type GetUserQRCodeMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID  *int32 `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`
	Area_ID *int32 `protobuf:"varint,2,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *GetUserQRCodeMsg) Reset() {
	*x = GetUserQRCodeMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserQRCodeMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserQRCodeMsg) ProtoMessage() {}

func (x *GetUserQRCodeMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserQRCodeMsg.ProtoReflect.Descriptor instead.
func (*GetUserQRCodeMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{70}
}

func (x *GetUserQRCodeMsg) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *GetUserQRCodeMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 回傳全民代理QRCode
type GetUserQRCodeRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID      *int32  `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`
	QRCode      *string `protobuf:"bytes,2,req,name=QRCode" json:"QRCode,omitempty"`
	InviteCode  *string `protobuf:"bytes,3,opt,name=InviteCode" json:"InviteCode,omitempty"`
	UpperUserID *int32  `protobuf:"varint,4,opt,name=UpperUserID" json:"UpperUserID,omitempty"`
}

func (x *GetUserQRCodeRet) Reset() {
	*x = GetUserQRCodeRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserQRCodeRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserQRCodeRet) ProtoMessage() {}

func (x *GetUserQRCodeRet) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserQRCodeRet.ProtoReflect.Descriptor instead.
func (*GetUserQRCodeRet) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{71}
}

func (x *GetUserQRCodeRet) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *GetUserQRCodeRet) GetQRCode() string {
	if x != nil && x.QRCode != nil {
		return *x.QRCode
	}
	return ""
}

func (x *GetUserQRCodeRet) GetInviteCode() string {
	if x != nil && x.InviteCode != nil {
		return *x.InviteCode
	}
	return ""
}

func (x *GetUserQRCodeRet) GetUpperUserID() int32 {
	if x != nil && x.UpperUserID != nil {
		return *x.UpperUserID
	}
	return 0
}

// 查詢推廣員Agent Exec
type GetUserAgentExecMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID  *int32 `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`
	Area_ID *int32 `protobuf:"varint,2,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *GetUserAgentExecMsg) Reset() {
	*x = GetUserAgentExecMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserAgentExecMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAgentExecMsg) ProtoMessage() {}

func (x *GetUserAgentExecMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAgentExecMsg.ProtoReflect.Descriptor instead.
func (*GetUserAgentExecMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{72}
}

func (x *GetUserAgentExecMsg) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *GetUserAgentExecMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 回傳推廣員Agent Exec
type GetUserAgentExecRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentAmount     *int32 `protobuf:"varint,1,req,name=AgentAmount" json:"AgentAmount,omitempty"`         // 需升級收益
	AgentUserAmount *int32 `protobuf:"varint,2,req,name=AgentUserAmount" json:"AgentUserAmount,omitempty"` // 收益
	AgentLevel      *int32 `protobuf:"varint,3,req,name=AgentLevel" json:"AgentLevel,omitempty"`           // 推廣等級
	AgentTaxAmount  *int32 `protobuf:"varint,4,req,name=AgentTaxAmount" json:"AgentTaxAmount,omitempty"`   // 今日稅收
	AgentTaxBonus   *int32 `protobuf:"varint,5,req,name=AgentTaxBonus" json:"AgentTaxBonus,omitempty"`     // 今日收益
	AgentTotalUser  *int32 `protobuf:"varint,6,req,name=AgentTotalUser" json:"AgentTotalUser,omitempty"`   // 推廣人數
}

func (x *GetUserAgentExecRet) Reset() {
	*x = GetUserAgentExecRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserAgentExecRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAgentExecRet) ProtoMessage() {}

func (x *GetUserAgentExecRet) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAgentExecRet.ProtoReflect.Descriptor instead.
func (*GetUserAgentExecRet) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{73}
}

func (x *GetUserAgentExecRet) GetAgentAmount() int32 {
	if x != nil && x.AgentAmount != nil {
		return *x.AgentAmount
	}
	return 0
}

func (x *GetUserAgentExecRet) GetAgentUserAmount() int32 {
	if x != nil && x.AgentUserAmount != nil {
		return *x.AgentUserAmount
	}
	return 0
}

func (x *GetUserAgentExecRet) GetAgentLevel() int32 {
	if x != nil && x.AgentLevel != nil {
		return *x.AgentLevel
	}
	return 0
}

func (x *GetUserAgentExecRet) GetAgentTaxAmount() int32 {
	if x != nil && x.AgentTaxAmount != nil {
		return *x.AgentTaxAmount
	}
	return 0
}

func (x *GetUserAgentExecRet) GetAgentTaxBonus() int32 {
	if x != nil && x.AgentTaxBonus != nil {
		return *x.AgentTaxBonus
	}
	return 0
}

func (x *GetUserAgentExecRet) GetAgentTotalUser() int32 {
	if x != nil && x.AgentTotalUser != nil {
		return *x.AgentTotalUser
	}
	return 0
}

// 查詢今日稅收Agent Tax Log
type GetUserAgentTaxLogMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   *int32  `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`
	DateTime *string `protobuf:"bytes,2,req,name=DateTime" json:"DateTime,omitempty"`
	Area_ID  *int32  `protobuf:"varint,3,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *GetUserAgentTaxLogMsg) Reset() {
	*x = GetUserAgentTaxLogMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserAgentTaxLogMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAgentTaxLogMsg) ProtoMessage() {}

func (x *GetUserAgentTaxLogMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAgentTaxLogMsg.ProtoReflect.Descriptor instead.
func (*GetUserAgentTaxLogMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{74}
}

func (x *GetUserAgentTaxLogMsg) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *GetUserAgentTaxLogMsg) GetDateTime() string {
	if x != nil && x.DateTime != nil {
		return *x.DateTime
	}
	return ""
}

func (x *GetUserAgentTaxLogMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 今日稅收頁面
type GetUserAgentTaxLogRetList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserAgentTaxLog []*GetUserAgentTaxLogRet `protobuf:"bytes,1,rep,name=UserAgentTaxLog" json:"UserAgentTaxLog,omitempty"`
	TotalTax        *int32                   `protobuf:"varint,2,req,name=TotalTax" json:"TotalTax,omitempty"`           // 稅收總額
	TotalTaxBonux   *int32                   `protobuf:"varint,3,req,name=TotalTaxBonux" json:"TotalTaxBonux,omitempty"` // 稅收總額獎勵
	TotalPeople     *int32                   `protobuf:"varint,4,req,name=TotalPeople" json:"TotalPeople,omitempty"`     // 總人數
}

func (x *GetUserAgentTaxLogRetList) Reset() {
	*x = GetUserAgentTaxLogRetList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserAgentTaxLogRetList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAgentTaxLogRetList) ProtoMessage() {}

func (x *GetUserAgentTaxLogRetList) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAgentTaxLogRetList.ProtoReflect.Descriptor instead.
func (*GetUserAgentTaxLogRetList) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{75}
}

func (x *GetUserAgentTaxLogRetList) GetUserAgentTaxLog() []*GetUserAgentTaxLogRet {
	if x != nil {
		return x.UserAgentTaxLog
	}
	return nil
}

func (x *GetUserAgentTaxLogRetList) GetTotalTax() int32 {
	if x != nil && x.TotalTax != nil {
		return *x.TotalTax
	}
	return 0
}

func (x *GetUserAgentTaxLogRetList) GetTotalTaxBonux() int32 {
	if x != nil && x.TotalTaxBonux != nil {
		return *x.TotalTaxBonux
	}
	return 0
}

func (x *GetUserAgentTaxLogRetList) GetTotalPeople() int32 {
	if x != nil && x.TotalPeople != nil {
		return *x.TotalPeople
	}
	return 0
}

// 回傳今日稅收Agent Tax Log
type GetUserAgentTaxLogRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID         *int32  `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`                 // 玩家ID
	Nickname       *string `protobuf:"bytes,2,req,name=nickname" json:"nickname,omitempty"`              // 玩家昵稱
	Btaxamount     *int32  `protobuf:"varint,3,req,name=btaxamount" json:"btaxamount,omitempty"`         // 產生稅收
	Cdtaxamount    *int32  `protobuf:"varint,4,req,name=cdtaxamount" json:"cdtaxamount,omitempty"`       // 一級+二級產生稅收
	TotalTaxAmount *int32  `protobuf:"varint,5,req,name=totalTaxAmount" json:"totalTaxAmount,omitempty"` // 稅收收益
}

func (x *GetUserAgentTaxLogRet) Reset() {
	*x = GetUserAgentTaxLogRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserAgentTaxLogRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAgentTaxLogRet) ProtoMessage() {}

func (x *GetUserAgentTaxLogRet) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAgentTaxLogRet.ProtoReflect.Descriptor instead.
func (*GetUserAgentTaxLogRet) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{76}
}

func (x *GetUserAgentTaxLogRet) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *GetUserAgentTaxLogRet) GetNickname() string {
	if x != nil && x.Nickname != nil {
		return *x.Nickname
	}
	return ""
}

func (x *GetUserAgentTaxLogRet) GetBtaxamount() int32 {
	if x != nil && x.Btaxamount != nil {
		return *x.Btaxamount
	}
	return 0
}

func (x *GetUserAgentTaxLogRet) GetCdtaxamount() int32 {
	if x != nil && x.Cdtaxamount != nil {
		return *x.Cdtaxamount
	}
	return 0
}

func (x *GetUserAgentTaxLogRet) GetTotalTaxAmount() int32 {
	if x != nil && x.TotalTaxAmount != nil {
		return *x.TotalTaxAmount
	}
	return 0
}

// 查詢領取收益頁面
type GetWithdrawMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area_ID *int32 `protobuf:"varint,1,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
	UserID  *int32 `protobuf:"varint,2,req,name=UserID" json:"UserID,omitempty"`
}

func (x *GetWithdrawMsg) Reset() {
	*x = GetWithdrawMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWithdrawMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWithdrawMsg) ProtoMessage() {}

func (x *GetWithdrawMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWithdrawMsg.ProtoReflect.Descriptor instead.
func (*GetWithdrawMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{77}
}

func (x *GetWithdrawMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *GetWithdrawMsg) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

// 回傳領取收益頁面
type GetWithdrawRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area_ID         *int32             `protobuf:"varint,1,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
	WithdrawList    []*GetWithdrawList `protobuf:"bytes,2,rep,name=WithdrawList" json:"WithdrawList,omitempty"`
	TotalTaxAmount  *int32             `protobuf:"varint,3,req,name=TotalTaxAmount" json:"TotalTaxAmount,omitempty"`   // 總收益
	ConvertAmount   *int32             `protobuf:"varint,4,req,name=ConvertAmount" json:"ConvertAmount,omitempty"`     // 已提現收益
	PerformedAmount *int32             `protobuf:"varint,5,req,name=PerformedAmount" json:"PerformedAmount,omitempty"` // 今日可提現
	RemainAmount    *int32             `protobuf:"varint,6,opt,name=RemainAmount" json:"RemainAmount,omitempty"`       // 剩餘收益
}

func (x *GetWithdrawRet) Reset() {
	*x = GetWithdrawRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWithdrawRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWithdrawRet) ProtoMessage() {}

func (x *GetWithdrawRet) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWithdrawRet.ProtoReflect.Descriptor instead.
func (*GetWithdrawRet) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{78}
}

func (x *GetWithdrawRet) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *GetWithdrawRet) GetWithdrawList() []*GetWithdrawList {
	if x != nil {
		return x.WithdrawList
	}
	return nil
}

func (x *GetWithdrawRet) GetTotalTaxAmount() int32 {
	if x != nil && x.TotalTaxAmount != nil {
		return *x.TotalTaxAmount
	}
	return 0
}

func (x *GetWithdrawRet) GetConvertAmount() int32 {
	if x != nil && x.ConvertAmount != nil {
		return *x.ConvertAmount
	}
	return 0
}

func (x *GetWithdrawRet) GetPerformedAmount() int32 {
	if x != nil && x.PerformedAmount != nil {
		return *x.PerformedAmount
	}
	return 0
}

func (x *GetWithdrawRet) GetRemainAmount() int32 {
	if x != nil && x.RemainAmount != nil {
		return *x.RemainAmount
	}
	return 0
}

// 回傳領取收益頁面的List資料
type GetWithdrawList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogDate        *string `protobuf:"bytes,1,req,name=LogDate" json:"LogDate,omitempty"`                // 申請日期
	WithdrawAmount *int32  `protobuf:"varint,2,req,name=WithdrawAmount" json:"WithdrawAmount,omitempty"` // 提現金額
	Status         *string `protobuf:"bytes,3,req,name=Status" json:"Status,omitempty"`                  // 提現狀態
}

func (x *GetWithdrawList) Reset() {
	*x = GetWithdrawList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWithdrawList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWithdrawList) ProtoMessage() {}

func (x *GetWithdrawList) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWithdrawList.ProtoReflect.Descriptor instead.
func (*GetWithdrawList) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{79}
}

func (x *GetWithdrawList) GetLogDate() string {
	if x != nil && x.LogDate != nil {
		return *x.LogDate
	}
	return ""
}

func (x *GetWithdrawList) GetWithdrawAmount() int32 {
	if x != nil && x.WithdrawAmount != nil {
		return *x.WithdrawAmount
	}
	return 0
}

func (x *GetWithdrawList) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

// 馬上提現
type GetWithdrawOrderMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area_ID *int32 `protobuf:"varint,1,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
	UserID  *int32 `protobuf:"varint,2,req,name=UserID" json:"UserID,omitempty"`
	Amount  *int32 `protobuf:"varint,3,opt,name=Amount" json:"Amount,omitempty"` // 提現金額
}

func (x *GetWithdrawOrderMsg) Reset() {
	*x = GetWithdrawOrderMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWithdrawOrderMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWithdrawOrderMsg) ProtoMessage() {}

func (x *GetWithdrawOrderMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWithdrawOrderMsg.ProtoReflect.Descriptor instead.
func (*GetWithdrawOrderMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{80}
}

func (x *GetWithdrawOrderMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *GetWithdrawOrderMsg) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *GetWithdrawOrderMsg) GetAmount() int32 {
	if x != nil && x.Amount != nil {
		return *x.Amount
	}
	return 0
}

// 馬上提現結果
type GetWithdrawOrderRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area_ID *int32  `protobuf:"varint,1,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"`
	ChvMsg  *string `protobuf:"bytes,2,opt,name=ChvMsg" json:"ChvMsg,omitempty"`
}

func (x *GetWithdrawOrderRet) Reset() {
	*x = GetWithdrawOrderRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWithdrawOrderRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWithdrawOrderRet) ProtoMessage() {}

func (x *GetWithdrawOrderRet) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWithdrawOrderRet.ProtoReflect.Descriptor instead.
func (*GetWithdrawOrderRet) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{81}
}

func (x *GetWithdrawOrderRet) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *GetWithdrawOrderRet) GetChvMsg() string {
	if x != nil && x.ChvMsg != nil {
		return *x.ChvMsg
	}
	return ""
}

// 回傳收益規則
type GetAgentTaxListRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area_ID *int32          `protobuf:"varint,1,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"`
	TaxList []*AgentTaxList `protobuf:"bytes,2,rep,name=TaxList" json:"TaxList,omitempty"`
}

func (x *GetAgentTaxListRet) Reset() {
	*x = GetAgentTaxListRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAgentTaxListRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAgentTaxListRet) ProtoMessage() {}

func (x *GetAgentTaxListRet) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAgentTaxListRet.ProtoReflect.Descriptor instead.
func (*GetAgentTaxListRet) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{82}
}

func (x *GetAgentTaxListRet) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *GetAgentTaxListRet) GetTaxList() []*AgentTaxList {
	if x != nil {
		return x.TaxList
	}
	return nil
}

// 收益規則list
type AgentTaxList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level  *int32 `protobuf:"varint,1,req,name=Level" json:"Level,omitempty"`
	Stage1 *int32 `protobuf:"varint,2,req,name=Stage1" json:"Stage1,omitempty"`
	Stage2 *int32 `protobuf:"varint,3,req,name=Stage2" json:"Stage2,omitempty"`
	Stage3 *int32 `protobuf:"varint,4,req,name=Stage3" json:"Stage3,omitempty"`
}

func (x *AgentTaxList) Reset() {
	*x = AgentTaxList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentTaxList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentTaxList) ProtoMessage() {}

func (x *AgentTaxList) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentTaxList.ProtoReflect.Descriptor instead.
func (*AgentTaxList) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{83}
}

func (x *AgentTaxList) GetLevel() int32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

func (x *AgentTaxList) GetStage1() int32 {
	if x != nil && x.Stage1 != nil {
		return *x.Stage1
	}
	return 0
}

func (x *AgentTaxList) GetStage2() int32 {
	if x != nil && x.Stage2 != nil {
		return *x.Stage2
	}
	return 0
}

func (x *AgentTaxList) GetStage3() int32 {
	if x != nil && x.Stage3 != nil {
		return *x.Stage3
	}
	return 0
}

// 查詢推廣等級
type AgentUserLevelInfomMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area_ID *int32 `protobuf:"varint,1,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
	UserID  *int32 `protobuf:"varint,2,req,name=UserID" json:"UserID,omitempty"`
}

func (x *AgentUserLevelInfomMsg) Reset() {
	*x = AgentUserLevelInfomMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentUserLevelInfomMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentUserLevelInfomMsg) ProtoMessage() {}

func (x *AgentUserLevelInfomMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentUserLevelInfomMsg.ProtoReflect.Descriptor instead.
func (*AgentUserLevelInfomMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{84}
}

func (x *AgentUserLevelInfomMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *AgentUserLevelInfomMsg) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

// 回傳推廣等級
type AgentUserLevelInfomRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area_ID *int32 `protobuf:"varint,1,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
	Stage1  *int32 `protobuf:"varint,2,req,name=Stage1" json:"Stage1,omitempty"`               // 1級稅收
	Stage2  *int32 `protobuf:"varint,3,req,name=Stage2" json:"Stage2,omitempty"`               // 2級稅收
	Stage3  *int32 `protobuf:"varint,4,req,name=Stage3" json:"Stage3,omitempty"`               // 3級稅收
}

func (x *AgentUserLevelInfomRet) Reset() {
	*x = AgentUserLevelInfomRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentUserLevelInfomRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentUserLevelInfomRet) ProtoMessage() {}

func (x *AgentUserLevelInfomRet) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentUserLevelInfomRet.ProtoReflect.Descriptor instead.
func (*AgentUserLevelInfomRet) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{85}
}

func (x *AgentUserLevelInfomRet) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *AgentUserLevelInfomRet) GetStage1() int32 {
	if x != nil && x.Stage1 != nil {
		return *x.Stage1
	}
	return 0
}

func (x *AgentUserLevelInfomRet) GetStage2() int32 {
	if x != nil && x.Stage2 != nil {
		return *x.Stage2
	}
	return 0
}

func (x *AgentUserLevelInfomRet) GetStage3() int32 {
	if x != nil && x.Stage3 != nil {
		return *x.Stage3
	}
	return 0
}

// 查詢每日收益
type GetAgentTaxBonusLogMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area_ID *int32 `protobuf:"varint,1,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
	UserID  *int32 `protobuf:"varint,2,req,name=UserID" json:"UserID,omitempty"`
}

func (x *GetAgentTaxBonusLogMsg) Reset() {
	*x = GetAgentTaxBonusLogMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAgentTaxBonusLogMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAgentTaxBonusLogMsg) ProtoMessage() {}

func (x *GetAgentTaxBonusLogMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAgentTaxBonusLogMsg.ProtoReflect.Descriptor instead.
func (*GetAgentTaxBonusLogMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{86}
}

func (x *GetAgentTaxBonusLogMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *GetAgentTaxBonusLogMsg) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

// 回傳每日收益
type GetAgentTaxBonusLogRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area_ID         *int32                  `protobuf:"varint,1,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
	TaxBonusLogList []*AgentTaxBonusLogList `protobuf:"bytes,2,rep,name=TaxBonusLogList" json:"TaxBonusLogList,omitempty"`
}

func (x *GetAgentTaxBonusLogRet) Reset() {
	*x = GetAgentTaxBonusLogRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAgentTaxBonusLogRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAgentTaxBonusLogRet) ProtoMessage() {}

func (x *GetAgentTaxBonusLogRet) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAgentTaxBonusLogRet.ProtoReflect.Descriptor instead.
func (*GetAgentTaxBonusLogRet) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{87}
}

func (x *GetAgentTaxBonusLogRet) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *GetAgentTaxBonusLogRet) GetTaxBonusLogList() []*AgentTaxBonusLogList {
	if x != nil {
		return x.TaxBonusLogList
	}
	return nil
}

type AgentTaxBonusLogList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogDate             *string `protobuf:"bytes,2,req,name=LogDate" json:"LogDate,omitempty"`                          // 時間
	BTaxBonusAmount     *int32  `protobuf:"varint,3,req,name=BTaxBonusAmount" json:"BTaxBonusAmount,omitempty"`         // 一級推廣收益
	CDTaxBonusAmount    *int32  `protobuf:"varint,4,req,name=CDTaxBonusAmount" json:"CDTaxBonusAmount,omitempty"`       // 二級三級推廣收益
	TotalTaxBonusAmount *int32  `protobuf:"varint,5,req,name=TotalTaxBonusAmount" json:"TotalTaxBonusAmount,omitempty"` // 收益
}

func (x *AgentTaxBonusLogList) Reset() {
	*x = AgentTaxBonusLogList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentTaxBonusLogList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentTaxBonusLogList) ProtoMessage() {}

func (x *AgentTaxBonusLogList) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentTaxBonusLogList.ProtoReflect.Descriptor instead.
func (*AgentTaxBonusLogList) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{88}
}

func (x *AgentTaxBonusLogList) GetLogDate() string {
	if x != nil && x.LogDate != nil {
		return *x.LogDate
	}
	return ""
}

func (x *AgentTaxBonusLogList) GetBTaxBonusAmount() int32 {
	if x != nil && x.BTaxBonusAmount != nil {
		return *x.BTaxBonusAmount
	}
	return 0
}

func (x *AgentTaxBonusLogList) GetCDTaxBonusAmount() int32 {
	if x != nil && x.CDTaxBonusAmount != nil {
		return *x.CDTaxBonusAmount
	}
	return 0
}

func (x *AgentTaxBonusLogList) GetTotalTaxBonusAmount() int32 {
	if x != nil && x.TotalTaxBonusAmount != nil {
		return *x.TotalTaxBonusAmount
	}
	return 0
}

// 查詢推廣人數
type GetUserAgentListMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area_ID *int32 `protobuf:"varint,1,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
	UserID  *int32 `protobuf:"varint,2,req,name=UserID" json:"UserID,omitempty"`
}

func (x *GetUserAgentListMsg) Reset() {
	*x = GetUserAgentListMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserAgentListMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAgentListMsg) ProtoMessage() {}

func (x *GetUserAgentListMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAgentListMsg.ProtoReflect.Descriptor instead.
func (*GetUserAgentListMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{89}
}

func (x *GetUserAgentListMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *GetUserAgentListMsg) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

// 回傳推廣人數
type GetUserAgentListRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area_ID      *int32 `protobuf:"varint,1,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
	TotalUser    *int32 `protobuf:"varint,2,req,name=TotalUser" json:"TotalUser,omitempty"`         // 團隊人數
	TempBUser    *int32 `protobuf:"varint,3,req,name=TempBUser" json:"TempBUser,omitempty"`         // 直屬下級
	TodayNewUser *int32 `protobuf:"varint,4,req,name=TodayNewUser" json:"TodayNewUser,omitempty"`   // 今日新增人數
	TodayLogin   *int32 `protobuf:"varint,5,req,name=TodayLogin" json:"TodayLogin,omitempty"`       // 今日登錄人數
}

func (x *GetUserAgentListRet) Reset() {
	*x = GetUserAgentListRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserAgentListRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAgentListRet) ProtoMessage() {}

func (x *GetUserAgentListRet) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAgentListRet.ProtoReflect.Descriptor instead.
func (*GetUserAgentListRet) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{90}
}

func (x *GetUserAgentListRet) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *GetUserAgentListRet) GetTotalUser() int32 {
	if x != nil && x.TotalUser != nil {
		return *x.TotalUser
	}
	return 0
}

func (x *GetUserAgentListRet) GetTempBUser() int32 {
	if x != nil && x.TempBUser != nil {
		return *x.TempBUser
	}
	return 0
}

func (x *GetUserAgentListRet) GetTodayNewUser() int32 {
	if x != nil && x.TodayNewUser != nil {
		return *x.TodayNewUser
	}
	return 0
}

func (x *GetUserAgentListRet) GetTodayLogin() int32 {
	if x != nil && x.TodayLogin != nil {
		return *x.TodayLogin
	}
	return 0
}

// 查詢閃付支付
type GetShanFuMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area_ID *int32 `protobuf:"varint,1,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
	UserID  *int32 `protobuf:"varint,2,req,name=UserID" json:"UserID,omitempty"`
}

func (x *GetShanFuMsg) Reset() {
	*x = GetShanFuMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShanFuMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShanFuMsg) ProtoMessage() {}

func (x *GetShanFuMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShanFuMsg.ProtoReflect.Descriptor instead.
func (*GetShanFuMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{91}
}

func (x *GetShanFuMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *GetShanFuMsg) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

// 回傳閃付
type GetShanFuRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CodeID *int32  `protobuf:"varint,1,req,name=CodeID" json:"CodeID,omitempty"` // 200時返回Data
	Data   *string `protobuf:"bytes,2,req,name=Data" json:"Data,omitempty"`
}

func (x *GetShanFuRet) Reset() {
	*x = GetShanFuRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShanFuRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShanFuRet) ProtoMessage() {}

func (x *GetShanFuRet) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShanFuRet.ProtoReflect.Descriptor instead.
func (*GetShanFuRet) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{92}
}

func (x *GetShanFuRet) GetCodeID() int32 {
	if x != nil && x.CodeID != nil {
		return *x.CodeID
	}
	return 0
}

func (x *GetShanFuRet) GetData() string {
	if x != nil && x.Data != nil {
		return *x.Data
	}
	return ""
}

// 查詢閃付聊天
type GetShanFuChatMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area_ID  *int32  `protobuf:"varint,1,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
	UserID   *int32  `protobuf:"varint,2,req,name=UserID" json:"UserID,omitempty"`
	Type     *string `protobuf:"bytes,3,opt,name=Type" json:"Type,omitempty"` // 1.ios  2.android
	AgentID  *string `protobuf:"bytes,4,opt,name=AgentID" json:"AgentID,omitempty"`
	AppKey   *string `protobuf:"bytes,5,opt,name=AppKey" json:"AppKey,omitempty"`
	AppID    *string `protobuf:"bytes,6,opt,name=AppID" json:"AppID,omitempty"`
	DeviceID *string `protobuf:"bytes,7,opt,name=DeviceID" json:"DeviceID,omitempty"`
	UserName *string `protobuf:"bytes,8,opt,name=UserName" json:"UserName,omitempty"`
}

func (x *GetShanFuChatMsg) Reset() {
	*x = GetShanFuChatMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShanFuChatMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShanFuChatMsg) ProtoMessage() {}

func (x *GetShanFuChatMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShanFuChatMsg.ProtoReflect.Descriptor instead.
func (*GetShanFuChatMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{93}
}

func (x *GetShanFuChatMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *GetShanFuChatMsg) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *GetShanFuChatMsg) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *GetShanFuChatMsg) GetAgentID() string {
	if x != nil && x.AgentID != nil {
		return *x.AgentID
	}
	return ""
}

func (x *GetShanFuChatMsg) GetAppKey() string {
	if x != nil && x.AppKey != nil {
		return *x.AppKey
	}
	return ""
}

func (x *GetShanFuChatMsg) GetAppID() string {
	if x != nil && x.AppID != nil {
		return *x.AppID
	}
	return ""
}

func (x *GetShanFuChatMsg) GetDeviceID() string {
	if x != nil && x.DeviceID != nil {
		return *x.DeviceID
	}
	return ""
}

func (x *GetShanFuChatMsg) GetUserName() string {
	if x != nil && x.UserName != nil {
		return *x.UserName
	}
	return ""
}

// 回傳閃付聊天
type GetShanFuChatRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CodeID    *int32  `protobuf:"varint,1,req,name=CodeID" json:"CodeID,omitempty"` // 200時返回Data
	UserID    *int32  `protobuf:"varint,2,req,name=UserID" json:"UserID,omitempty"`
	ClientUrl *string `protobuf:"bytes,3,req,name=ClientUrl" json:"ClientUrl,omitempty"` // 開視窗
	AgentID   *string `protobuf:"bytes,4,opt,name=AgentID" json:"AgentID,omitempty"`
	AppKey    *string `protobuf:"bytes,5,opt,name=AppKey" json:"AppKey,omitempty"`
	AppID     *string `protobuf:"bytes,6,opt,name=AppID" json:"AppID,omitempty"`
	DeviceID  *string `protobuf:"bytes,7,opt,name=DeviceID" json:"DeviceID,omitempty"`
	UserName  *string `protobuf:"bytes,8,opt,name=UserName" json:"UserName,omitempty"`
	TimeStamp *string `protobuf:"bytes,9,opt,name=TimeStamp" json:"TimeStamp,omitempty"`
	SecretID  *string `protobuf:"bytes,10,opt,name=SecretID" json:"SecretID,omitempty"`
}

func (x *GetShanFuChatRet) Reset() {
	*x = GetShanFuChatRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShanFuChatRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShanFuChatRet) ProtoMessage() {}

func (x *GetShanFuChatRet) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShanFuChatRet.ProtoReflect.Descriptor instead.
func (*GetShanFuChatRet) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{94}
}

func (x *GetShanFuChatRet) GetCodeID() int32 {
	if x != nil && x.CodeID != nil {
		return *x.CodeID
	}
	return 0
}

func (x *GetShanFuChatRet) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *GetShanFuChatRet) GetClientUrl() string {
	if x != nil && x.ClientUrl != nil {
		return *x.ClientUrl
	}
	return ""
}

func (x *GetShanFuChatRet) GetAgentID() string {
	if x != nil && x.AgentID != nil {
		return *x.AgentID
	}
	return ""
}

func (x *GetShanFuChatRet) GetAppKey() string {
	if x != nil && x.AppKey != nil {
		return *x.AppKey
	}
	return ""
}

func (x *GetShanFuChatRet) GetAppID() string {
	if x != nil && x.AppID != nil {
		return *x.AppID
	}
	return ""
}

func (x *GetShanFuChatRet) GetDeviceID() string {
	if x != nil && x.DeviceID != nil {
		return *x.DeviceID
	}
	return ""
}

func (x *GetShanFuChatRet) GetUserName() string {
	if x != nil && x.UserName != nil {
		return *x.UserName
	}
	return ""
}

func (x *GetShanFuChatRet) GetTimeStamp() string {
	if x != nil && x.TimeStamp != nil {
		return *x.TimeStamp
	}
	return ""
}

func (x *GetShanFuChatRet) GetSecretID() string {
	if x != nil && x.SecretID != nil {
		return *x.SecretID
	}
	return ""
}

// 玩家/代理信息(淨利潤)
type NetProfitAgentGetAgentInfoMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area_ID *int32 `protobuf:"varint,1,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
	UserID  *int32 `protobuf:"varint,2,req,name=UserID" json:"UserID,omitempty"`
}

func (x *NetProfitAgentGetAgentInfoMsg) Reset() {
	*x = NetProfitAgentGetAgentInfoMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetProfitAgentGetAgentInfoMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetProfitAgentGetAgentInfoMsg) ProtoMessage() {}

func (x *NetProfitAgentGetAgentInfoMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetProfitAgentGetAgentInfoMsg.ProtoReflect.Descriptor instead.
func (*NetProfitAgentGetAgentInfoMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{95}
}

func (x *NetProfitAgentGetAgentInfoMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *NetProfitAgentGetAgentInfoMsg) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

// 玩家/代理信息(淨利潤)
type NetProfitAgentGetAgentInfoRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID               *int32  `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`
	RegDate              *string `protobuf:"bytes,2,req,name=RegDate" json:"RegDate,omitempty"`                            // 注冊時間
	ChargeAmount         *int32  `protobuf:"varint,3,req,name=ChargeAmount" json:"ChargeAmount,omitempty"`                 // 充值
	SelfWithDraw         *int32  `protobuf:"varint,4,req,name=SelfWithDraw" json:"SelfWithDraw,omitempty"`                 // 提現
	Status               *string `protobuf:"bytes,5,req,name=Status" json:"Status,omitempty"`                              // 是否為代理
	TotalUsers           *int32  `protobuf:"varint,6,req,name=TotalUsers" json:"TotalUsers,omitempty"`                     // 下線數量
	SumSubUsers          *int32  `protobuf:"varint,7,req,name=SumSubUsers" json:"SumSubUsers,omitempty"`                   // 下線玩家
	SumSubAgent          *int32  `protobuf:"varint,8,req,name=SumSubAgent" json:"SumSubAgent,omitempty"`                   // 下線代理
	SumSubWithDrawAmount *int32  `protobuf:"varint,9,req,name=SumSubWithDrawAmount" json:"SumSubWithDrawAmount,omitempty"` // 己提現金額
	QRCode               *string `protobuf:"bytes,10,opt,name=QRCode" json:"QRCode,omitempty"`                             // QRCode
	InviteCode           *string `protobuf:"bytes,11,opt,name=InviteCode" json:"InviteCode,omitempty"`                     //邀請碼
	UpperUserID          *int32  `protobuf:"varint,12,opt,name=UpperUserID" json:"UpperUserID,omitempty"`                  //上級userid
}

func (x *NetProfitAgentGetAgentInfoRet) Reset() {
	*x = NetProfitAgentGetAgentInfoRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetProfitAgentGetAgentInfoRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetProfitAgentGetAgentInfoRet) ProtoMessage() {}

func (x *NetProfitAgentGetAgentInfoRet) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetProfitAgentGetAgentInfoRet.ProtoReflect.Descriptor instead.
func (*NetProfitAgentGetAgentInfoRet) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{96}
}

func (x *NetProfitAgentGetAgentInfoRet) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *NetProfitAgentGetAgentInfoRet) GetRegDate() string {
	if x != nil && x.RegDate != nil {
		return *x.RegDate
	}
	return ""
}

func (x *NetProfitAgentGetAgentInfoRet) GetChargeAmount() int32 {
	if x != nil && x.ChargeAmount != nil {
		return *x.ChargeAmount
	}
	return 0
}

func (x *NetProfitAgentGetAgentInfoRet) GetSelfWithDraw() int32 {
	if x != nil && x.SelfWithDraw != nil {
		return *x.SelfWithDraw
	}
	return 0
}

func (x *NetProfitAgentGetAgentInfoRet) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *NetProfitAgentGetAgentInfoRet) GetTotalUsers() int32 {
	if x != nil && x.TotalUsers != nil {
		return *x.TotalUsers
	}
	return 0
}

func (x *NetProfitAgentGetAgentInfoRet) GetSumSubUsers() int32 {
	if x != nil && x.SumSubUsers != nil {
		return *x.SumSubUsers
	}
	return 0
}

func (x *NetProfitAgentGetAgentInfoRet) GetSumSubAgent() int32 {
	if x != nil && x.SumSubAgent != nil {
		return *x.SumSubAgent
	}
	return 0
}

func (x *NetProfitAgentGetAgentInfoRet) GetSumSubWithDrawAmount() int32 {
	if x != nil && x.SumSubWithDrawAmount != nil {
		return *x.SumSubWithDrawAmount
	}
	return 0
}

func (x *NetProfitAgentGetAgentInfoRet) GetQRCode() string {
	if x != nil && x.QRCode != nil {
		return *x.QRCode
	}
	return ""
}

func (x *NetProfitAgentGetAgentInfoRet) GetInviteCode() string {
	if x != nil && x.InviteCode != nil {
		return *x.InviteCode
	}
	return ""
}

func (x *NetProfitAgentGetAgentInfoRet) GetUpperUserID() int32 {
	if x != nil && x.UpperUserID != nil {
		return *x.UpperUserID
	}
	return 0
}

// 新增玩家(淨利潤)
type NetProfitAgentGetSubUserListMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area_ID  *int32  `protobuf:"varint,1,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
	UserID   *int32  `protobuf:"varint,2,req,name=UserID" json:"UserID,omitempty"`
	Datetime *string `protobuf:"bytes,3,req,name=Datetime" json:"Datetime,omitempty"` // dtStatDate
}

func (x *NetProfitAgentGetSubUserListMsg) Reset() {
	*x = NetProfitAgentGetSubUserListMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetProfitAgentGetSubUserListMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetProfitAgentGetSubUserListMsg) ProtoMessage() {}

func (x *NetProfitAgentGetSubUserListMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetProfitAgentGetSubUserListMsg.ProtoReflect.Descriptor instead.
func (*NetProfitAgentGetSubUserListMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{97}
}

func (x *NetProfitAgentGetSubUserListMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *NetProfitAgentGetSubUserListMsg) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *NetProfitAgentGetSubUserListMsg) GetDatetime() string {
	if x != nil && x.Datetime != nil {
		return *x.Datetime
	}
	return ""
}

// 新增玩家(淨利潤)
// 在近增玩家頁面，是LIST
type NetProfitAgentGetSubUserListRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GetSubUserList []*NetProfitAgentGetSubUserList `protobuf:"bytes,1,rep,name=GetSubUserList" json:"GetSubUserList,omitempty"`
	SumCharge      *int32                          `protobuf:"varint,2,req,name=sumCharge" json:"sumCharge,omitempty"`         // 總計充值金額
	SumWithDraw    *int32                          `protobuf:"varint,3,req,name=sumWithDraw" json:"sumWithDraw,omitempty"`     // 總計提現總額
	SumBonus       *int32                          `protobuf:"varint,4,req,name=sumBonus" json:"sumBonus,omitempty"`           // 總計提現金額
	Totaluserlast  *int32                          `protobuf:"varint,5,req,name=totaluserlast" json:"totaluserlast,omitempty"` // 昨日新增人數
}

func (x *NetProfitAgentGetSubUserListRet) Reset() {
	*x = NetProfitAgentGetSubUserListRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetProfitAgentGetSubUserListRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetProfitAgentGetSubUserListRet) ProtoMessage() {}

func (x *NetProfitAgentGetSubUserListRet) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetProfitAgentGetSubUserListRet.ProtoReflect.Descriptor instead.
func (*NetProfitAgentGetSubUserListRet) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{98}
}

func (x *NetProfitAgentGetSubUserListRet) GetGetSubUserList() []*NetProfitAgentGetSubUserList {
	if x != nil {
		return x.GetSubUserList
	}
	return nil
}

func (x *NetProfitAgentGetSubUserListRet) GetSumCharge() int32 {
	if x != nil && x.SumCharge != nil {
		return *x.SumCharge
	}
	return 0
}

func (x *NetProfitAgentGetSubUserListRet) GetSumWithDraw() int32 {
	if x != nil && x.SumWithDraw != nil {
		return *x.SumWithDraw
	}
	return 0
}

func (x *NetProfitAgentGetSubUserListRet) GetSumBonus() int32 {
	if x != nil && x.SumBonus != nil {
		return *x.SumBonus
	}
	return 0
}

func (x *NetProfitAgentGetSubUserListRet) GetTotaluserlast() int32 {
	if x != nil && x.Totaluserlast != nil {
		return *x.Totaluserlast
	}
	return 0
}

type NetProfitAgentGetSubUserList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID            *int32  `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`
	RegDate           *string `protobuf:"bytes,2,req,name=RegDate" json:"RegDate,omitempty"`
	SumChargeAmount   *int32  `protobuf:"varint,3,req,name=SumChargeAmount" json:"SumChargeAmount,omitempty"`     // 充值金額
	SumWithDrawAmount *int32  `protobuf:"varint,4,req,name=SumWithDrawAmount" json:"SumWithDrawAmount,omitempty"` // 提現總額
	BonusAmount       *int32  `protobuf:"varint,5,req,name=BonusAmount" json:"BonusAmount,omitempty"`             // 提現金額
}

func (x *NetProfitAgentGetSubUserList) Reset() {
	*x = NetProfitAgentGetSubUserList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetProfitAgentGetSubUserList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetProfitAgentGetSubUserList) ProtoMessage() {}

func (x *NetProfitAgentGetSubUserList) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetProfitAgentGetSubUserList.ProtoReflect.Descriptor instead.
func (*NetProfitAgentGetSubUserList) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{99}
}

func (x *NetProfitAgentGetSubUserList) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *NetProfitAgentGetSubUserList) GetRegDate() string {
	if x != nil && x.RegDate != nil {
		return *x.RegDate
	}
	return ""
}

func (x *NetProfitAgentGetSubUserList) GetSumChargeAmount() int32 {
	if x != nil && x.SumChargeAmount != nil {
		return *x.SumChargeAmount
	}
	return 0
}

func (x *NetProfitAgentGetSubUserList) GetSumWithDrawAmount() int32 {
	if x != nil && x.SumWithDrawAmount != nil {
		return *x.SumWithDrawAmount
	}
	return 0
}

func (x *NetProfitAgentGetSubUserList) GetBonusAmount() int32 {
	if x != nil && x.BonusAmount != nil {
		return *x.BonusAmount
	}
	return 0
}

// 代理提現紀錄(淨利潤)
type NetProfitAgentGetAgentWithdrawAmountMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area_ID *int32 `protobuf:"varint,1,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
	UserID  *int32 `protobuf:"varint,2,req,name=UserID" json:"UserID,omitempty"`
}

func (x *NetProfitAgentGetAgentWithdrawAmountMsg) Reset() {
	*x = NetProfitAgentGetAgentWithdrawAmountMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetProfitAgentGetAgentWithdrawAmountMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetProfitAgentGetAgentWithdrawAmountMsg) ProtoMessage() {}

func (x *NetProfitAgentGetAgentWithdrawAmountMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetProfitAgentGetAgentWithdrawAmountMsg.ProtoReflect.Descriptor instead.
func (*NetProfitAgentGetAgentWithdrawAmountMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{100}
}

func (x *NetProfitAgentGetAgentWithdrawAmountMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *NetProfitAgentGetAgentWithdrawAmountMsg) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

// 代理提現紀錄(淨利潤)
type NetProfitAgentGetAgentWithdrawAmountRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GetAgentWithdrawAmountList []*NetProfitAgentGetAgentWithdrawAmountList `protobuf:"bytes,1,rep,name=GetAgentWithdrawAmountList" json:"GetAgentWithdrawAmountList,omitempty"`
	Sum                        *int32                                      `protobuf:"varint,2,req,name=Sum" json:"Sum,omitempty"` // 總計
}

func (x *NetProfitAgentGetAgentWithdrawAmountRet) Reset() {
	*x = NetProfitAgentGetAgentWithdrawAmountRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetProfitAgentGetAgentWithdrawAmountRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetProfitAgentGetAgentWithdrawAmountRet) ProtoMessage() {}

func (x *NetProfitAgentGetAgentWithdrawAmountRet) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetProfitAgentGetAgentWithdrawAmountRet.ProtoReflect.Descriptor instead.
func (*NetProfitAgentGetAgentWithdrawAmountRet) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{101}
}

func (x *NetProfitAgentGetAgentWithdrawAmountRet) GetGetAgentWithdrawAmountList() []*NetProfitAgentGetAgentWithdrawAmountList {
	if x != nil {
		return x.GetAgentWithdrawAmountList
	}
	return nil
}

func (x *NetProfitAgentGetAgentWithdrawAmountRet) GetSum() int32 {
	if x != nil && x.Sum != nil {
		return *x.Sum
	}
	return 0
}

type NetProfitAgentGetAgentWithdrawAmountList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID         *int32  `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`                 // ID
	CreateTime     *string `protobuf:"bytes,2,req,name=CreateTime" json:"CreateTime,omitempty"`          // 時間
	WithDrawAmount *int32  `protobuf:"varint,3,req,name=WithDrawAmount" json:"WithDrawAmount,omitempty"` // 提現金額
	Status         *string `protobuf:"bytes,4,req,name=Status" json:"Status,omitempty"`                  // 是否完成
}

func (x *NetProfitAgentGetAgentWithdrawAmountList) Reset() {
	*x = NetProfitAgentGetAgentWithdrawAmountList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetProfitAgentGetAgentWithdrawAmountList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetProfitAgentGetAgentWithdrawAmountList) ProtoMessage() {}

func (x *NetProfitAgentGetAgentWithdrawAmountList) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetProfitAgentGetAgentWithdrawAmountList.ProtoReflect.Descriptor instead.
func (*NetProfitAgentGetAgentWithdrawAmountList) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{102}
}

func (x *NetProfitAgentGetAgentWithdrawAmountList) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *NetProfitAgentGetAgentWithdrawAmountList) GetCreateTime() string {
	if x != nil && x.CreateTime != nil {
		return *x.CreateTime
	}
	return ""
}

func (x *NetProfitAgentGetAgentWithdrawAmountList) GetWithDrawAmount() int32 {
	if x != nil && x.WithDrawAmount != nil {
		return *x.WithDrawAmount
	}
	return 0
}

func (x *NetProfitAgentGetAgentWithdrawAmountList) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

// 提現紀錄(淨利潤)
type NetProfitAgentGetWithdrawAmountMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area_ID *int32 `protobuf:"varint,1,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
	UserID  *int32 `protobuf:"varint,2,req,name=UserID" json:"UserID,omitempty"`
}

func (x *NetProfitAgentGetWithdrawAmountMsg) Reset() {
	*x = NetProfitAgentGetWithdrawAmountMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetProfitAgentGetWithdrawAmountMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetProfitAgentGetWithdrawAmountMsg) ProtoMessage() {}

func (x *NetProfitAgentGetWithdrawAmountMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetProfitAgentGetWithdrawAmountMsg.ProtoReflect.Descriptor instead.
func (*NetProfitAgentGetWithdrawAmountMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{103}
}

func (x *NetProfitAgentGetWithdrawAmountMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *NetProfitAgentGetWithdrawAmountMsg) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

// 提現紀錄(淨利潤)
type NetProfitAgentGetWithdrawAmountRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GetWithdrawAmountRet []*NetProfitAgentGetWithdrawAmountList `protobuf:"bytes,1,rep,name=GetWithdrawAmountRet" json:"GetWithdrawAmountRet,omitempty"`
	Sum                  *int32                                 `protobuf:"varint,2,req,name=Sum" json:"Sum,omitempty"` // 總計
}

func (x *NetProfitAgentGetWithdrawAmountRet) Reset() {
	*x = NetProfitAgentGetWithdrawAmountRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetProfitAgentGetWithdrawAmountRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetProfitAgentGetWithdrawAmountRet) ProtoMessage() {}

func (x *NetProfitAgentGetWithdrawAmountRet) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetProfitAgentGetWithdrawAmountRet.ProtoReflect.Descriptor instead.
func (*NetProfitAgentGetWithdrawAmountRet) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{104}
}

func (x *NetProfitAgentGetWithdrawAmountRet) GetGetWithdrawAmountRet() []*NetProfitAgentGetWithdrawAmountList {
	if x != nil {
		return x.GetWithdrawAmountRet
	}
	return nil
}

func (x *NetProfitAgentGetWithdrawAmountRet) GetSum() int32 {
	if x != nil && x.Sum != nil {
		return *x.Sum
	}
	return 0
}

// 提現紀錄(淨利潤)
type NetProfitAgentGetWithdrawAmountList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateTime     *string `protobuf:"bytes,1,req,name=CreateTime" json:"CreateTime,omitempty"`          // 日期
	WithDrawAmount *int32  `protobuf:"varint,2,req,name=WithDrawAmount" json:"WithDrawAmount,omitempty"` // 現提金額
	Status         *int32  `protobuf:"varint,3,req,name=Status" json:"Status,omitempty"`                 // 是否完成
	Memo           *string `protobuf:"bytes,4,req,name=Memo" json:"Memo,omitempty"`                      // 說明
}

func (x *NetProfitAgentGetWithdrawAmountList) Reset() {
	*x = NetProfitAgentGetWithdrawAmountList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetProfitAgentGetWithdrawAmountList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetProfitAgentGetWithdrawAmountList) ProtoMessage() {}

func (x *NetProfitAgentGetWithdrawAmountList) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetProfitAgentGetWithdrawAmountList.ProtoReflect.Descriptor instead.
func (*NetProfitAgentGetWithdrawAmountList) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{105}
}

func (x *NetProfitAgentGetWithdrawAmountList) GetCreateTime() string {
	if x != nil && x.CreateTime != nil {
		return *x.CreateTime
	}
	return ""
}

func (x *NetProfitAgentGetWithdrawAmountList) GetWithDrawAmount() int32 {
	if x != nil && x.WithDrawAmount != nil {
		return *x.WithDrawAmount
	}
	return 0
}

func (x *NetProfitAgentGetWithdrawAmountList) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *NetProfitAgentGetWithdrawAmountList) GetMemo() string {
	if x != nil && x.Memo != nil {
		return *x.Memo
	}
	return ""
}

// 可提現金額查詢(淨利潤)
type NetProfitAgentGetBonusAmountMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area_ID *int32 `protobuf:"varint,1,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
	UserID  *int32 `protobuf:"varint,2,req,name=UserID" json:"UserID,omitempty"`
}

func (x *NetProfitAgentGetBonusAmountMsg) Reset() {
	*x = NetProfitAgentGetBonusAmountMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetProfitAgentGetBonusAmountMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetProfitAgentGetBonusAmountMsg) ProtoMessage() {}

func (x *NetProfitAgentGetBonusAmountMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetProfitAgentGetBonusAmountMsg.ProtoReflect.Descriptor instead.
func (*NetProfitAgentGetBonusAmountMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{106}
}

func (x *NetProfitAgentGetBonusAmountMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *NetProfitAgentGetBonusAmountMsg) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

// 可提現金額查詢(淨利潤)
type NetProfitAgentGetBonusAmountRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Poolamount *int32 `protobuf:"varint,1,req,name=poolamount" json:"poolamount,omitempty"`
}

func (x *NetProfitAgentGetBonusAmountRet) Reset() {
	*x = NetProfitAgentGetBonusAmountRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetProfitAgentGetBonusAmountRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetProfitAgentGetBonusAmountRet) ProtoMessage() {}

func (x *NetProfitAgentGetBonusAmountRet) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetProfitAgentGetBonusAmountRet.ProtoReflect.Descriptor instead.
func (*NetProfitAgentGetBonusAmountRet) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{107}
}

func (x *NetProfitAgentGetBonusAmountRet) GetPoolamount() int32 {
	if x != nil && x.Poolamount != nil {
		return *x.Poolamount
	}
	return 0
}

// 申請提現(淨利潤)
type NetProfitAgentWithDrawOrderMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area_ID *int32  `protobuf:"varint,1,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
	UserID  *int32  `protobuf:"varint,2,req,name=UserID" json:"UserID,omitempty"`               // ID
	Amount  *int32  `protobuf:"varint,3,req,name=Amount" json:"Amount,omitempty"`               // 提取金額
	ChvMsg  *string `protobuf:"bytes,4,opt,name=chvMsg" json:"chvMsg,omitempty"`                // 輸出
}

func (x *NetProfitAgentWithDrawOrderMsg) Reset() {
	*x = NetProfitAgentWithDrawOrderMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetProfitAgentWithDrawOrderMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetProfitAgentWithDrawOrderMsg) ProtoMessage() {}

func (x *NetProfitAgentWithDrawOrderMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetProfitAgentWithDrawOrderMsg.ProtoReflect.Descriptor instead.
func (*NetProfitAgentWithDrawOrderMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{108}
}

func (x *NetProfitAgentWithDrawOrderMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *NetProfitAgentWithDrawOrderMsg) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *NetProfitAgentWithDrawOrderMsg) GetAmount() int32 {
	if x != nil && x.Amount != nil {
		return *x.Amount
	}
	return 0
}

func (x *NetProfitAgentWithDrawOrderMsg) GetChvMsg() string {
	if x != nil && x.ChvMsg != nil {
		return *x.ChvMsg
	}
	return ""
}

// 申請提現(淨利潤)
type NetProfitAgentWithDrawOrderMsgRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChvMsg *string `protobuf:"bytes,1,req,name=chvMsg" json:"chvMsg,omitempty"` // 訊息
}

func (x *NetProfitAgentWithDrawOrderMsgRet) Reset() {
	*x = NetProfitAgentWithDrawOrderMsgRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetProfitAgentWithDrawOrderMsgRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetProfitAgentWithDrawOrderMsgRet) ProtoMessage() {}

func (x *NetProfitAgentWithDrawOrderMsgRet) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetProfitAgentWithDrawOrderMsgRet.ProtoReflect.Descriptor instead.
func (*NetProfitAgentWithDrawOrderMsgRet) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{109}
}

func (x *NetProfitAgentWithDrawOrderMsgRet) GetChvMsg() string {
	if x != nil && x.ChvMsg != nil {
		return *x.ChvMsg
	}
	return ""
}

//查詢渠道可以看到的遊戲區廳Flag
type GetShowGameFlagByAreaMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area_ID *int32 `protobuf:"varint,1,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *GetShowGameFlagByAreaMsg) Reset() {
	*x = GetShowGameFlagByAreaMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShowGameFlagByAreaMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShowGameFlagByAreaMsg) ProtoMessage() {}

func (x *GetShowGameFlagByAreaMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShowGameFlagByAreaMsg.ProtoReflect.Descriptor instead.
func (*GetShowGameFlagByAreaMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{110}
}

func (x *GetShowGameFlagByAreaMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 審核代理申請列表(淨利潤)
type NetProfitAgentApplyListMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area_ID *int32 `protobuf:"varint,1,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
	UserID  *int32 `protobuf:"varint,2,req,name=UserID" json:"UserID,omitempty"`
}

func (x *NetProfitAgentApplyListMsg) Reset() {
	*x = NetProfitAgentApplyListMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetProfitAgentApplyListMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetProfitAgentApplyListMsg) ProtoMessage() {}

func (x *NetProfitAgentApplyListMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetProfitAgentApplyListMsg.ProtoReflect.Descriptor instead.
func (*NetProfitAgentApplyListMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{111}
}

func (x *NetProfitAgentApplyListMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *NetProfitAgentApplyListMsg) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

// 審核代理申請列表(淨利潤)
type NetProfitAgentApplyListRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplyListList []*NetProfitAgentApplyListList `protobuf:"bytes,1,rep,name=ApplyListList" json:"ApplyListList,omitempty"`
}

func (x *NetProfitAgentApplyListRet) Reset() {
	*x = NetProfitAgentApplyListRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetProfitAgentApplyListRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetProfitAgentApplyListRet) ProtoMessage() {}

func (x *NetProfitAgentApplyListRet) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetProfitAgentApplyListRet.ProtoReflect.Descriptor instead.
func (*NetProfitAgentApplyListRet) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{112}
}

func (x *NetProfitAgentApplyListRet) GetApplyListList() []*NetProfitAgentApplyListList {
	if x != nil {
		return x.ApplyListList
	}
	return nil
}

// 審核代理申請列表(淨利潤)
type NetProfitAgentApplyListList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplyUser   *int32  `protobuf:"varint,1,req,name=ApplyUser" json:"ApplyUser,omitempty"`
	NickName    *string `protobuf:"bytes,2,req,name=NickName" json:"NickName,omitempty"`
	TopUserID   *int32  `protobuf:"varint,3,req,name=TopUserID" json:"TopUserID,omitempty"`
	TopUserName *string `protobuf:"bytes,4,req,name=TopUserName" json:"TopUserName,omitempty"`
	CreateTime  *string `protobuf:"bytes,5,req,name=CreateTime" json:"CreateTime,omitempty"`
	Status      *string `protobuf:"bytes,6,req,name=Status" json:"Status,omitempty"`
	UpdateTime  *string `protobuf:"bytes,7,req,name=UpdateTime" json:"UpdateTime,omitempty"`
}

func (x *NetProfitAgentApplyListList) Reset() {
	*x = NetProfitAgentApplyListList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetProfitAgentApplyListList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetProfitAgentApplyListList) ProtoMessage() {}

func (x *NetProfitAgentApplyListList) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetProfitAgentApplyListList.ProtoReflect.Descriptor instead.
func (*NetProfitAgentApplyListList) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{113}
}

func (x *NetProfitAgentApplyListList) GetApplyUser() int32 {
	if x != nil && x.ApplyUser != nil {
		return *x.ApplyUser
	}
	return 0
}

func (x *NetProfitAgentApplyListList) GetNickName() string {
	if x != nil && x.NickName != nil {
		return *x.NickName
	}
	return ""
}

func (x *NetProfitAgentApplyListList) GetTopUserID() int32 {
	if x != nil && x.TopUserID != nil {
		return *x.TopUserID
	}
	return 0
}

func (x *NetProfitAgentApplyListList) GetTopUserName() string {
	if x != nil && x.TopUserName != nil {
		return *x.TopUserName
	}
	return ""
}

func (x *NetProfitAgentApplyListList) GetCreateTime() string {
	if x != nil && x.CreateTime != nil {
		return *x.CreateTime
	}
	return ""
}

func (x *NetProfitAgentApplyListList) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *NetProfitAgentApplyListList) GetUpdateTime() string {
	if x != nil && x.UpdateTime != nil {
		return *x.UpdateTime
	}
	return ""
}

// 回傳今日兌換詳情
type NetProfitGetWithdrawDetailMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area_ID  *int32 `protobuf:"varint,1,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
	UserID   *int32 `protobuf:"varint,2,req,name=UserID" json:"UserID,omitempty"`
	Datetime *int32 `protobuf:"varint,3,req,name=Datetime" json:"Datetime,omitempty"` //查詢日期
}

func (x *NetProfitGetWithdrawDetailMsg) Reset() {
	*x = NetProfitGetWithdrawDetailMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetProfitGetWithdrawDetailMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetProfitGetWithdrawDetailMsg) ProtoMessage() {}

func (x *NetProfitGetWithdrawDetailMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetProfitGetWithdrawDetailMsg.ProtoReflect.Descriptor instead.
func (*NetProfitGetWithdrawDetailMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{114}
}

func (x *NetProfitGetWithdrawDetailMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *NetProfitGetWithdrawDetailMsg) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *NetProfitGetWithdrawDetailMsg) GetDatetime() int32 {
	if x != nil && x.Datetime != nil {
		return *x.Datetime
	}
	return 0
}

// 回復兌換詳情(淨利潤)
type NetProfitGetWithdrawDetailRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	YesterdayRecharge *int32                            `protobuf:"varint,1,req,name=YesterdayRecharge" json:"YesterdayRecharge,omitempty"` // 昨天充值
	Sum               *int32                            `protobuf:"varint,2,req,name=Sum" json:"Sum,omitempty"`                             // 總利潤
	LogList           []*NetProfitGetWithdrawDetailList `protobuf:"bytes,3,rep,name=LogList" json:"LogList,omitempty"`                      // 兌換詳情列表
}

func (x *NetProfitGetWithdrawDetailRet) Reset() {
	*x = NetProfitGetWithdrawDetailRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetProfitGetWithdrawDetailRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetProfitGetWithdrawDetailRet) ProtoMessage() {}

func (x *NetProfitGetWithdrawDetailRet) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetProfitGetWithdrawDetailRet.ProtoReflect.Descriptor instead.
func (*NetProfitGetWithdrawDetailRet) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{115}
}

func (x *NetProfitGetWithdrawDetailRet) GetYesterdayRecharge() int32 {
	if x != nil && x.YesterdayRecharge != nil {
		return *x.YesterdayRecharge
	}
	return 0
}

func (x *NetProfitGetWithdrawDetailRet) GetSum() int32 {
	if x != nil && x.Sum != nil {
		return *x.Sum
	}
	return 0
}

func (x *NetProfitGetWithdrawDetailRet) GetLogList() []*NetProfitGetWithdrawDetailList {
	if x != nil {
		return x.LogList
	}
	return nil
}

// 回復兌換詳情(淨利潤)
type NetProfitGetWithdrawDetailList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	YesterdayRecharge *int32                          `protobuf:"varint,1,req,name=YesterdayRecharge" json:"YesterdayRecharge,omitempty"` // 昨天充值
	Sum               *int32                          `protobuf:"varint,2,req,name=Sum" json:"Sum,omitempty"`                             // 總利潤
	LogList           *NetProfitGetWithdrawDetailList `protobuf:"bytes,3,req,name=LogList" json:"LogList,omitempty"`                      // 兌換詳情列表
}

func (x *NetProfitGetWithdrawDetailList) Reset() {
	*x = NetProfitGetWithdrawDetailList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetProfitGetWithdrawDetailList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetProfitGetWithdrawDetailList) ProtoMessage() {}

func (x *NetProfitGetWithdrawDetailList) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetProfitGetWithdrawDetailList.ProtoReflect.Descriptor instead.
func (*NetProfitGetWithdrawDetailList) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{116}
}

func (x *NetProfitGetWithdrawDetailList) GetYesterdayRecharge() int32 {
	if x != nil && x.YesterdayRecharge != nil {
		return *x.YesterdayRecharge
	}
	return 0
}

func (x *NetProfitGetWithdrawDetailList) GetSum() int32 {
	if x != nil && x.Sum != nil {
		return *x.Sum
	}
	return 0
}

func (x *NetProfitGetWithdrawDetailList) GetLogList() *NetProfitGetWithdrawDetailList {
	if x != nil {
		return x.LogList
	}
	return nil
}

// 推廣信息(淨利潤)
type NetProfitAgentGetAgentDetailMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area_ID *int32  `protobuf:"varint,1,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
	UserID  *int32  `protobuf:"varint,2,req,name=UserID" json:"UserID,omitempty"`
	ChvMsg  *string `protobuf:"bytes,4,opt,name=chvMsg" json:"chvMsg,omitempty"` // 輸出
}

func (x *NetProfitAgentGetAgentDetailMsg) Reset() {
	*x = NetProfitAgentGetAgentDetailMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetProfitAgentGetAgentDetailMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetProfitAgentGetAgentDetailMsg) ProtoMessage() {}

func (x *NetProfitAgentGetAgentDetailMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetProfitAgentGetAgentDetailMsg.ProtoReflect.Descriptor instead.
func (*NetProfitAgentGetAgentDetailMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{117}
}

func (x *NetProfitAgentGetAgentDetailMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *NetProfitAgentGetAgentDetailMsg) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *NetProfitAgentGetAgentDetailMsg) GetChvMsg() string {
	if x != nil && x.ChvMsg != nil {
		return *x.ChvMsg
	}
	return ""
}

// 推廣信息(淨利潤)
type NetProfitAgentGetAgentDetailRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rate             *int32  `protobuf:"varint,1,req,name=rate" json:"rate,omitempty"`                          // 我的分成比例
	SumbonusAmount   *int32  `protobuf:"varint,2,req,name=sumbonusAmount" json:"sumbonusAmount,omitempty"`      // 總利潤
	Poolamount       *int32  `protobuf:"varint,3,req,name=poolamount" json:"poolamount,omitempty"`              // 可提現今額
	Newagenttoday    *int32  `protobuf:"varint,4,req,name=newagenttoday" json:"newagenttoday,omitempty"`        // 今日新增代理
	Newagentlast     *int32  `protobuf:"varint,5,req,name=newagentlast" json:"newagentlast,omitempty"`          // 昨日新增代理
	Totalagentuser   *int32  `protobuf:"varint,6,req,name=totalagentuser" json:"totalagentuser,omitempty"`      // 所有代理
	Newusertoday     *int32  `protobuf:"varint,7,req,name=newusertoday" json:"newusertoday,omitempty"`          // 今日新增玩家
	Chargelast       *int32  `protobuf:"varint,8,req,name=chargelast" json:"chargelast,omitempty"`              // 昨日充值
	Convertlast      *int32  `protobuf:"varint,10,req,name=convertlast" json:"convertlast,omitempty"`           // 昨日兌換
	Bonusamountlast  *int32  `protobuf:"varint,11,req,name=bonusamountlast" json:"bonusamountlast,omitempty"`   // 昨日淨利潤
	Chargetoday      *int32  `protobuf:"varint,12,req,name=chargetoday" json:"chargetoday,omitempty"`           // 今日充值
	Converttoday     *int32  `protobuf:"varint,13,req,name=converttoday" json:"converttoday,omitempty"`         // 今日兌換
	Bonusamounttoday *int32  `protobuf:"varint,14,req,name=bonusamounttoday" json:"bonusamounttoday,omitempty"` // 今日淨利潤
	Payusertoday     *int32  `protobuf:"varint,15,req,name=payusertoday" json:"payusertoday,omitempty"`         // 今日付費用戶
	Payuserlast      *int32  `protobuf:"varint,16,req,name=payuserlast" json:"payuserlast,omitempty"`           // 昨日付費用戶
	Storageamount    *int32  `protobuf:"varint,17,req,name=storageamount" json:"storageamount,omitempty"`       // 庫存金幣
	Qrurl            *string `protobuf:"bytes,18,req,name=qrurl" json:"qrurl,omitempty"`                        // 我的推廣連結
	Withdrawsecs     *int32  `protobuf:"varint,19,req,name=withdrawsecs" json:"withdrawsecs,omitempty"`         // 提現倒數計時
	ChvMsg           *string `protobuf:"bytes,20,req,name=ChvMsg" json:"ChvMsg,omitempty"`                      // 訊息
}

func (x *NetProfitAgentGetAgentDetailRet) Reset() {
	*x = NetProfitAgentGetAgentDetailRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetProfitAgentGetAgentDetailRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetProfitAgentGetAgentDetailRet) ProtoMessage() {}

func (x *NetProfitAgentGetAgentDetailRet) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetProfitAgentGetAgentDetailRet.ProtoReflect.Descriptor instead.
func (*NetProfitAgentGetAgentDetailRet) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{118}
}

func (x *NetProfitAgentGetAgentDetailRet) GetRate() int32 {
	if x != nil && x.Rate != nil {
		return *x.Rate
	}
	return 0
}

func (x *NetProfitAgentGetAgentDetailRet) GetSumbonusAmount() int32 {
	if x != nil && x.SumbonusAmount != nil {
		return *x.SumbonusAmount
	}
	return 0
}

func (x *NetProfitAgentGetAgentDetailRet) GetPoolamount() int32 {
	if x != nil && x.Poolamount != nil {
		return *x.Poolamount
	}
	return 0
}

func (x *NetProfitAgentGetAgentDetailRet) GetNewagenttoday() int32 {
	if x != nil && x.Newagenttoday != nil {
		return *x.Newagenttoday
	}
	return 0
}

func (x *NetProfitAgentGetAgentDetailRet) GetNewagentlast() int32 {
	if x != nil && x.Newagentlast != nil {
		return *x.Newagentlast
	}
	return 0
}

func (x *NetProfitAgentGetAgentDetailRet) GetTotalagentuser() int32 {
	if x != nil && x.Totalagentuser != nil {
		return *x.Totalagentuser
	}
	return 0
}

func (x *NetProfitAgentGetAgentDetailRet) GetNewusertoday() int32 {
	if x != nil && x.Newusertoday != nil {
		return *x.Newusertoday
	}
	return 0
}

func (x *NetProfitAgentGetAgentDetailRet) GetChargelast() int32 {
	if x != nil && x.Chargelast != nil {
		return *x.Chargelast
	}
	return 0
}

func (x *NetProfitAgentGetAgentDetailRet) GetConvertlast() int32 {
	if x != nil && x.Convertlast != nil {
		return *x.Convertlast
	}
	return 0
}

func (x *NetProfitAgentGetAgentDetailRet) GetBonusamountlast() int32 {
	if x != nil && x.Bonusamountlast != nil {
		return *x.Bonusamountlast
	}
	return 0
}

func (x *NetProfitAgentGetAgentDetailRet) GetChargetoday() int32 {
	if x != nil && x.Chargetoday != nil {
		return *x.Chargetoday
	}
	return 0
}

func (x *NetProfitAgentGetAgentDetailRet) GetConverttoday() int32 {
	if x != nil && x.Converttoday != nil {
		return *x.Converttoday
	}
	return 0
}

func (x *NetProfitAgentGetAgentDetailRet) GetBonusamounttoday() int32 {
	if x != nil && x.Bonusamounttoday != nil {
		return *x.Bonusamounttoday
	}
	return 0
}

func (x *NetProfitAgentGetAgentDetailRet) GetPayusertoday() int32 {
	if x != nil && x.Payusertoday != nil {
		return *x.Payusertoday
	}
	return 0
}

func (x *NetProfitAgentGetAgentDetailRet) GetPayuserlast() int32 {
	if x != nil && x.Payuserlast != nil {
		return *x.Payuserlast
	}
	return 0
}

func (x *NetProfitAgentGetAgentDetailRet) GetStorageamount() int32 {
	if x != nil && x.Storageamount != nil {
		return *x.Storageamount
	}
	return 0
}

func (x *NetProfitAgentGetAgentDetailRet) GetQrurl() string {
	if x != nil && x.Qrurl != nil {
		return *x.Qrurl
	}
	return ""
}

func (x *NetProfitAgentGetAgentDetailRet) GetWithdrawsecs() int32 {
	if x != nil && x.Withdrawsecs != nil {
		return *x.Withdrawsecs
	}
	return 0
}

func (x *NetProfitAgentGetAgentDetailRet) GetChvMsg() string {
	if x != nil && x.ChvMsg != nil {
		return *x.ChvMsg
	}
	return ""
}

// USER 新增代理(淨利潤)
type NetProfitAgentGetAgentReportLogMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area_ID  *int32  `protobuf:"varint,1,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
	UserID   *int32  `protobuf:"varint,2,req,name=UserID" json:"UserID,omitempty"`
	Datetime *string `protobuf:"bytes,3,req,name=Datetime" json:"Datetime,omitempty"` //查詢日期
}

func (x *NetProfitAgentGetAgentReportLogMsg) Reset() {
	*x = NetProfitAgentGetAgentReportLogMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetProfitAgentGetAgentReportLogMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetProfitAgentGetAgentReportLogMsg) ProtoMessage() {}

func (x *NetProfitAgentGetAgentReportLogMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetProfitAgentGetAgentReportLogMsg.ProtoReflect.Descriptor instead.
func (*NetProfitAgentGetAgentReportLogMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{119}
}

func (x *NetProfitAgentGetAgentReportLogMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *NetProfitAgentGetAgentReportLogMsg) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *NetProfitAgentGetAgentReportLogMsg) GetDatetime() string {
	if x != nil && x.Datetime != nil {
		return *x.Datetime
	}
	return ""
}

// USER 新增代理(淨利潤)
type NetProfitAgentGetAgentReportLogRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Totallastdate         *int32                                 `protobuf:"varint,1,req,name=totallastdate" json:"totallastdate,omitempty"` // 昨天充值
	Totalagentuser        *int32                                 `protobuf:"varint,2,req,name=totalagentuser" json:"totalagentuser,omitempty"`
	GetWithdrawDetailList []*NetProfitAgentGetAgentReportLogList `protobuf:"bytes,3,rep,name=GetWithdrawDetailList" json:"GetWithdrawDetailList,omitempty"`
}

func (x *NetProfitAgentGetAgentReportLogRet) Reset() {
	*x = NetProfitAgentGetAgentReportLogRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetProfitAgentGetAgentReportLogRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetProfitAgentGetAgentReportLogRet) ProtoMessage() {}

func (x *NetProfitAgentGetAgentReportLogRet) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetProfitAgentGetAgentReportLogRet.ProtoReflect.Descriptor instead.
func (*NetProfitAgentGetAgentReportLogRet) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{120}
}

func (x *NetProfitAgentGetAgentReportLogRet) GetTotallastdate() int32 {
	if x != nil && x.Totallastdate != nil {
		return *x.Totallastdate
	}
	return 0
}

func (x *NetProfitAgentGetAgentReportLogRet) GetTotalagentuser() int32 {
	if x != nil && x.Totalagentuser != nil {
		return *x.Totalagentuser
	}
	return 0
}

func (x *NetProfitAgentGetAgentReportLogRet) GetGetWithdrawDetailList() []*NetProfitAgentGetAgentReportLogList {
	if x != nil {
		return x.GetWithdrawDetailList
	}
	return nil
}

// USER 新增代理(淨利潤)
type NetProfitAgentGetAgentReportLogList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Userid          *int32  `protobuf:"varint,1,req,name=userid" json:"userid,omitempty"`                   // ID
	CreateTime      *string `protobuf:"bytes,2,req,name=CreateTime" json:"CreateTime,omitempty"`            // 注冊時間
	SumSubUsers     *int32  `protobuf:"varint,3,req,name=SumSubUsers" json:"SumSubUsers,omitempty"`         // 下線人數
	SumChargeAmount *int32  `protobuf:"varint,4,req,name=SumChargeAmount" json:"SumChargeAmount,omitempty"` // 充值金額
	WithdrawAmount  *int32  `protobuf:"varint,5,req,name=WithdrawAmount" json:"WithdrawAmount,omitempty"`   // 提現總金額
	Counts          *int32  `protobuf:"varint,6,req,name=Counts" json:"Counts,omitempty"`                   // 提現金額
}

func (x *NetProfitAgentGetAgentReportLogList) Reset() {
	*x = NetProfitAgentGetAgentReportLogList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetProfitAgentGetAgentReportLogList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetProfitAgentGetAgentReportLogList) ProtoMessage() {}

func (x *NetProfitAgentGetAgentReportLogList) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetProfitAgentGetAgentReportLogList.ProtoReflect.Descriptor instead.
func (*NetProfitAgentGetAgentReportLogList) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{121}
}

func (x *NetProfitAgentGetAgentReportLogList) GetUserid() int32 {
	if x != nil && x.Userid != nil {
		return *x.Userid
	}
	return 0
}

func (x *NetProfitAgentGetAgentReportLogList) GetCreateTime() string {
	if x != nil && x.CreateTime != nil {
		return *x.CreateTime
	}
	return ""
}

func (x *NetProfitAgentGetAgentReportLogList) GetSumSubUsers() int32 {
	if x != nil && x.SumSubUsers != nil {
		return *x.SumSubUsers
	}
	return 0
}

func (x *NetProfitAgentGetAgentReportLogList) GetSumChargeAmount() int32 {
	if x != nil && x.SumChargeAmount != nil {
		return *x.SumChargeAmount
	}
	return 0
}

func (x *NetProfitAgentGetAgentReportLogList) GetWithdrawAmount() int32 {
	if x != nil && x.WithdrawAmount != nil {
		return *x.WithdrawAmount
	}
	return 0
}

func (x *NetProfitAgentGetAgentReportLogList) GetCounts() int32 {
	if x != nil && x.Counts != nil {
		return *x.Counts
	}
	return 0
}

// 查詢今日兌換詳情(淨利潤)
type NetProfitAgentGetWithdrawDetailMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area_ID  *int32  `protobuf:"varint,1,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
	UserID   *int32  `protobuf:"varint,2,req,name=UserID" json:"UserID,omitempty"`
	Datetime *string `protobuf:"bytes,3,req,name=Datetime" json:"Datetime,omitempty"` //查詢日期
}

func (x *NetProfitAgentGetWithdrawDetailMsg) Reset() {
	*x = NetProfitAgentGetWithdrawDetailMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetProfitAgentGetWithdrawDetailMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetProfitAgentGetWithdrawDetailMsg) ProtoMessage() {}

func (x *NetProfitAgentGetWithdrawDetailMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetProfitAgentGetWithdrawDetailMsg.ProtoReflect.Descriptor instead.
func (*NetProfitAgentGetWithdrawDetailMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{122}
}

func (x *NetProfitAgentGetWithdrawDetailMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *NetProfitAgentGetWithdrawDetailMsg) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *NetProfitAgentGetWithdrawDetailMsg) GetDatetime() string {
	if x != nil && x.Datetime != nil {
		return *x.Datetime
	}
	return ""
}

// 回復今日兌換詳情(淨利潤)
type NetProfitAgentGetWithdrawDetailRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GetWithdrawDetailList []*NetProfitAgentGetWithdrawDetailList `protobuf:"bytes,1,rep,name=GetWithdrawDetailList" json:"GetWithdrawDetailList,omitempty"`
	Chargeamountlast      *int32                                 `protobuf:"varint,2,req,name=chargeamountlast" json:"chargeamountlast,omitempty"`
	Sum                   *int32                                 `protobuf:"varint,3,req,name=sum" json:"sum,omitempty"`
}

func (x *NetProfitAgentGetWithdrawDetailRet) Reset() {
	*x = NetProfitAgentGetWithdrawDetailRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetProfitAgentGetWithdrawDetailRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetProfitAgentGetWithdrawDetailRet) ProtoMessage() {}

func (x *NetProfitAgentGetWithdrawDetailRet) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetProfitAgentGetWithdrawDetailRet.ProtoReflect.Descriptor instead.
func (*NetProfitAgentGetWithdrawDetailRet) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{123}
}

func (x *NetProfitAgentGetWithdrawDetailRet) GetGetWithdrawDetailList() []*NetProfitAgentGetWithdrawDetailList {
	if x != nil {
		return x.GetWithdrawDetailList
	}
	return nil
}

func (x *NetProfitAgentGetWithdrawDetailRet) GetChargeamountlast() int32 {
	if x != nil && x.Chargeamountlast != nil {
		return *x.Chargeamountlast
	}
	return 0
}

func (x *NetProfitAgentGetWithdrawDetailRet) GetSum() int32 {
	if x != nil && x.Sum != nil {
		return *x.Sum
	}
	return 0
}

// 今日兌換詳情列表
type NetProfitAgentGetWithdrawDetailList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogDate       *string `protobuf:"bytes,1,req,name=LogDate" json:"LogDate,omitempty"`              // 日期
	UserID        *int32  `protobuf:"varint,2,req,name=UserID" json:"UserID,omitempty"`               // ID
	ChargeAmount  *int32  `protobuf:"varint,3,req,name=ChargeAmount" json:"ChargeAmount,omitempty"`   // 充值
	ConvertAmount *int32  `protobuf:"varint,4,req,name=ConvertAmount" json:"ConvertAmount,omitempty"` // 兌換
	StorageAmount *int32  `protobuf:"varint,5,req,name=StorageAmount" json:"StorageAmount,omitempty"` // 庫存
	BonusAmount   *int32  `protobuf:"varint,6,req,name=BonusAmount" json:"BonusAmount,omitempty"`     // 淨利潤
}

func (x *NetProfitAgentGetWithdrawDetailList) Reset() {
	*x = NetProfitAgentGetWithdrawDetailList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetProfitAgentGetWithdrawDetailList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetProfitAgentGetWithdrawDetailList) ProtoMessage() {}

func (x *NetProfitAgentGetWithdrawDetailList) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetProfitAgentGetWithdrawDetailList.ProtoReflect.Descriptor instead.
func (*NetProfitAgentGetWithdrawDetailList) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{124}
}

func (x *NetProfitAgentGetWithdrawDetailList) GetLogDate() string {
	if x != nil && x.LogDate != nil {
		return *x.LogDate
	}
	return ""
}

func (x *NetProfitAgentGetWithdrawDetailList) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *NetProfitAgentGetWithdrawDetailList) GetChargeAmount() int32 {
	if x != nil && x.ChargeAmount != nil {
		return *x.ChargeAmount
	}
	return 0
}

func (x *NetProfitAgentGetWithdrawDetailList) GetConvertAmount() int32 {
	if x != nil && x.ConvertAmount != nil {
		return *x.ConvertAmount
	}
	return 0
}

func (x *NetProfitAgentGetWithdrawDetailList) GetStorageAmount() int32 {
	if x != nil && x.StorageAmount != nil {
		return *x.StorageAmount
	}
	return 0
}

func (x *NetProfitAgentGetWithdrawDetailList) GetBonusAmount() int32 {
	if x != nil && x.BonusAmount != nil {
		return *x.BonusAmount
	}
	return 0
}

// USER 取得已開的模式
type UserAgentUserModeGetMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area_ID *int32 `protobuf:"varint,1,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
	UserID  *int32 `protobuf:"varint,2,req,name=UserID" json:"UserID,omitempty"`
}

func (x *UserAgentUserModeGetMsg) Reset() {
	*x = UserAgentUserModeGetMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAgentUserModeGetMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAgentUserModeGetMsg) ProtoMessage() {}

func (x *UserAgentUserModeGetMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAgentUserModeGetMsg.ProtoReflect.Descriptor instead.
func (*UserAgentUserModeGetMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{125}
}

func (x *UserAgentUserModeGetMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *UserAgentUserModeGetMsg) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

// USER 取得已開的模式
type UserAgentUserModeGetRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Userid *int32  `protobuf:"varint,1,req,name=userid" json:"userid,omitempty"`
	Mode1  *int32  `protobuf:"varint,2,req,name=Mode1" json:"Mode1,omitempty"`
	Mode2  *int32  `protobuf:"varint,3,req,name=Mode2" json:"Mode2,omitempty"`
	Mode3  *int32  `protobuf:"varint,4,req,name=Mode3" json:"Mode3,omitempty"`
	Mode4  *int32  `protobuf:"varint,5,req,name=Mode4" json:"Mode4,omitempty"`
	Mode5  *int32  `protobuf:"varint,6,req,name=Mode5" json:"Mode5,omitempty"`
	Mode6  *int32  `protobuf:"varint,7,req,name=Mode6" json:"Mode6,omitempty"`
	ChvMsg *string `protobuf:"bytes,8,req,name=chvMsg" json:"chvMsg,omitempty"`
}

func (x *UserAgentUserModeGetRet) Reset() {
	*x = UserAgentUserModeGetRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAgentUserModeGetRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAgentUserModeGetRet) ProtoMessage() {}

func (x *UserAgentUserModeGetRet) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAgentUserModeGetRet.ProtoReflect.Descriptor instead.
func (*UserAgentUserModeGetRet) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{126}
}

func (x *UserAgentUserModeGetRet) GetUserid() int32 {
	if x != nil && x.Userid != nil {
		return *x.Userid
	}
	return 0
}

func (x *UserAgentUserModeGetRet) GetMode1() int32 {
	if x != nil && x.Mode1 != nil {
		return *x.Mode1
	}
	return 0
}

func (x *UserAgentUserModeGetRet) GetMode2() int32 {
	if x != nil && x.Mode2 != nil {
		return *x.Mode2
	}
	return 0
}

func (x *UserAgentUserModeGetRet) GetMode3() int32 {
	if x != nil && x.Mode3 != nil {
		return *x.Mode3
	}
	return 0
}

func (x *UserAgentUserModeGetRet) GetMode4() int32 {
	if x != nil && x.Mode4 != nil {
		return *x.Mode4
	}
	return 0
}

func (x *UserAgentUserModeGetRet) GetMode5() int32 {
	if x != nil && x.Mode5 != nil {
		return *x.Mode5
	}
	return 0
}

func (x *UserAgentUserModeGetRet) GetMode6() int32 {
	if x != nil && x.Mode6 != nil {
		return *x.Mode6
	}
	return 0
}

func (x *UserAgentUserModeGetRet) GetChvMsg() string {
	if x != nil && x.ChvMsg != nil {
		return *x.ChvMsg
	}
	return ""
}

// 全民代理(無限級)
type UserAgentGetWithAmountMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area_ID        *int32 `protobuf:"varint,1,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
	UserID         *int32 `protobuf:"varint,2,req,name=UserID" json:"UserID,omitempty"`
	WithdrawAmount *int32 `protobuf:"varint,3,req,name=WithdrawAmount" json:"WithdrawAmount,omitempty"` //提取金額
}

func (x *UserAgentGetWithAmountMsg) Reset() {
	*x = UserAgentGetWithAmountMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAgentGetWithAmountMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAgentGetWithAmountMsg) ProtoMessage() {}

func (x *UserAgentGetWithAmountMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAgentGetWithAmountMsg.ProtoReflect.Descriptor instead.
func (*UserAgentGetWithAmountMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{127}
}

func (x *UserAgentGetWithAmountMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *UserAgentGetWithAmountMsg) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *UserAgentGetWithAmountMsg) GetWithdrawAmount() int32 {
	if x != nil && x.WithdrawAmount != nil {
		return *x.WithdrawAmount
	}
	return 0
}

// 全民代理(無限級)
type UserAgentGetWithAmountRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *int32 `protobuf:"varint,1,req,name=Status" json:"Status,omitempty"` // 回傳整數1代表成功，回傳整數0代表失敗
}

func (x *UserAgentGetWithAmountRet) Reset() {
	*x = UserAgentGetWithAmountRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAgentGetWithAmountRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAgentGetWithAmountRet) ProtoMessage() {}

func (x *UserAgentGetWithAmountRet) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAgentGetWithAmountRet.ProtoReflect.Descriptor instead.
func (*UserAgentGetWithAmountRet) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{128}
}

func (x *UserAgentGetWithAmountRet) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

// 我的玩家(無限級)
type UserAgentGetWithAmountListMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area_ID   *int32 `protobuf:"varint,1,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
	UserID    *int32 `protobuf:"varint,2,req,name=UserID" json:"UserID,omitempty"`
	TargetID  *int32 `protobuf:"varint,3,req,name=TargetID" json:"TargetID,omitempty"` // 查詢玩家ID，當零時是查全部
	PageIndex *int32 `protobuf:"varint,4,req,name=PageIndex" json:"PageIndex,omitempty"`
	PageSize  *int32 `protobuf:"varint,5,req,name=PageSize" json:"PageSize,omitempty"`
}

func (x *UserAgentGetWithAmountListMsg) Reset() {
	*x = UserAgentGetWithAmountListMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAgentGetWithAmountListMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAgentGetWithAmountListMsg) ProtoMessage() {}

func (x *UserAgentGetWithAmountListMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAgentGetWithAmountListMsg.ProtoReflect.Descriptor instead.
func (*UserAgentGetWithAmountListMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{129}
}

func (x *UserAgentGetWithAmountListMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *UserAgentGetWithAmountListMsg) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *UserAgentGetWithAmountListMsg) GetTargetID() int32 {
	if x != nil && x.TargetID != nil {
		return *x.TargetID
	}
	return 0
}

func (x *UserAgentGetWithAmountListMsg) GetPageIndex() int32 {
	if x != nil && x.PageIndex != nil {
		return *x.PageIndex
	}
	return 0
}

func (x *UserAgentGetWithAmountListMsg) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

// 我的玩家(無限級)
type UserAgentGetWithAmountListRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageCount                  *int32                               `protobuf:"varint,1,req,name=PageCount" json:"PageCount,omitempty"`
	UserAgentGetWithAmountList []*UserAgentGetWithAmountListRetList `protobuf:"bytes,2,rep,name=UserAgentGetWithAmountList" json:"UserAgentGetWithAmountList,omitempty"`
}

func (x *UserAgentGetWithAmountListRet) Reset() {
	*x = UserAgentGetWithAmountListRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAgentGetWithAmountListRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAgentGetWithAmountListRet) ProtoMessage() {}

func (x *UserAgentGetWithAmountListRet) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAgentGetWithAmountListRet.ProtoReflect.Descriptor instead.
func (*UserAgentGetWithAmountListRet) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{130}
}

func (x *UserAgentGetWithAmountListRet) GetPageCount() int32 {
	if x != nil && x.PageCount != nil {
		return *x.PageCount
	}
	return 0
}

func (x *UserAgentGetWithAmountListRet) GetUserAgentGetWithAmountList() []*UserAgentGetWithAmountListRetList {
	if x != nil {
		return x.UserAgentGetWithAmountList
	}
	return nil
}

// 我的玩家(無限級)
type UserAgentGetWithAmountListRetList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Userid        *int32  `protobuf:"varint,1,req,name=Userid" json:"Userid,omitempty"`               // 使用者ID
	Nickname      *string `protobuf:"bytes,2,req,name=Nickname" json:"Nickname,omitempty"`            // 使用者ID
	Groupoffer    *int32  `protobuf:"varint,3,req,name=Groupoffer" json:"Groupoffer,omitempty"`       // 本周團對貢獻
	Playeroffer   *int32  `protobuf:"varint,4,req,name=Playeroffer" json:"Playeroffer,omitempty"`     // 本周玩家貢獻
	Membernumbers *int32  `protobuf:"varint,5,req,name=Membernumbers" json:"Membernumbers,omitempty"` // 團對人數
	// required int32 Agent=6; // 直屬下線人數
	Belongs *int32 `protobuf:"varint,6,req,name=Belongs" json:"Belongs,omitempty"` // 真屬玩家
	Type    *int32 `protobuf:"varint,7,req,name=Type" json:"Type,omitempty"`       // 類型
}

func (x *UserAgentGetWithAmountListRetList) Reset() {
	*x = UserAgentGetWithAmountListRetList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAgentGetWithAmountListRetList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAgentGetWithAmountListRetList) ProtoMessage() {}

func (x *UserAgentGetWithAmountListRetList) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAgentGetWithAmountListRetList.ProtoReflect.Descriptor instead.
func (*UserAgentGetWithAmountListRetList) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{131}
}

func (x *UserAgentGetWithAmountListRetList) GetUserid() int32 {
	if x != nil && x.Userid != nil {
		return *x.Userid
	}
	return 0
}

func (x *UserAgentGetWithAmountListRetList) GetNickname() string {
	if x != nil && x.Nickname != nil {
		return *x.Nickname
	}
	return ""
}

func (x *UserAgentGetWithAmountListRetList) GetGroupoffer() int32 {
	if x != nil && x.Groupoffer != nil {
		return *x.Groupoffer
	}
	return 0
}

func (x *UserAgentGetWithAmountListRetList) GetPlayeroffer() int32 {
	if x != nil && x.Playeroffer != nil {
		return *x.Playeroffer
	}
	return 0
}

func (x *UserAgentGetWithAmountListRetList) GetMembernumbers() int32 {
	if x != nil && x.Membernumbers != nil {
		return *x.Membernumbers
	}
	return 0
}

func (x *UserAgentGetWithAmountListRetList) GetBelongs() int32 {
	if x != nil && x.Belongs != nil {
		return *x.Belongs
	}
	return 0
}

func (x *UserAgentGetWithAmountListRetList) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

// 申請提現例表 我的提現 (無限級)
type UserAgentGetWithdrawAmountListMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area_ID   *int32 `protobuf:"varint,1,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
	UserID    *int32 `protobuf:"varint,2,req,name=UserID" json:"UserID,omitempty"`
	PageIndex *int32 `protobuf:"varint,3,req,name=PageIndex" json:"PageIndex,omitempty"`
	PageSize  *int32 `protobuf:"varint,4,req,name=PageSize" json:"PageSize,omitempty"`
}

func (x *UserAgentGetWithdrawAmountListMsg) Reset() {
	*x = UserAgentGetWithdrawAmountListMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAgentGetWithdrawAmountListMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAgentGetWithdrawAmountListMsg) ProtoMessage() {}

func (x *UserAgentGetWithdrawAmountListMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAgentGetWithdrawAmountListMsg.ProtoReflect.Descriptor instead.
func (*UserAgentGetWithdrawAmountListMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{132}
}

func (x *UserAgentGetWithdrawAmountListMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *UserAgentGetWithdrawAmountListMsg) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *UserAgentGetWithdrawAmountListMsg) GetPageIndex() int32 {
	if x != nil && x.PageIndex != nil {
		return *x.PageIndex
	}
	return 0
}

func (x *UserAgentGetWithdrawAmountListMsg) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

// 申請提現例表 我的提現 (無限級)
type UserAgentGetWithdrawAmountListRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Userid                         *int32                                   `protobuf:"varint,1,req,name=Userid" json:"Userid,omitempty"` // 使用者ID
	Bonus                          *int32                                   `protobuf:"varint,2,req,name=Bonus" json:"Bonus,omitempty"`   // 獎勵金額
	Rest                           *int32                                   `protobuf:"varint,3,req,name=Rest" json:"Rest,omitempty"`     // 己領取金額
	Allow                          *int32                                   `protobuf:"varint,4,req,name=Allow" json:"Allow,omitempty"`   // 可提現金額
	Pagecount                      *int32                                   `protobuf:"varint,5,req,name=Pagecount" json:"Pagecount,omitempty"`
	UserAgentGetWithdrawAmountList []*UserAgentGetWithdrawAmountListRetList `protobuf:"bytes,6,rep,name=UserAgentGetWithdrawAmountList" json:"UserAgentGetWithdrawAmountList,omitempty"` // 列表
}

func (x *UserAgentGetWithdrawAmountListRet) Reset() {
	*x = UserAgentGetWithdrawAmountListRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAgentGetWithdrawAmountListRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAgentGetWithdrawAmountListRet) ProtoMessage() {}

func (x *UserAgentGetWithdrawAmountListRet) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAgentGetWithdrawAmountListRet.ProtoReflect.Descriptor instead.
func (*UserAgentGetWithdrawAmountListRet) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{133}
}

func (x *UserAgentGetWithdrawAmountListRet) GetUserid() int32 {
	if x != nil && x.Userid != nil {
		return *x.Userid
	}
	return 0
}

func (x *UserAgentGetWithdrawAmountListRet) GetBonus() int32 {
	if x != nil && x.Bonus != nil {
		return *x.Bonus
	}
	return 0
}

func (x *UserAgentGetWithdrawAmountListRet) GetRest() int32 {
	if x != nil && x.Rest != nil {
		return *x.Rest
	}
	return 0
}

func (x *UserAgentGetWithdrawAmountListRet) GetAllow() int32 {
	if x != nil && x.Allow != nil {
		return *x.Allow
	}
	return 0
}

func (x *UserAgentGetWithdrawAmountListRet) GetPagecount() int32 {
	if x != nil && x.Pagecount != nil {
		return *x.Pagecount
	}
	return 0
}

func (x *UserAgentGetWithdrawAmountListRet) GetUserAgentGetWithdrawAmountList() []*UserAgentGetWithdrawAmountListRetList {
	if x != nil {
		return x.UserAgentGetWithdrawAmountList
	}
	return nil
}

type UserAgentGetWithdrawAmountListRetList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Datetime *string `protobuf:"bytes,1,req,name=Datetime" json:"Datetime,omitempty"` // 時間
	Noid     *int32  `protobuf:"varint,2,req,name=Noid" json:"Noid,omitempty"`        // 單號
	Amount   *int32  `protobuf:"varint,3,req,name=Amount" json:"Amount,omitempty"`    // 金額
	Type     *string `protobuf:"bytes,4,req,name=Type" json:"Type,omitempty"`         // 提現類型
	Account  *string `protobuf:"bytes,5,req,name=Account" json:"Account,omitempty"`   // 帳號
	Status   *int32  `protobuf:"varint,6,req,name=Status" json:"Status,omitempty"`    // 狀態 1 是發放 0 是未發放
}

func (x *UserAgentGetWithdrawAmountListRetList) Reset() {
	*x = UserAgentGetWithdrawAmountListRetList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAgentGetWithdrawAmountListRetList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAgentGetWithdrawAmountListRetList) ProtoMessage() {}

func (x *UserAgentGetWithdrawAmountListRetList) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAgentGetWithdrawAmountListRetList.ProtoReflect.Descriptor instead.
func (*UserAgentGetWithdrawAmountListRetList) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{134}
}

func (x *UserAgentGetWithdrawAmountListRetList) GetDatetime() string {
	if x != nil && x.Datetime != nil {
		return *x.Datetime
	}
	return ""
}

func (x *UserAgentGetWithdrawAmountListRetList) GetNoid() int32 {
	if x != nil && x.Noid != nil {
		return *x.Noid
	}
	return 0
}

func (x *UserAgentGetWithdrawAmountListRetList) GetAmount() int32 {
	if x != nil && x.Amount != nil {
		return *x.Amount
	}
	return 0
}

func (x *UserAgentGetWithdrawAmountListRetList) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *UserAgentGetWithdrawAmountListRetList) GetAccount() string {
	if x != nil && x.Account != nil {
		return *x.Account
	}
	return ""
}

func (x *UserAgentGetWithdrawAmountListRetList) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

// 我的業績(無限級)
type UserAgentResultListMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area_ID   *int32 `protobuf:"varint,1,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
	UserID    *int32 `protobuf:"varint,2,req,name=UserID" json:"UserID,omitempty"`
	PageIndex *int32 `protobuf:"varint,3,req,name=PageIndex" json:"PageIndex,omitempty"`
	PageSize  *int32 `protobuf:"varint,4,req,name=PageSize" json:"PageSize,omitempty"`
}

func (x *UserAgentResultListMsg) Reset() {
	*x = UserAgentResultListMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAgentResultListMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAgentResultListMsg) ProtoMessage() {}

func (x *UserAgentResultListMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAgentResultListMsg.ProtoReflect.Descriptor instead.
func (*UserAgentResultListMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{135}
}

func (x *UserAgentResultListMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *UserAgentResultListMsg) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *UserAgentResultListMsg) GetPageIndex() int32 {
	if x != nil && x.PageIndex != nil {
		return *x.PageIndex
	}
	return 0
}

func (x *UserAgentResultListMsg) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

// 我的業績(無限級)
type UserAgentResultListRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result              *int32                        `protobuf:"varint,1,req,name=Result" json:"Result,omitempty"`                          // 查週總業績
	Groupresult         *int32                        `protobuf:"varint,2,req,name=Groupresult" json:"Groupresult,omitempty"`                // 本週團隊業機績
	Directresult        *int32                        `protobuf:"varint,3,req,name=Directresult" json:"Directresult,omitempty"`              // 本週直屬總業績
	Bonus               *int32                        `protobuf:"varint,4,req,name=Bonus" json:"Bonus,omitempty"`                            // 金現獎勵
	PageCount           *int32                        `protobuf:"varint,5,req,name=PageCount" json:"PageCount,omitempty"`                    // 金現獎勵
	UserAgentResultList []*UserAgentResultListRetList `protobuf:"bytes,6,rep,name=UserAgentResultList" json:"UserAgentResultList,omitempty"` // 列表
}

func (x *UserAgentResultListRet) Reset() {
	*x = UserAgentResultListRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAgentResultListRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAgentResultListRet) ProtoMessage() {}

func (x *UserAgentResultListRet) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAgentResultListRet.ProtoReflect.Descriptor instead.
func (*UserAgentResultListRet) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{136}
}

func (x *UserAgentResultListRet) GetResult() int32 {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return 0
}

func (x *UserAgentResultListRet) GetGroupresult() int32 {
	if x != nil && x.Groupresult != nil {
		return *x.Groupresult
	}
	return 0
}

func (x *UserAgentResultListRet) GetDirectresult() int32 {
	if x != nil && x.Directresult != nil {
		return *x.Directresult
	}
	return 0
}

func (x *UserAgentResultListRet) GetBonus() int32 {
	if x != nil && x.Bonus != nil {
		return *x.Bonus
	}
	return 0
}

func (x *UserAgentResultListRet) GetPageCount() int32 {
	if x != nil && x.PageCount != nil {
		return *x.PageCount
	}
	return 0
}

func (x *UserAgentResultListRet) GetUserAgentResultList() []*UserAgentResultListRetList {
	if x != nil {
		return x.UserAgentResultList
	}
	return nil
}

// 我的業績(無限級)
type UserAgentResultListRetList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time            *string `protobuf:"bytes,1,req,name=Time" json:"Time,omitempty"`                        // 時間
	Dayresult       *int32  `protobuf:"varint,2,req,name=Dayresult" json:"Dayresult,omitempty"`             // 日總業綪
	Daygroupresult  *int32  `protobuf:"varint,3,req,name=Daygroupresult" json:"Daygroupresult,omitempty"`   // 日總團體業綪
	Daydirectresult *int32  `protobuf:"varint,4,req,name=Daydirectresult" json:"Daydirectresult,omitempty"` // 日直屬業績
}

func (x *UserAgentResultListRetList) Reset() {
	*x = UserAgentResultListRetList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAgentResultListRetList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAgentResultListRetList) ProtoMessage() {}

func (x *UserAgentResultListRetList) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAgentResultListRetList.ProtoReflect.Descriptor instead.
func (*UserAgentResultListRetList) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{137}
}

func (x *UserAgentResultListRetList) GetTime() string {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return ""
}

func (x *UserAgentResultListRetList) GetDayresult() int32 {
	if x != nil && x.Dayresult != nil {
		return *x.Dayresult
	}
	return 0
}

func (x *UserAgentResultListRetList) GetDaygroupresult() int32 {
	if x != nil && x.Daygroupresult != nil {
		return *x.Daygroupresult
	}
	return 0
}

func (x *UserAgentResultListRetList) GetDaydirectresult() int32 {
	if x != nil && x.Daydirectresult != nil {
		return *x.Daydirectresult
	}
	return 0
}

// 我的預提(無限級)
type UserAgentBorrowListMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area_ID   *int32 `protobuf:"varint,1,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
	UserID    *int32 `protobuf:"varint,2,req,name=UserID" json:"UserID,omitempty"`
	PageIndex *int32 `protobuf:"varint,3,req,name=PageIndex" json:"PageIndex,omitempty"` // 第幾頁
	PageSize  *int32 `protobuf:"varint,4,req,name=PageSize" json:"PageSize,omitempty"`   // 總頁數
}

func (x *UserAgentBorrowListMsg) Reset() {
	*x = UserAgentBorrowListMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAgentBorrowListMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAgentBorrowListMsg) ProtoMessage() {}

func (x *UserAgentBorrowListMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAgentBorrowListMsg.ProtoReflect.Descriptor instead.
func (*UserAgentBorrowListMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{138}
}

func (x *UserAgentBorrowListMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *UserAgentBorrowListMsg) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *UserAgentBorrowListMsg) GetPageIndex() int32 {
	if x != nil && x.PageIndex != nil {
		return *x.PageIndex
	}
	return 0
}

func (x *UserAgentBorrowListMsg) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

// 我的預提(無限級)
type UserAgentBorrowListRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bonusamount         *int32                        `protobuf:"varint,1,req,name=bonusamount" json:"bonusamount,omitempty"`           // 截止本日零點預估現金
	AmountLimit         *int32                        `protobuf:"varint,2,req,name=AmountLimit" json:"AmountLimit,omitempty"`           // 可預提現金額
	PreConvertAmount    *int32                        `protobuf:"varint,3,req,name=PreConvertAmount" json:"PreConvertAmount,omitempty"` // 己預提現金額
	RemainAmount        *int32                        `protobuf:"varint,4,req,name=RemainAmount" json:"RemainAmount,omitempty"`         // 可剩餘提領金額
	Withdrawlastweek    *int32                        `protobuf:"varint,5,req,name=withdrawlastweek" json:"withdrawlastweek,omitempty"` // 上星期己提領，在邊邊顯示的
	PageCount           *int32                        `protobuf:"varint,6,req,name=PageCount" json:"PageCount,omitempty"`               // page count
	UserAgentBorrowList []*UserAgentBorrowListRetList `protobuf:"bytes,7,rep,name=UserAgentBorrowList" json:"UserAgentBorrowList,omitempty"`
}

func (x *UserAgentBorrowListRet) Reset() {
	*x = UserAgentBorrowListRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAgentBorrowListRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAgentBorrowListRet) ProtoMessage() {}

func (x *UserAgentBorrowListRet) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAgentBorrowListRet.ProtoReflect.Descriptor instead.
func (*UserAgentBorrowListRet) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{139}
}

func (x *UserAgentBorrowListRet) GetBonusamount() int32 {
	if x != nil && x.Bonusamount != nil {
		return *x.Bonusamount
	}
	return 0
}

func (x *UserAgentBorrowListRet) GetAmountLimit() int32 {
	if x != nil && x.AmountLimit != nil {
		return *x.AmountLimit
	}
	return 0
}

func (x *UserAgentBorrowListRet) GetPreConvertAmount() int32 {
	if x != nil && x.PreConvertAmount != nil {
		return *x.PreConvertAmount
	}
	return 0
}

func (x *UserAgentBorrowListRet) GetRemainAmount() int32 {
	if x != nil && x.RemainAmount != nil {
		return *x.RemainAmount
	}
	return 0
}

func (x *UserAgentBorrowListRet) GetWithdrawlastweek() int32 {
	if x != nil && x.Withdrawlastweek != nil {
		return *x.Withdrawlastweek
	}
	return 0
}

func (x *UserAgentBorrowListRet) GetPageCount() int32 {
	if x != nil && x.PageCount != nil {
		return *x.PageCount
	}
	return 0
}

func (x *UserAgentBorrowListRet) GetUserAgentBorrowList() []*UserAgentBorrowListRetList {
	if x != nil {
		return x.UserAgentBorrowList
	}
	return nil
}

// 我的預提(無限級)
type UserAgentBorrowListRetList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogDate     *string `protobuf:"bytes,1,req,name=LogDate" json:"LogDate,omitempty"`         // 時間
	ID          *int32  `protobuf:"varint,2,req,name=ID" json:"ID,omitempty"`                  // 單號
	Amount      *int32  `protobuf:"varint,3,req,name=Amount" json:"Amount,omitempty"`          // 金額
	ConvertType *string `protobuf:"bytes,4,req,name=ConvertType" json:"ConvertType,omitempty"` // 提現類型
	Account     *string `protobuf:"bytes,5,req,name=Account" json:"Account,omitempty"`         // 提現帳號
	Status      *string `protobuf:"bytes,6,req,name=Status" json:"Status,omitempty"`           // 狀態
}

func (x *UserAgentBorrowListRetList) Reset() {
	*x = UserAgentBorrowListRetList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAgentBorrowListRetList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAgentBorrowListRetList) ProtoMessage() {}

func (x *UserAgentBorrowListRetList) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAgentBorrowListRetList.ProtoReflect.Descriptor instead.
func (*UserAgentBorrowListRetList) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{140}
}

func (x *UserAgentBorrowListRetList) GetLogDate() string {
	if x != nil && x.LogDate != nil {
		return *x.LogDate
	}
	return ""
}

func (x *UserAgentBorrowListRetList) GetID() int32 {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return 0
}

func (x *UserAgentBorrowListRetList) GetAmount() int32 {
	if x != nil && x.Amount != nil {
		return *x.Amount
	}
	return 0
}

func (x *UserAgentBorrowListRetList) GetConvertType() string {
	if x != nil && x.ConvertType != nil {
		return *x.ConvertType
	}
	return ""
}

func (x *UserAgentBorrowListRetList) GetAccount() string {
	if x != nil && x.Account != nil {
		return *x.Account
	}
	return ""
}

func (x *UserAgentBorrowListRetList) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

// 我的獎勵(無限級)
type UserAgentWinAmountListMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area_ID *int32 `protobuf:"varint,1,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
	UserID  *int32 `protobuf:"varint,2,req,name=UserID" json:"UserID,omitempty"`
}

func (x *UserAgentWinAmountListMsg) Reset() {
	*x = UserAgentWinAmountListMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAgentWinAmountListMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAgentWinAmountListMsg) ProtoMessage() {}

func (x *UserAgentWinAmountListMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAgentWinAmountListMsg.ProtoReflect.Descriptor instead.
func (*UserAgentWinAmountListMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{141}
}

func (x *UserAgentWinAmountListMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *UserAgentWinAmountListMsg) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

// 我的獎勵(無限級)
type UserAgentWinAmountListRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserAgentWinAmount []*UserAgentWinAmountListRetList `protobuf:"bytes,1,rep,name=UserAgentWinAmount" json:"UserAgentWinAmount,omitempty"` // 列表
}

func (x *UserAgentWinAmountListRet) Reset() {
	*x = UserAgentWinAmountListRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAgentWinAmountListRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAgentWinAmountListRet) ProtoMessage() {}

func (x *UserAgentWinAmountListRet) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAgentWinAmountListRet.ProtoReflect.Descriptor instead.
func (*UserAgentWinAmountListRet) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{142}
}

func (x *UserAgentWinAmountListRet) GetUserAgentWinAmount() []*UserAgentWinAmountListRetList {
	if x != nil {
		return x.UserAgentWinAmount
	}
	return nil
}

// 我的獎勵(無限級)
type UserAgentWinAmountListRetList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SendTime         *string `protobuf:"bytes,1,req,name=SendTime" json:"SendTime,omitempty"`                  // 發送時間
	Weekresult       *int32  `protobuf:"varint,2,req,name=Weekresult" json:"Weekresult,omitempty"`             // 周總業綪
	Weekgroupresult  *int32  `protobuf:"varint,3,req,name=Weekgroupresult" json:"Weekgroupresult,omitempty"`   // 周團隊業綪
	Weekdirectresult *int32  `protobuf:"varint,4,req,name=Weekdirectresult" json:"Weekdirectresult,omitempty"` // 提現類型
	Bonus            *int32  `protobuf:"varint,5,req,name=bonus" json:"bonus,omitempty"`                       // 提現帳號
	Status           *int32  `protobuf:"varint,6,req,name=Status" json:"Status,omitempty"`                     // 狀態 回傳1是可提現，其他時就回傳0
}

func (x *UserAgentWinAmountListRetList) Reset() {
	*x = UserAgentWinAmountListRetList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAgentWinAmountListRetList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAgentWinAmountListRetList) ProtoMessage() {}

func (x *UserAgentWinAmountListRetList) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAgentWinAmountListRetList.ProtoReflect.Descriptor instead.
func (*UserAgentWinAmountListRetList) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{143}
}

func (x *UserAgentWinAmountListRetList) GetSendTime() string {
	if x != nil && x.SendTime != nil {
		return *x.SendTime
	}
	return ""
}

func (x *UserAgentWinAmountListRetList) GetWeekresult() int32 {
	if x != nil && x.Weekresult != nil {
		return *x.Weekresult
	}
	return 0
}

func (x *UserAgentWinAmountListRetList) GetWeekgroupresult() int32 {
	if x != nil && x.Weekgroupresult != nil {
		return *x.Weekgroupresult
	}
	return 0
}

func (x *UserAgentWinAmountListRetList) GetWeekdirectresult() int32 {
	if x != nil && x.Weekdirectresult != nil {
		return *x.Weekdirectresult
	}
	return 0
}

func (x *UserAgentWinAmountListRetList) GetBonus() int32 {
	if x != nil && x.Bonus != nil {
		return *x.Bonus
	}
	return 0
}

func (x *UserAgentWinAmountListRetList) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

// 全民推廣QRCODE(無限級)
type GetMyPromotionMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area_ID *int32 `protobuf:"varint,1,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
	UserID  *int32 `protobuf:"varint,2,req,name=UserID" json:"UserID,omitempty"`
}

func (x *GetMyPromotionMsg) Reset() {
	*x = GetMyPromotionMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyPromotionMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyPromotionMsg) ProtoMessage() {}

func (x *GetMyPromotionMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyPromotionMsg.ProtoReflect.Descriptor instead.
func (*GetMyPromotionMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{144}
}

func (x *GetMyPromotionMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *GetMyPromotionMsg) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

// 全民推廣QRCODE(無限級)
type GetMyPromotionRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BossID            *int32  `protobuf:"varint,1,req,name=BossID" json:"BossID,omitempty"`                       // 上級ID
	TeamMember        *int32  `protobuf:"varint,2,req,name=TeamMember" json:"TeamMember,omitempty"`               // 團隊人數
	MyMember          *int32  `protobuf:"varint,3,req,name=MyMember" json:"MyMember,omitempty"`                   // 直屬下線人數
	TodayNewMember    *int32  `protobuf:"varint,4,req,name=TodayNewMember" json:"TodayNewMember,omitempty"`       // 今日新增的下線人數
	TodayActiveMember *int32  `protobuf:"varint,5,req,name=TodayActiveMember" json:"TodayActiveMember,omitempty"` // 今日有登入的下線人數
	QrURL             *string `protobuf:"bytes,6,req,name=QrURL" json:"QrURL,omitempty"`                          // 我的推广二维码
	SystemTime        *string `protobuf:"bytes,7,req,name=SystemTime" json:"SystemTime,omitempty"`                // SERVER回傳系統時間
	InviteCode        *string `protobuf:"bytes,8,opt,name=InviteCode" json:"InviteCode,omitempty"`                // 邀請碼
}

func (x *GetMyPromotionRet) Reset() {
	*x = GetMyPromotionRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyPromotionRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyPromotionRet) ProtoMessage() {}

func (x *GetMyPromotionRet) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyPromotionRet.ProtoReflect.Descriptor instead.
func (*GetMyPromotionRet) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{145}
}

func (x *GetMyPromotionRet) GetBossID() int32 {
	if x != nil && x.BossID != nil {
		return *x.BossID
	}
	return 0
}

func (x *GetMyPromotionRet) GetTeamMember() int32 {
	if x != nil && x.TeamMember != nil {
		return *x.TeamMember
	}
	return 0
}

func (x *GetMyPromotionRet) GetMyMember() int32 {
	if x != nil && x.MyMember != nil {
		return *x.MyMember
	}
	return 0
}

func (x *GetMyPromotionRet) GetTodayNewMember() int32 {
	if x != nil && x.TodayNewMember != nil {
		return *x.TodayNewMember
	}
	return 0
}

func (x *GetMyPromotionRet) GetTodayActiveMember() int32 {
	if x != nil && x.TodayActiveMember != nil {
		return *x.TodayActiveMember
	}
	return 0
}

func (x *GetMyPromotionRet) GetQrURL() string {
	if x != nil && x.QrURL != nil {
		return *x.QrURL
	}
	return ""
}

func (x *GetMyPromotionRet) GetSystemTime() string {
	if x != nil && x.SystemTime != nil {
		return *x.SystemTime
	}
	return ""
}

func (x *GetMyPromotionRet) GetInviteCode() string {
	if x != nil && x.InviteCode != nil {
		return *x.InviteCode
	}
	return ""
}

// 獎勵說明(無限級)
type GetRewardTipsMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area_ID *int32 `protobuf:"varint,1,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *GetRewardTipsMsg) Reset() {
	*x = GetRewardTipsMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRewardTipsMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRewardTipsMsg) ProtoMessage() {}

func (x *GetRewardTipsMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRewardTipsMsg.ProtoReflect.Descriptor instead.
func (*GetRewardTipsMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{146}
}

func (x *GetRewardTipsMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 獎勵說明(無限級)
type GetRewardTipsRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Self                 *string                 `protobuf:"bytes,1,req,name=Self" json:"Self,omitempty"`                                 // 直销业绩
	AgentA               *string                 `protobuf:"bytes,2,req,name=AgentA" json:"AgentA,omitempty"`                             // 推广业绩A
	AgentB               *string                 `protobuf:"bytes,3,req,name=AgentB" json:"AgentB,omitempty"`                             // 推广业绩B
	AgentC               *string                 `protobuf:"bytes,4,req,name=AgentC" json:"AgentC,omitempty"`                             // 推广业绩C
	AgentD               *string                 `protobuf:"bytes,5,req,name=AgentD" json:"AgentD,omitempty"`                             // 推广业绩D
	AgentBonus           *string                 `protobuf:"bytes,6,req,name=AgentBonus" json:"AgentBonus,omitempty"`                     // 總合
	GetRewardTipsRetData []*GetRewardTipsRetList `protobuf:"bytes,7,rep,name=GetRewardTipsRetData" json:"GetRewardTipsRetData,omitempty"` // LIST資料
}

func (x *GetRewardTipsRet) Reset() {
	*x = GetRewardTipsRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRewardTipsRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRewardTipsRet) ProtoMessage() {}

func (x *GetRewardTipsRet) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRewardTipsRet.ProtoReflect.Descriptor instead.
func (*GetRewardTipsRet) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{147}
}

func (x *GetRewardTipsRet) GetSelf() string {
	if x != nil && x.Self != nil {
		return *x.Self
	}
	return ""
}

func (x *GetRewardTipsRet) GetAgentA() string {
	if x != nil && x.AgentA != nil {
		return *x.AgentA
	}
	return ""
}

func (x *GetRewardTipsRet) GetAgentB() string {
	if x != nil && x.AgentB != nil {
		return *x.AgentB
	}
	return ""
}

func (x *GetRewardTipsRet) GetAgentC() string {
	if x != nil && x.AgentC != nil {
		return *x.AgentC
	}
	return ""
}

func (x *GetRewardTipsRet) GetAgentD() string {
	if x != nil && x.AgentD != nil {
		return *x.AgentD
	}
	return ""
}

func (x *GetRewardTipsRet) GetAgentBonus() string {
	if x != nil && x.AgentBonus != nil {
		return *x.AgentBonus
	}
	return ""
}

func (x *GetRewardTipsRet) GetGetRewardTipsRetData() []*GetRewardTipsRetList {
	if x != nil {
		return x.GetRewardTipsRetData
	}
	return nil
}

// 獎勵說明(無限級)
type GetRewardTipsRetList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lv        *int32  `protobuf:"varint,1,req,name=lv" json:"lv,omitempty"`
	Name      *string `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	Minamount *int32  `protobuf:"varint,3,req,name=minamount" json:"minamount,omitempty"`
	Maxamount *int32  `protobuf:"varint,4,req,name=maxamount" json:"maxamount,omitempty"`
	BonusRate *string `protobuf:"bytes,5,req,name=BonusRate" json:"BonusRate,omitempty"`
}

func (x *GetRewardTipsRetList) Reset() {
	*x = GetRewardTipsRetList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRewardTipsRetList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRewardTipsRetList) ProtoMessage() {}

func (x *GetRewardTipsRetList) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRewardTipsRetList.ProtoReflect.Descriptor instead.
func (*GetRewardTipsRetList) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{148}
}

func (x *GetRewardTipsRetList) GetLv() int32 {
	if x != nil && x.Lv != nil {
		return *x.Lv
	}
	return 0
}

func (x *GetRewardTipsRetList) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GetRewardTipsRetList) GetMinamount() int32 {
	if x != nil && x.Minamount != nil {
		return *x.Minamount
	}
	return 0
}

func (x *GetRewardTipsRetList) GetMaxamount() int32 {
	if x != nil && x.Maxamount != nil {
		return *x.Maxamount
	}
	return 0
}

func (x *GetRewardTipsRetList) GetBonusRate() string {
	if x != nil && x.BonusRate != nil {
		return *x.BonusRate
	}
	return ""
}

// 我的提現 申請提現 按鈕 (無限級)
type UnlimitConvertOrderMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area_ID      *int32  `protobuf:"varint,1,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
	UserID       *int32  `protobuf:"varint,2,req,name=UserID" json:"UserID,omitempty"`               // 玩家ID
	Type         *int32  `protobuf:"varint,3,req,name=Type" json:"Type,omitempty"`                   // 提現類型
	ChvIPaddress *string `protobuf:"bytes,4,req,name=ChvIPaddress" json:"ChvIPaddress,omitempty"`    // IP位置
	LngAmount    *int32  `protobuf:"varint,5,req,name=LngAmount" json:"LngAmount,omitempty"`         // 提領金額
}

func (x *UnlimitConvertOrderMsg) Reset() {
	*x = UnlimitConvertOrderMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlimitConvertOrderMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlimitConvertOrderMsg) ProtoMessage() {}

func (x *UnlimitConvertOrderMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlimitConvertOrderMsg.ProtoReflect.Descriptor instead.
func (*UnlimitConvertOrderMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{149}
}

func (x *UnlimitConvertOrderMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *UnlimitConvertOrderMsg) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *UnlimitConvertOrderMsg) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *UnlimitConvertOrderMsg) GetChvIPaddress() string {
	if x != nil && x.ChvIPaddress != nil {
		return *x.ChvIPaddress
	}
	return ""
}

func (x *UnlimitConvertOrderMsg) GetLngAmount() int32 {
	if x != nil && x.LngAmount != nil {
		return *x.LngAmount
	}
	return 0
}

// 我的提現 申請提現 按鈕 (無限級)
type UnlimitConvertOrderRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChvMsg *string `protobuf:"bytes,1,req,name=ChvMsg" json:"ChvMsg,omitempty"` // 回傳結果
}

func (x *UnlimitConvertOrderRet) Reset() {
	*x = UnlimitConvertOrderRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlimitConvertOrderRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlimitConvertOrderRet) ProtoMessage() {}

func (x *UnlimitConvertOrderRet) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlimitConvertOrderRet.ProtoReflect.Descriptor instead.
func (*UnlimitConvertOrderRet) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{150}
}

func (x *UnlimitConvertOrderRet) GetChvMsg() string {
	if x != nil && x.ChvMsg != nil {
		return *x.ChvMsg
	}
	return ""
}

// 我的預提 申請提現 按鈕 (無限級)
type UnlimitPreConvertOrderMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area_ID *int32 `protobuf:"varint,1,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
	UserID  *int32 `protobuf:"varint,2,req,name=UserID" json:"UserID,omitempty"`               // 玩家ID
	Amount  *int32 `protobuf:"varint,3,req,name=Amount" json:"Amount,omitempty"`               // 提取金額
}

func (x *UnlimitPreConvertOrderMsg) Reset() {
	*x = UnlimitPreConvertOrderMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlimitPreConvertOrderMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlimitPreConvertOrderMsg) ProtoMessage() {}

func (x *UnlimitPreConvertOrderMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlimitPreConvertOrderMsg.ProtoReflect.Descriptor instead.
func (*UnlimitPreConvertOrderMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{151}
}

func (x *UnlimitPreConvertOrderMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *UnlimitPreConvertOrderMsg) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *UnlimitPreConvertOrderMsg) GetAmount() int32 {
	if x != nil && x.Amount != nil {
		return *x.Amount
	}
	return 0
}

// 我的預提 申請提現 按鈕 (無限級)
type UnlimitPreConvertOrderRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChvMsg *string `protobuf:"bytes,1,req,name=ChvMsg" json:"ChvMsg,omitempty"` // 回傳結果
}

func (x *UnlimitPreConvertOrderRet) Reset() {
	*x = UnlimitPreConvertOrderRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[152]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlimitPreConvertOrderRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlimitPreConvertOrderRet) ProtoMessage() {}

func (x *UnlimitPreConvertOrderRet) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[152]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlimitPreConvertOrderRet.ProtoReflect.Descriptor instead.
func (*UnlimitPreConvertOrderRet) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{152}
}

func (x *UnlimitPreConvertOrderRet) GetChvMsg() string {
	if x != nil && x.ChvMsg != nil {
		return *x.ChvMsg
	}
	return ""
}

// 裂變1 - 推廣信息
type SplitGetMyInfoMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area_ID *int32 `protobuf:"varint,1,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
	UserID  *int32 `protobuf:"varint,2,req,name=UserID" json:"UserID,omitempty"`               // 使用者ID
}

func (x *SplitGetMyInfoMsg) Reset() {
	*x = SplitGetMyInfoMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[153]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SplitGetMyInfoMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SplitGetMyInfoMsg) ProtoMessage() {}

func (x *SplitGetMyInfoMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[153]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SplitGetMyInfoMsg.ProtoReflect.Descriptor instead.
func (*SplitGetMyInfoMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{153}
}

func (x *SplitGetMyInfoMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *SplitGetMyInfoMsg) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

// 裂變1 - 推廣信息
type SplitGetMyInfoRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RewardAmount   *int32  `protobuf:"varint,1,req,name=RewardAmount" json:"RewardAmount,omitempty"`     // 可提現金額
	SplitAmount    *int32  `protobuf:"varint,2,req,name=SplitAmount" json:"SplitAmount,omitempty"`       // 裂變用戶額
	SuccessCount   *int32  `protobuf:"varint,3,req,name=SuccessCount" json:"SuccessCount,omitempty"`     // 所有成功人數
	SuccessToday   *int32  `protobuf:"varint,4,req,name=SuccessToday" json:"SuccessToday,omitempty"`     // 今日成功人數
	SuccessLastday *int32  `protobuf:"varint,5,req,name=SuccessLastday" json:"SuccessLastday,omitempty"` // 昨日成功人數
	QrURL          *string `protobuf:"bytes,6,req,name=QrURL" json:"QrURL,omitempty"`                    // QRCODE
	Invited        *string `protobuf:"bytes,7,req,name=Invited" json:"Invited,omitempty"`                // 邀請碼
	UpperUserID    *int32  `protobuf:"varint,8,opt,name=UpperUserID" json:"UpperUserID,omitempty"`       // 上級userid
}

func (x *SplitGetMyInfoRet) Reset() {
	*x = SplitGetMyInfoRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[154]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SplitGetMyInfoRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SplitGetMyInfoRet) ProtoMessage() {}

func (x *SplitGetMyInfoRet) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[154]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SplitGetMyInfoRet.ProtoReflect.Descriptor instead.
func (*SplitGetMyInfoRet) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{154}
}

func (x *SplitGetMyInfoRet) GetRewardAmount() int32 {
	if x != nil && x.RewardAmount != nil {
		return *x.RewardAmount
	}
	return 0
}

func (x *SplitGetMyInfoRet) GetSplitAmount() int32 {
	if x != nil && x.SplitAmount != nil {
		return *x.SplitAmount
	}
	return 0
}

func (x *SplitGetMyInfoRet) GetSuccessCount() int32 {
	if x != nil && x.SuccessCount != nil {
		return *x.SuccessCount
	}
	return 0
}

func (x *SplitGetMyInfoRet) GetSuccessToday() int32 {
	if x != nil && x.SuccessToday != nil {
		return *x.SuccessToday
	}
	return 0
}

func (x *SplitGetMyInfoRet) GetSuccessLastday() int32 {
	if x != nil && x.SuccessLastday != nil {
		return *x.SuccessLastday
	}
	return 0
}

func (x *SplitGetMyInfoRet) GetQrURL() string {
	if x != nil && x.QrURL != nil {
		return *x.QrURL
	}
	return ""
}

func (x *SplitGetMyInfoRet) GetInvited() string {
	if x != nil && x.Invited != nil {
		return *x.Invited
	}
	return ""
}

func (x *SplitGetMyInfoRet) GetUpperUserID() int32 {
	if x != nil && x.UpperUserID != nil {
		return *x.UpperUserID
	}
	return 0
}

// 裂變2 - 提現紀錄
type SplitGetMyConvertMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area_ID   *int32 `protobuf:"varint,1,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
	UserID    *int32 `protobuf:"varint,2,req,name=UserID" json:"UserID,omitempty"`               // 使用者ID
	PageIndex *int32 `protobuf:"varint,3,req,name=PageIndex" json:"PageIndex,omitempty"`         // 第幾頁
	PageSize  *int32 `protobuf:"varint,4,req,name=PageSize" json:"PageSize,omitempty"`           // 顯示幾筆
}

func (x *SplitGetMyConvertMsg) Reset() {
	*x = SplitGetMyConvertMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[155]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SplitGetMyConvertMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SplitGetMyConvertMsg) ProtoMessage() {}

func (x *SplitGetMyConvertMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[155]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SplitGetMyConvertMsg.ProtoReflect.Descriptor instead.
func (*SplitGetMyConvertMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{155}
}

func (x *SplitGetMyConvertMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *SplitGetMyConvertMsg) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *SplitGetMyConvertMsg) GetPageIndex() int32 {
	if x != nil && x.PageIndex != nil {
		return *x.PageIndex
	}
	return 0
}

func (x *SplitGetMyConvertMsg) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

// 裂變2 - 提現紀錄
type SplitGetMyConvertRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageCount         *int32                   `protobuf:"varint,1,req,name=PageCount" json:"PageCount,omitempty"`                // 回傳頁數
	RewardAmount      *int32                   `protobuf:"varint,2,req,name=RewardAmount" json:"RewardAmount,omitempty"`          // 總金額
	SplitGetMyConvert []*SplitGetMyConvertList `protobuf:"bytes,3,rep,name=SplitGetMyConvert" json:"SplitGetMyConvert,omitempty"` // 列表
}

func (x *SplitGetMyConvertRet) Reset() {
	*x = SplitGetMyConvertRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[156]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SplitGetMyConvertRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SplitGetMyConvertRet) ProtoMessage() {}

func (x *SplitGetMyConvertRet) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[156]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SplitGetMyConvertRet.ProtoReflect.Descriptor instead.
func (*SplitGetMyConvertRet) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{156}
}

func (x *SplitGetMyConvertRet) GetPageCount() int32 {
	if x != nil && x.PageCount != nil {
		return *x.PageCount
	}
	return 0
}

func (x *SplitGetMyConvertRet) GetRewardAmount() int32 {
	if x != nil && x.RewardAmount != nil {
		return *x.RewardAmount
	}
	return 0
}

func (x *SplitGetMyConvertRet) GetSplitGetMyConvert() []*SplitGetMyConvertList {
	if x != nil {
		return x.SplitGetMyConvert
	}
	return nil
}

// 裂變2 - 提現紀錄
type SplitGetMyConvertList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogDate       *string `protobuf:"bytes,1,req,name=LogDate" json:"LogDate,omitempty"`              // 日期
	ConvertAmount *int32  `protobuf:"varint,2,req,name=ConvertAmount" json:"ConvertAmount,omitempty"` // 提現金額
}

func (x *SplitGetMyConvertList) Reset() {
	*x = SplitGetMyConvertList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[157]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SplitGetMyConvertList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SplitGetMyConvertList) ProtoMessage() {}

func (x *SplitGetMyConvertList) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[157]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SplitGetMyConvertList.ProtoReflect.Descriptor instead.
func (*SplitGetMyConvertList) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{157}
}

func (x *SplitGetMyConvertList) GetLogDate() string {
	if x != nil && x.LogDate != nil {
		return *x.LogDate
	}
	return ""
}

func (x *SplitGetMyConvertList) GetConvertAmount() int32 {
	if x != nil && x.ConvertAmount != nil {
		return *x.ConvertAmount
	}
	return 0
}

// 裂變3 - 說明
type SplitGetRewardTipsMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area_ID *int32 `protobuf:"varint,1,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
	UserID  *int32 `protobuf:"varint,2,req,name=UserID" json:"UserID,omitempty"`               // 使用者ID
}

func (x *SplitGetRewardTipsMsg) Reset() {
	*x = SplitGetRewardTipsMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[158]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SplitGetRewardTipsMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SplitGetRewardTipsMsg) ProtoMessage() {}

func (x *SplitGetRewardTipsMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[158]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SplitGetRewardTipsMsg.ProtoReflect.Descriptor instead.
func (*SplitGetRewardTipsMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{158}
}

func (x *SplitGetRewardTipsMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *SplitGetRewardTipsMsg) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

// 裂變3 - 說明
type SplitGetRewardTipsRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturenAmount      *int32                    `protobuf:"varint,1,req,name=ReturenAmount" json:"ReturenAmount,omitempty"`
	SplitGetRewardTips []*SplitGetRewardTipsList `protobuf:"bytes,2,rep,name=SplitGetRewardTips" json:"SplitGetRewardTips,omitempty"` // 列表
}

func (x *SplitGetRewardTipsRet) Reset() {
	*x = SplitGetRewardTipsRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[159]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SplitGetRewardTipsRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SplitGetRewardTipsRet) ProtoMessage() {}

func (x *SplitGetRewardTipsRet) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[159]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SplitGetRewardTipsRet.ProtoReflect.Descriptor instead.
func (*SplitGetRewardTipsRet) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{159}
}

func (x *SplitGetRewardTipsRet) GetReturenAmount() int32 {
	if x != nil && x.ReturenAmount != nil {
		return *x.ReturenAmount
	}
	return 0
}

func (x *SplitGetRewardTipsRet) GetSplitGetRewardTips() []*SplitGetRewardTipsList {
	if x != nil {
		return x.SplitGetRewardTips
	}
	return nil
}

// 裂變3 - 說明
type SplitGetRewardTipsList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level    *int32  `protobuf:"varint,1,req,name=Level" json:"Level,omitempty"`      // 等級
	RecruitB *string `protobuf:"bytes,2,req,name=RecruitB" json:"RecruitB,omitempty"` // B人數
	RecruitC *string `protobuf:"bytes,3,req,name=RecruitC" json:"RecruitC,omitempty"` // C人數
	RecruitD *string `protobuf:"bytes,4,req,name=RecruitD" json:"RecruitD,omitempty"` // D人數
	RewardB  *string `protobuf:"bytes,5,req,name=RewardB" json:"RewardB,omitempty"`   // B金額
	RewardC  *string `protobuf:"bytes,6,req,name=RewardC" json:"RewardC,omitempty"`   // C金額
	RewardD  *string `protobuf:"bytes,7,req,name=RewardD" json:"RewardD,omitempty"`   // D金額
}

func (x *SplitGetRewardTipsList) Reset() {
	*x = SplitGetRewardTipsList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[160]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SplitGetRewardTipsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SplitGetRewardTipsList) ProtoMessage() {}

func (x *SplitGetRewardTipsList) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[160]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SplitGetRewardTipsList.ProtoReflect.Descriptor instead.
func (*SplitGetRewardTipsList) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{160}
}

func (x *SplitGetRewardTipsList) GetLevel() int32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

func (x *SplitGetRewardTipsList) GetRecruitB() string {
	if x != nil && x.RecruitB != nil {
		return *x.RecruitB
	}
	return ""
}

func (x *SplitGetRewardTipsList) GetRecruitC() string {
	if x != nil && x.RecruitC != nil {
		return *x.RecruitC
	}
	return ""
}

func (x *SplitGetRewardTipsList) GetRecruitD() string {
	if x != nil && x.RecruitD != nil {
		return *x.RecruitD
	}
	return ""
}

func (x *SplitGetRewardTipsList) GetRewardB() string {
	if x != nil && x.RewardB != nil {
		return *x.RewardB
	}
	return ""
}

func (x *SplitGetRewardTipsList) GetRewardC() string {
	if x != nil && x.RewardC != nil {
		return *x.RewardC
	}
	return ""
}

func (x *SplitGetRewardTipsList) GetRewardD() string {
	if x != nil && x.RewardD != nil {
		return *x.RewardD
	}
	return ""
}

// 裂變4 - 馬上提現
type SplitGetMyRewardMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area_ID *int32 `protobuf:"varint,1,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
	UserID  *int32 `protobuf:"varint,2,req,name=UserID" json:"UserID,omitempty"`               // 使用者ID
}

func (x *SplitGetMyRewardMsg) Reset() {
	*x = SplitGetMyRewardMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[161]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SplitGetMyRewardMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SplitGetMyRewardMsg) ProtoMessage() {}

func (x *SplitGetMyRewardMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[161]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SplitGetMyRewardMsg.ProtoReflect.Descriptor instead.
func (*SplitGetMyRewardMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{161}
}

func (x *SplitGetMyRewardMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *SplitGetMyRewardMsg) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

// 裂變4 - 馬上提現
type SplitGetMyRewardRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MyReward *int32 `protobuf:"varint,1,req,name=MyReward" json:"MyReward,omitempty"` // 提領金額
	MyWait   *int32 `protobuf:"varint,2,req,name=MyWait" json:"MyWait,omitempty"`     // 倒數計時
}

func (x *SplitGetMyRewardRet) Reset() {
	*x = SplitGetMyRewardRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[162]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SplitGetMyRewardRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SplitGetMyRewardRet) ProtoMessage() {}

func (x *SplitGetMyRewardRet) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[162]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SplitGetMyRewardRet.ProtoReflect.Descriptor instead.
func (*SplitGetMyRewardRet) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{162}
}

func (x *SplitGetMyRewardRet) GetMyReward() int32 {
	if x != nil && x.MyReward != nil {
		return *x.MyReward
	}
	return 0
}

func (x *SplitGetMyRewardRet) GetMyWait() int32 {
	if x != nil && x.MyWait != nil {
		return *x.MyWait
	}
	return 0
}

// 裂變5 - 提現紀錄 送出提現金額
type SplitConvertOrderMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area_ID      *int32  `protobuf:"varint,1,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
	UserID       *int32  `protobuf:"varint,2,req,name=UserID" json:"UserID,omitempty"`               // 使用者ID
	ChvIPaddress *string `protobuf:"bytes,3,req,name=ChvIPaddress" json:"ChvIPaddress,omitempty"`    // 網路位置
	LngAmount    *int32  `protobuf:"varint,4,req,name=lngAmount" json:"lngAmount,omitempty"`         // 金額
}

func (x *SplitConvertOrderMsg) Reset() {
	*x = SplitConvertOrderMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[163]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SplitConvertOrderMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SplitConvertOrderMsg) ProtoMessage() {}

func (x *SplitConvertOrderMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[163]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SplitConvertOrderMsg.ProtoReflect.Descriptor instead.
func (*SplitConvertOrderMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{163}
}

func (x *SplitConvertOrderMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *SplitConvertOrderMsg) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *SplitConvertOrderMsg) GetChvIPaddress() string {
	if x != nil && x.ChvIPaddress != nil {
		return *x.ChvIPaddress
	}
	return ""
}

func (x *SplitConvertOrderMsg) GetLngAmount() int32 {
	if x != nil && x.LngAmount != nil {
		return *x.LngAmount
	}
	return 0
}

// 裂變5 - 提現紀錄 送出提現金額
type SplitConvertOrderRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChvMsg *string `protobuf:"bytes,1,req,name=ChvMsg" json:"ChvMsg,omitempty"` // 回傳訊息
}

func (x *SplitConvertOrderRet) Reset() {
	*x = SplitConvertOrderRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[164]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SplitConvertOrderRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SplitConvertOrderRet) ProtoMessage() {}

func (x *SplitConvertOrderRet) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[164]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SplitConvertOrderRet.ProtoReflect.Descriptor instead.
func (*SplitConvertOrderRet) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{164}
}

func (x *SplitConvertOrderRet) GetChvMsg() string {
	if x != nil && x.ChvMsg != nil {
		return *x.ChvMsg
	}
	return ""
}

// 裂變6 - 輸入推廣碼
type SplitBindingInvitedCodeMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area_ID *int32  `protobuf:"varint,1,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
	UserID  *int32  `protobuf:"varint,2,req,name=UserID" json:"UserID,omitempty"`               // 使用者ID
	Invited *string `protobuf:"bytes,3,req,name=Invited" json:"Invited,omitempty"`              // CLIEN送出推廣碼
}

func (x *SplitBindingInvitedCodeMsg) Reset() {
	*x = SplitBindingInvitedCodeMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[165]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SplitBindingInvitedCodeMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SplitBindingInvitedCodeMsg) ProtoMessage() {}

func (x *SplitBindingInvitedCodeMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[165]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SplitBindingInvitedCodeMsg.ProtoReflect.Descriptor instead.
func (*SplitBindingInvitedCodeMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{165}
}

func (x *SplitBindingInvitedCodeMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *SplitBindingInvitedCodeMsg) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *SplitBindingInvitedCodeMsg) GetInvited() string {
	if x != nil && x.Invited != nil {
		return *x.Invited
	}
	return ""
}

// 裂變6 - 輸入推廣碼
type SplitBindingInvitedCodeRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChvMsg     *string `protobuf:"bytes,1,req,name=ChvMsg" json:"ChvMsg,omitempty"` // SERVER回傳推廣碼驗證結果
	IntRetCode *int32  `protobuf:"varint,2,opt,name=intRetCode" json:"intRetCode,omitempty"`
}

func (x *SplitBindingInvitedCodeRet) Reset() {
	*x = SplitBindingInvitedCodeRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[166]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SplitBindingInvitedCodeRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SplitBindingInvitedCodeRet) ProtoMessage() {}

func (x *SplitBindingInvitedCodeRet) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[166]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SplitBindingInvitedCodeRet.ProtoReflect.Descriptor instead.
func (*SplitBindingInvitedCodeRet) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{166}
}

func (x *SplitBindingInvitedCodeRet) GetChvMsg() string {
	if x != nil && x.ChvMsg != nil {
		return *x.ChvMsg
	}
	return ""
}

func (x *SplitBindingInvitedCodeRet) GetIntRetCode() int32 {
	if x != nil && x.IntRetCode != nil {
		return *x.IntRetCode
	}
	return 0
}

// 充值返利活動的取得個人流水及限制 請求封包
type EventChargeBonusAmountMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area_ID *int32 `protobuf:"varint,1,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
	UserID  *int32 `protobuf:"varint,2,req,name=UserID" json:"UserID,omitempty"`               // 使用者ID
}

func (x *EventChargeBonusAmountMsg) Reset() {
	*x = EventChargeBonusAmountMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[167]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventChargeBonusAmountMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventChargeBonusAmountMsg) ProtoMessage() {}

func (x *EventChargeBonusAmountMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[167]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventChargeBonusAmountMsg.ProtoReflect.Descriptor instead.
func (*EventChargeBonusAmountMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{167}
}

func (x *EventChargeBonusAmountMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *EventChargeBonusAmountMsg) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

// 充值返利活動的取得個人流水及限制 回傳封包
type EventChargeBonusAmountRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NowFlowAmount   *int32  `protobuf:"varint,1,req,name=NowFlowAmount" json:"NowFlowAmount,omitempty"`     // 目前流水
	FlowAmountLimit *int32  `protobuf:"varint,2,req,name=FlowAmountLimit" json:"FlowAmountLimit,omitempty"` // 流水限制
	Rate            *int32  `protobuf:"varint,3,req,name=Rate" json:"Rate,omitempty"`                       // 返利%數
	Times           *int32  `protobuf:"varint,4,req,name=Times" json:"Times,omitempty"`                     // 返利倍數
	ChvMsg          *string `protobuf:"bytes,5,req,name=ChvMsg" json:"ChvMsg,omitempty"`                    // 狀態
}

func (x *EventChargeBonusAmountRet) Reset() {
	*x = EventChargeBonusAmountRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[168]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventChargeBonusAmountRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventChargeBonusAmountRet) ProtoMessage() {}

func (x *EventChargeBonusAmountRet) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[168]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventChargeBonusAmountRet.ProtoReflect.Descriptor instead.
func (*EventChargeBonusAmountRet) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{168}
}

func (x *EventChargeBonusAmountRet) GetNowFlowAmount() int32 {
	if x != nil && x.NowFlowAmount != nil {
		return *x.NowFlowAmount
	}
	return 0
}

func (x *EventChargeBonusAmountRet) GetFlowAmountLimit() int32 {
	if x != nil && x.FlowAmountLimit != nil {
		return *x.FlowAmountLimit
	}
	return 0
}

func (x *EventChargeBonusAmountRet) GetRate() int32 {
	if x != nil && x.Rate != nil {
		return *x.Rate
	}
	return 0
}

func (x *EventChargeBonusAmountRet) GetTimes() int32 {
	if x != nil && x.Times != nil {
		return *x.Times
	}
	return 0
}

func (x *EventChargeBonusAmountRet) GetChvMsg() string {
	if x != nil && x.ChvMsg != nil {
		return *x.ChvMsg
	}
	return ""
}

// 請求 USER 加入下线
type AddUserRelationMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area_ID    *int32  `protobuf:"varint,1,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
	UserID     *int32  `protobuf:"varint,2,req,name=UserID" json:"UserID,omitempty"`
	InviteCode *string `protobuf:"bytes,3,req,name=InviteCode" json:"InviteCode,omitempty"`
}

func (x *AddUserRelationMsg) Reset() {
	*x = AddUserRelationMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[169]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserRelationMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserRelationMsg) ProtoMessage() {}

func (x *AddUserRelationMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[169]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserRelationMsg.ProtoReflect.Descriptor instead.
func (*AddUserRelationMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{169}
}

func (x *AddUserRelationMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *AddUserRelationMsg) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *AddUserRelationMsg) GetInviteCode() string {
	if x != nil && x.InviteCode != nil {
		return *x.InviteCode
	}
	return ""
}

// 回傳 USER 加入下线
type AddUserRelationRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode *int32  `protobuf:"varint,1,req,name=RetCode" json:"RetCode,omitempty"`
	ChvMsg  *string `protobuf:"bytes,2,req,name=ChvMsg" json:"ChvMsg,omitempty"`
}

func (x *AddUserRelationRet) Reset() {
	*x = AddUserRelationRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[170]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserRelationRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserRelationRet) ProtoMessage() {}

func (x *AddUserRelationRet) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[170]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserRelationRet.ProtoReflect.Descriptor instead.
func (*AddUserRelationRet) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{170}
}

func (x *AddUserRelationRet) GetRetCode() int32 {
	if x != nil && x.RetCode != nil {
		return *x.RetCode
	}
	return 0
}

func (x *AddUserRelationRet) GetChvMsg() string {
	if x != nil && x.ChvMsg != nil {
		return *x.ChvMsg
	}
	return ""
}

// 請求 兌換禮碼
type ExchangeCouponMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExchangeSequence *string `protobuf:"bytes,1,req,name=ExchangeSequence" json:"ExchangeSequence,omitempty"` // 禮碼兌換序號
	Area_ID          *int32  `protobuf:"varint,2,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"`      // 渠道ID
}

func (x *ExchangeCouponMsg) Reset() {
	*x = ExchangeCouponMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[171]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeCouponMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeCouponMsg) ProtoMessage() {}

func (x *ExchangeCouponMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[171]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeCouponMsg.ProtoReflect.Descriptor instead.
func (*ExchangeCouponMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{171}
}

func (x *ExchangeCouponMsg) GetExchangeSequence() string {
	if x != nil && x.ExchangeSequence != nil {
		return *x.ExchangeSequence
	}
	return ""
}

func (x *ExchangeCouponMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 回傳 兌換禮碼
type ExchangeCouponRetMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode *int32  `protobuf:"varint,1,req,name=RetCode" json:"RetCode,omitempty"`
	ChvMsg  *string `protobuf:"bytes,2,req,name=ChvMsg" json:"ChvMsg,omitempty"`
}

func (x *ExchangeCouponRetMsg) Reset() {
	*x = ExchangeCouponRetMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[172]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeCouponRetMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeCouponRetMsg) ProtoMessage() {}

func (x *ExchangeCouponRetMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[172]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeCouponRetMsg.ProtoReflect.Descriptor instead.
func (*ExchangeCouponRetMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{172}
}

func (x *ExchangeCouponRetMsg) GetRetCode() int32 {
	if x != nil && x.RetCode != nil {
		return *x.RetCode
	}
	return 0
}

func (x *ExchangeCouponRetMsg) GetChvMsg() string {
	if x != nil && x.ChvMsg != nil {
		return *x.ChvMsg
	}
	return ""
}

// 修改VIP頭像框ID
type ModifyAvatarFrameMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area_ID       *int32 `protobuf:"varint,1,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
	UserID        *int32 `protobuf:"varint,2,req,name=UserID" json:"UserID,omitempty"`
	AvatarFrameID *int32 `protobuf:"varint,3,req,name=AvatarFrameID" json:"AvatarFrameID,omitempty"` // VIP頭框像ID
}

func (x *ModifyAvatarFrameMsg) Reset() {
	*x = ModifyAvatarFrameMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[173]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyAvatarFrameMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyAvatarFrameMsg) ProtoMessage() {}

func (x *ModifyAvatarFrameMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[173]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyAvatarFrameMsg.ProtoReflect.Descriptor instead.
func (*ModifyAvatarFrameMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{173}
}

func (x *ModifyAvatarFrameMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *ModifyAvatarFrameMsg) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *ModifyAvatarFrameMsg) GetAvatarFrameID() int32 {
	if x != nil && x.AvatarFrameID != nil {
		return *x.AvatarFrameID
	}
	return 0
}

// 修改VIP頭像框ID
type ModifyAvatarFrameRetMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode *int32  `protobuf:"varint,1,req,name=RetCode" json:"RetCode,omitempty"`
	ChvMsg  *string `protobuf:"bytes,2,req,name=ChvMsg" json:"ChvMsg,omitempty"`
}

func (x *ModifyAvatarFrameRetMsg) Reset() {
	*x = ModifyAvatarFrameRetMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[174]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyAvatarFrameRetMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyAvatarFrameRetMsg) ProtoMessage() {}

func (x *ModifyAvatarFrameRetMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[174]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyAvatarFrameRetMsg.ProtoReflect.Descriptor instead.
func (*ModifyAvatarFrameRetMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{174}
}

func (x *ModifyAvatarFrameRetMsg) GetRetCode() int32 {
	if x != nil && x.RetCode != nil {
		return *x.RetCode
	}
	return 0
}

func (x *ModifyAvatarFrameRetMsg) GetChvMsg() string {
	if x != nil && x.ChvMsg != nil {
		return *x.ChvMsg
	}
	return ""
}

// VIP 獎勵等級設定清單
type GradeSettingDataList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode  *int32              `protobuf:"varint,1,req,name=RetCode" json:"RetCode,omitempty"`
	ChvMsg   *string             `protobuf:"bytes,2,req,name=ChvMsg" json:"ChvMsg,omitempty"`
	DataList []*GradeSettingData `protobuf:"bytes,3,rep,name=DataList" json:"DataList,omitempty"`
}

func (x *GradeSettingDataList) Reset() {
	*x = GradeSettingDataList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[175]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GradeSettingDataList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GradeSettingDataList) ProtoMessage() {}

func (x *GradeSettingDataList) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[175]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GradeSettingDataList.ProtoReflect.Descriptor instead.
func (*GradeSettingDataList) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{175}
}

func (x *GradeSettingDataList) GetRetCode() int32 {
	if x != nil && x.RetCode != nil {
		return *x.RetCode
	}
	return 0
}

func (x *GradeSettingDataList) GetChvMsg() string {
	if x != nil && x.ChvMsg != nil {
		return *x.ChvMsg
	}
	return ""
}

func (x *GradeSettingDataList) GetDataList() []*GradeSettingData {
	if x != nil {
		return x.DataList
	}
	return nil
}

// VIP 獎勵等級設定資訊
type GradeSettingData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID             *int32 `protobuf:"varint,1,req,name=ID" json:"ID,omitempty"`
	Amount         *int64 `protobuf:"varint,2,req,name=Amount" json:"Amount,omitempty"`
	PromotionAward *int32 `protobuf:"varint,3,req,name=PromotionAward" json:"PromotionAward,omitempty"`
	AvatarFrame    *int32 `protobuf:"varint,4,req,name=AvatarFrame" json:"AvatarFrame,omitempty"`
}

func (x *GradeSettingData) Reset() {
	*x = GradeSettingData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[176]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GradeSettingData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GradeSettingData) ProtoMessage() {}

func (x *GradeSettingData) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[176]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GradeSettingData.ProtoReflect.Descriptor instead.
func (*GradeSettingData) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{176}
}

func (x *GradeSettingData) GetID() int32 {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return 0
}

func (x *GradeSettingData) GetAmount() int64 {
	if x != nil && x.Amount != nil {
		return *x.Amount
	}
	return 0
}

func (x *GradeSettingData) GetPromotionAward() int32 {
	if x != nil && x.PromotionAward != nil {
		return *x.PromotionAward
	}
	return 0
}

func (x *GradeSettingData) GetAvatarFrame() int32 {
	if x != nil && x.AvatarFrame != nil {
		return *x.AvatarFrame
	}
	return 0
}

// 取得傳用戶活動清單
type CampaignGetList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID  *int32 `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`
	Area_ID *int32 `protobuf:"varint,2,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *CampaignGetList) Reset() {
	*x = CampaignGetList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[177]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CampaignGetList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CampaignGetList) ProtoMessage() {}

func (x *CampaignGetList) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[177]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CampaignGetList.ProtoReflect.Descriptor instead.
func (*CampaignGetList) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{177}
}

func (x *CampaignGetList) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *CampaignGetList) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 回傳取得傳用戶活動清單
type CampaignGetListRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CampaignData []*CampaignData `protobuf:"bytes,1,rep,name=CampaignData" json:"CampaignData,omitempty"`
}

func (x *CampaignGetListRet) Reset() {
	*x = CampaignGetListRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[178]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CampaignGetListRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CampaignGetListRet) ProtoMessage() {}

func (x *CampaignGetListRet) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[178]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CampaignGetListRet.ProtoReflect.Descriptor instead.
func (*CampaignGetListRet) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{178}
}

func (x *CampaignGetListRet) GetCampaignData() []*CampaignData {
	if x != nil {
		return x.CampaignData
	}
	return nil
}

// 回傳取得傳用戶活動清單
type CampaignData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID               *int32  `protobuf:"varint,1,req,name=ID" json:"ID,omitempty"`
	Picture          *string `protobuf:"bytes,2,req,name=Picture" json:"Picture,omitempty"`
	SeqID            *int32  `protobuf:"varint,3,req,name=SeqID" json:"SeqID,omitempty"`
	Title            *string `protobuf:"bytes,4,req,name=Title" json:"Title,omitempty"`
	CampaignTag      *int32  `protobuf:"varint,5,req,name=CampaignTag" json:"CampaignTag,omitempty"`
	CampaignBehavior *int32  `protobuf:"varint,6,req,name=CampaignBehavior" json:"CampaignBehavior,omitempty"`
	Link             *string `protobuf:"bytes,7,req,name=Link" json:"Link,omitempty"`
	StartTime        *string `protobuf:"bytes,8,req,name=StartTime" json:"StartTime,omitempty"`
	EndTime          *string `protobuf:"bytes,9,req,name=EndTime" json:"EndTime,omitempty"`
}

func (x *CampaignData) Reset() {
	*x = CampaignData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[179]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CampaignData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CampaignData) ProtoMessage() {}

func (x *CampaignData) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[179]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CampaignData.ProtoReflect.Descriptor instead.
func (*CampaignData) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{179}
}

func (x *CampaignData) GetID() int32 {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return 0
}

func (x *CampaignData) GetPicture() string {
	if x != nil && x.Picture != nil {
		return *x.Picture
	}
	return ""
}

func (x *CampaignData) GetSeqID() int32 {
	if x != nil && x.SeqID != nil {
		return *x.SeqID
	}
	return 0
}

func (x *CampaignData) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *CampaignData) GetCampaignTag() int32 {
	if x != nil && x.CampaignTag != nil {
		return *x.CampaignTag
	}
	return 0
}

func (x *CampaignData) GetCampaignBehavior() int32 {
	if x != nil && x.CampaignBehavior != nil {
		return *x.CampaignBehavior
	}
	return 0
}

func (x *CampaignData) GetLink() string {
	if x != nil && x.Link != nil {
		return *x.Link
	}
	return ""
}

func (x *CampaignData) GetStartTime() string {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return ""
}

func (x *CampaignData) GetEndTime() string {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return ""
}

// 請求 取得首充返利活動與該用戶相關資料
type FirstDepositGetInfoMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area_ID *int32 `protobuf:"varint,1,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
	UserID  *int32 `protobuf:"varint,2,req,name=UserID" json:"UserID,omitempty"`               // 玩家編號
}

func (x *FirstDepositGetInfoMsg) Reset() {
	*x = FirstDepositGetInfoMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[180]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FirstDepositGetInfoMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirstDepositGetInfoMsg) ProtoMessage() {}

func (x *FirstDepositGetInfoMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[180]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirstDepositGetInfoMsg.ProtoReflect.Descriptor instead.
func (*FirstDepositGetInfoMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{180}
}

func (x *FirstDepositGetInfoMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *FirstDepositGetInfoMsg) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

// 回傳 取得首充返利活動與該用戶相關資料
type FirstDepositGetInfoRetMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode                *int32                  `protobuf:"varint,1,req,name=RetCode" json:"RetCode,omitempty"`
	FirstDepositInfo       *FirstDepositInfo       `protobuf:"bytes,2,opt,name=FirstDepositInfo" json:"FirstDepositInfo,omitempty"`             // 首充返利活動資料
	FirstDepositUserRecord *FirstDepositUserRecord `protobuf:"bytes,3,opt,name=FirstDepositUserRecord" json:"FirstDepositUserRecord,omitempty"` // 首充返利活動該用戶相關資料
}

func (x *FirstDepositGetInfoRetMsg) Reset() {
	*x = FirstDepositGetInfoRetMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[181]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FirstDepositGetInfoRetMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirstDepositGetInfoRetMsg) ProtoMessage() {}

func (x *FirstDepositGetInfoRetMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[181]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirstDepositGetInfoRetMsg.ProtoReflect.Descriptor instead.
func (*FirstDepositGetInfoRetMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{181}
}

func (x *FirstDepositGetInfoRetMsg) GetRetCode() int32 {
	if x != nil && x.RetCode != nil {
		return *x.RetCode
	}
	return 0
}

func (x *FirstDepositGetInfoRetMsg) GetFirstDepositInfo() *FirstDepositInfo {
	if x != nil {
		return x.FirstDepositInfo
	}
	return nil
}

func (x *FirstDepositGetInfoRetMsg) GetFirstDepositUserRecord() *FirstDepositUserRecord {
	if x != nil {
		return x.FirstDepositUserRecord
	}
	return nil
}

// 首充返利活動資料
type FirstDepositInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime        *string `protobuf:"bytes,1,req,name=StartTime" json:"StartTime,omitempty"`                // 活動開始時間
	EndTime          *string `protobuf:"bytes,2,req,name=EndTime" json:"EndTime,omitempty"`                    // 活動結束時間
	DepositLimit     *int64  `protobuf:"varint,3,req,name=DepositLimit" json:"DepositLimit,omitempty"`         // 單筆充值限制 (單位:分)
	WinAmount        *int64  `protobuf:"varint,4,req,name=WinAmount" json:"WinAmount,omitempty"`               // 需贏得金額 (單位:分)
	ReturnAmount     *int64  `protobuf:"varint,5,req,name=ReturnAmount" json:"ReturnAmount,omitempty"`         // 返利金額 (單位:分)
	Status           *int32  `protobuf:"varint,6,req,name=Status" json:"Status,omitempty"`                     // 0:關閉，1:開啟
	CurrentUserCount *int32  `protobuf:"varint,7,req,name=CurrentUserCount" json:"CurrentUserCount,omitempty"` // 目前玩家數
}

func (x *FirstDepositInfo) Reset() {
	*x = FirstDepositInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[182]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FirstDepositInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirstDepositInfo) ProtoMessage() {}

func (x *FirstDepositInfo) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[182]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirstDepositInfo.ProtoReflect.Descriptor instead.
func (*FirstDepositInfo) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{182}
}

func (x *FirstDepositInfo) GetStartTime() string {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return ""
}

func (x *FirstDepositInfo) GetEndTime() string {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return ""
}

func (x *FirstDepositInfo) GetDepositLimit() int64 {
	if x != nil && x.DepositLimit != nil {
		return *x.DepositLimit
	}
	return 0
}

func (x *FirstDepositInfo) GetWinAmount() int64 {
	if x != nil && x.WinAmount != nil {
		return *x.WinAmount
	}
	return 0
}

func (x *FirstDepositInfo) GetReturnAmount() int64 {
	if x != nil && x.ReturnAmount != nil {
		return *x.ReturnAmount
	}
	return 0
}

func (x *FirstDepositInfo) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *FirstDepositInfo) GetCurrentUserCount() int32 {
	if x != nil && x.CurrentUserCount != nil {
		return *x.CurrentUserCount
	}
	return 0
}

// 首充返利活動該用戶相關資料
type FirstDepositUserRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID        *int32  `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`               // 玩家編號
	EventID       *int64  `protobuf:"varint,2,req,name=EventID" json:"EventID,omitempty"`             // 對應Table 1的ID
	JoinTime      *string `protobuf:"bytes,3,req,name=JoinTime" json:"JoinTime,omitempty"`            // 加入本次活動時間，即單筆充值達到標準的時間
	DepositAmount *int64  `protobuf:"varint,4,req,name=DepositAmount" json:"DepositAmount,omitempty"` // 該次充值金額
	WinAmount     *int64  `protobuf:"varint,5,req,name=WinAmount" json:"WinAmount,omitempty"`         // 累計贏得金額
	Flag          *int32  `protobuf:"varint,6,req,name=Flag" json:"Flag,omitempty"`                   // 領取狀態(0:未領取, 1:已領取)
	CollectTime   *string `protobuf:"bytes,7,req,name=CollectTime" json:"CollectTime,omitempty"`      // 領取時間
	CollectAmount *int64  `protobuf:"varint,8,req,name=CollectAmount" json:"CollectAmount,omitempty"` // 領取金額
	UserType      *int32  `protobuf:"varint,9,req,name=UserType" json:"UserType,omitempty"`           // 用戶帳號身分(1: 正式帳號, 3: 遊客帳號(不能領)
}

func (x *FirstDepositUserRecord) Reset() {
	*x = FirstDepositUserRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[183]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FirstDepositUserRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirstDepositUserRecord) ProtoMessage() {}

func (x *FirstDepositUserRecord) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[183]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirstDepositUserRecord.ProtoReflect.Descriptor instead.
func (*FirstDepositUserRecord) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{183}
}

func (x *FirstDepositUserRecord) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *FirstDepositUserRecord) GetEventID() int64 {
	if x != nil && x.EventID != nil {
		return *x.EventID
	}
	return 0
}

func (x *FirstDepositUserRecord) GetJoinTime() string {
	if x != nil && x.JoinTime != nil {
		return *x.JoinTime
	}
	return ""
}

func (x *FirstDepositUserRecord) GetDepositAmount() int64 {
	if x != nil && x.DepositAmount != nil {
		return *x.DepositAmount
	}
	return 0
}

func (x *FirstDepositUserRecord) GetWinAmount() int64 {
	if x != nil && x.WinAmount != nil {
		return *x.WinAmount
	}
	return 0
}

func (x *FirstDepositUserRecord) GetFlag() int32 {
	if x != nil && x.Flag != nil {
		return *x.Flag
	}
	return 0
}

func (x *FirstDepositUserRecord) GetCollectTime() string {
	if x != nil && x.CollectTime != nil {
		return *x.CollectTime
	}
	return ""
}

func (x *FirstDepositUserRecord) GetCollectAmount() int64 {
	if x != nil && x.CollectAmount != nil {
		return *x.CollectAmount
	}
	return 0
}

func (x *FirstDepositUserRecord) GetUserType() int32 {
	if x != nil && x.UserType != nil {
		return *x.UserType
	}
	return 0
}

// 請求 領取首充返利回饋金
type FirstDepositCollectMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area_ID   *int32  `protobuf:"varint,1,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
	UserID    *int32  `protobuf:"varint,2,req,name=UserID" json:"UserID,omitempty"`               // 玩家編號
	EventID   *int64  `protobuf:"varint,3,req,name=EventID" json:"EventID,omitempty"`             // 對應Table 1的ID
	IPAddress *string `protobuf:"bytes,4,opt,name=IPAddress" json:"IPAddress,omitempty"`          // 玩家IP
}

func (x *FirstDepositCollectMsg) Reset() {
	*x = FirstDepositCollectMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[184]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FirstDepositCollectMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirstDepositCollectMsg) ProtoMessage() {}

func (x *FirstDepositCollectMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[184]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirstDepositCollectMsg.ProtoReflect.Descriptor instead.
func (*FirstDepositCollectMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{184}
}

func (x *FirstDepositCollectMsg) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *FirstDepositCollectMsg) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *FirstDepositCollectMsg) GetEventID() int64 {
	if x != nil && x.EventID != nil {
		return *x.EventID
	}
	return 0
}

func (x *FirstDepositCollectMsg) GetIPAddress() string {
	if x != nil && x.IPAddress != nil {
		return *x.IPAddress
	}
	return ""
}

// 回傳 領取首充返利回饋金
type FirstDepositCollectRetMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode    *int32  `protobuf:"varint,1,req,name=RetCode" json:"RetCode,omitempty"`
	RetMessage *string `protobuf:"bytes,2,req,name=RetMessage" json:"RetMessage,omitempty"`
}

func (x *FirstDepositCollectRetMsg) Reset() {
	*x = FirstDepositCollectRetMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[185]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FirstDepositCollectRetMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirstDepositCollectRetMsg) ProtoMessage() {}

func (x *FirstDepositCollectRetMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[185]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirstDepositCollectRetMsg.ProtoReflect.Descriptor instead.
func (*FirstDepositCollectRetMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{185}
}

func (x *FirstDepositCollectRetMsg) GetRetCode() int32 {
	if x != nil && x.RetCode != nil {
		return *x.RetCode
	}
	return 0
}

func (x *FirstDepositCollectRetMsg) GetRetMessage() string {
	if x != nil && x.RetMessage != nil {
		return *x.RetMessage
	}
	return ""
}

//请求 玩家游戏记录
type PerGameLogIDMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameID *int32 `protobuf:"varint,1,req,name=GameID" json:"GameID,omitempty"`
}

func (x *PerGameLogIDMsg) Reset() {
	*x = PerGameLogIDMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[186]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PerGameLogIDMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerGameLogIDMsg) ProtoMessage() {}

func (x *PerGameLogIDMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[186]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PerGameLogIDMsg.ProtoReflect.Descriptor instead.
func (*PerGameLogIDMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{186}
}

func (x *PerGameLogIDMsg) GetGameID() int32 {
	if x != nil && x.GameID != nil {
		return *x.GameID
	}
	return 0
}

//回传 玩家游戏记录
type PerGameLogIDRetMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PerGameList []*PerGameLogListMsg `protobuf:"bytes,1,rep,name=PerGameList" json:"PerGameList,omitempty"`
}

func (x *PerGameLogIDRetMsg) Reset() {
	*x = PerGameLogIDRetMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[187]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PerGameLogIDRetMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerGameLogIDRetMsg) ProtoMessage() {}

func (x *PerGameLogIDRetMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[187]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PerGameLogIDRetMsg.ProtoReflect.Descriptor instead.
func (*PerGameLogIDRetMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{187}
}

func (x *PerGameLogIDRetMsg) GetPerGameList() []*PerGameLogListMsg {
	if x != nil {
		return x.PerGameList
	}
	return nil
}

type PerGameLogListMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TradeID       *string `protobuf:"bytes,1,req,name=TradeID" json:"TradeID,omitempty"`              // 注單號
	FlagID        *int32  `protobuf:"varint,2,req,name=FlagID" json:"FlagID,omitempty"`               // 房間等級
	UpdateMoney   *int64  `protobuf:"varint,3,req,name=UpdateMoney" json:"UpdateMoney,omitempty"`     //玩家淨輸贏
	EndTime       *string `protobuf:"bytes,4,req,name=EndTime" json:"EndTime,omitempty"`              //遊戲結束時間
	BeginTime     *string `protobuf:"bytes,5,opt,name=BeginTime" json:"BeginTime,omitempty"`          //遊戲開始時間
	BetOddsAmount *int64  `protobuf:"varint,6,opt,name=BetOddsAmount" json:"BetOddsAmount,omitempty"` //總投注
	PayAmount     *int64  `protobuf:"varint,7,opt,name=PayAmount" json:"PayAmount,omitempty"`         //總派彩
}

func (x *PerGameLogListMsg) Reset() {
	*x = PerGameLogListMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[188]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PerGameLogListMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerGameLogListMsg) ProtoMessage() {}

func (x *PerGameLogListMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[188]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PerGameLogListMsg.ProtoReflect.Descriptor instead.
func (*PerGameLogListMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{188}
}

func (x *PerGameLogListMsg) GetTradeID() string {
	if x != nil && x.TradeID != nil {
		return *x.TradeID
	}
	return ""
}

func (x *PerGameLogListMsg) GetFlagID() int32 {
	if x != nil && x.FlagID != nil {
		return *x.FlagID
	}
	return 0
}

func (x *PerGameLogListMsg) GetUpdateMoney() int64 {
	if x != nil && x.UpdateMoney != nil {
		return *x.UpdateMoney
	}
	return 0
}

func (x *PerGameLogListMsg) GetEndTime() string {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return ""
}

func (x *PerGameLogListMsg) GetBeginTime() string {
	if x != nil && x.BeginTime != nil {
		return *x.BeginTime
	}
	return ""
}

func (x *PerGameLogListMsg) GetBetOddsAmount() int64 {
	if x != nil && x.BetOddsAmount != nil {
		return *x.BetOddsAmount
	}
	return 0
}

func (x *PerGameLogListMsg) GetPayAmount() int64 {
	if x != nil && x.PayAmount != nil {
		return *x.PayAmount
	}
	return 0
}

//取得捕魚注單詳情
type GetFishDetailMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TradeID   *string `protobuf:"bytes,1,req,name=TradeID" json:"TradeID,omitempty"` //注單號
	PageIndex *int32  `protobuf:"varint,2,opt,name=PageIndex" json:"PageIndex,omitempty"`
	PageSize  *int32  `protobuf:"varint,3,opt,name=PageSize" json:"PageSize,omitempty"`
	KillType  *int32  `protobuf:"varint,4,opt,name=kill_type,json=killType" json:"kill_type,omitempty"` // (1:一般擊殺,2:無, 3:無但有派彩) def:1
}

func (x *GetFishDetailMsg) Reset() {
	*x = GetFishDetailMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[189]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFishDetailMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFishDetailMsg) ProtoMessage() {}

func (x *GetFishDetailMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[189]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFishDetailMsg.ProtoReflect.Descriptor instead.
func (*GetFishDetailMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{189}
}

func (x *GetFishDetailMsg) GetTradeID() string {
	if x != nil && x.TradeID != nil {
		return *x.TradeID
	}
	return ""
}

func (x *GetFishDetailMsg) GetPageIndex() int32 {
	if x != nil && x.PageIndex != nil {
		return *x.PageIndex
	}
	return 0
}

func (x *GetFishDetailMsg) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *GetFishDetailMsg) GetKillType() int32 {
	if x != nil && x.KillType != nil {
		return *x.KillType
	}
	return 0
}

//取得捕魚注單詳情回傳
type GetFishDetailMsgRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pager  *Pager        `protobuf:"bytes,1,opt,name=pager" json:"pager,omitempty"`
	Detail []*FishDetail `protobuf:"bytes,2,rep,name=detail" json:"detail,omitempty"`
}

func (x *GetFishDetailMsgRes) Reset() {
	*x = GetFishDetailMsgRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[190]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFishDetailMsgRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFishDetailMsgRes) ProtoMessage() {}

func (x *GetFishDetailMsgRes) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[190]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFishDetailMsgRes.ProtoReflect.Descriptor instead.
func (*GetFishDetailMsgRes) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{190}
}

func (x *GetFishDetailMsgRes) GetPager() *Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *GetFishDetailMsgRes) GetDetail() []*FishDetail {
	if x != nil {
		return x.Detail
	}
	return nil
}

type FishDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FishType      *int32  `protobuf:"varint,1,req,name=fish_type,json=fishType" json:"fish_type,omitempty"`                  //魚種類型
	BetOddsAmount *int64  `protobuf:"varint,2,req,name=bet_odds_amount,json=betOddsAmount" json:"bet_odds_amount,omitempty"` //投注
	PayAmount     *int64  `protobuf:"varint,3,req,name=pay_amount,json=payAmount" json:"pay_amount,omitempty"`               //派彩
	WinLoseAmount *int64  `protobuf:"varint,4,req,name=win_lose_amount,json=winLoseAmount" json:"win_lose_amount,omitempty"` //玩家盈虧
	KillType      *int32  `protobuf:"varint,5,req,name=kill_type,json=killType" json:"kill_type,omitempty"`                  //擊殺方式 (1:一般擊殺 2:無 3:無但有派彩)
	Odds          *int32  `protobuf:"varint,6,req,name=odds" json:"odds,omitempty"`                                          //賠率
	Memo          *string `protobuf:"bytes,7,req,name=memo" json:"memo,omitempty"`                                           //備註
	TriggerFish   *int32  `protobuf:"varint,8,req,name=trigger_fish,json=triggerFish" json:"trigger_fish,omitempty"`         //觸發魚種id
}

func (x *FishDetail) Reset() {
	*x = FishDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[191]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FishDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FishDetail) ProtoMessage() {}

func (x *FishDetail) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[191]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FishDetail.ProtoReflect.Descriptor instead.
func (*FishDetail) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{191}
}

func (x *FishDetail) GetFishType() int32 {
	if x != nil && x.FishType != nil {
		return *x.FishType
	}
	return 0
}

func (x *FishDetail) GetBetOddsAmount() int64 {
	if x != nil && x.BetOddsAmount != nil {
		return *x.BetOddsAmount
	}
	return 0
}

func (x *FishDetail) GetPayAmount() int64 {
	if x != nil && x.PayAmount != nil {
		return *x.PayAmount
	}
	return 0
}

func (x *FishDetail) GetWinLoseAmount() int64 {
	if x != nil && x.WinLoseAmount != nil {
		return *x.WinLoseAmount
	}
	return 0
}

func (x *FishDetail) GetKillType() int32 {
	if x != nil && x.KillType != nil {
		return *x.KillType
	}
	return 0
}

func (x *FishDetail) GetOdds() int32 {
	if x != nil && x.Odds != nil {
		return *x.Odds
	}
	return 0
}

func (x *FishDetail) GetMemo() string {
	if x != nil && x.Memo != nil {
		return *x.Memo
	}
	return ""
}

func (x *FishDetail) GetTriggerFish() int32 {
	if x != nil && x.TriggerFish != nil {
		return *x.TriggerFish
	}
	return 0
}

//取得熱門標籤
type GetGameRecommendsMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId   *int32 `protobuf:"varint,1,req,name=game_id,json=gameId" json:"game_id,omitempty"`
	VendorId *int32 `protobuf:"varint,2,req,name=vendor_id,json=vendorId" json:"vendor_id,omitempty"`
}

func (x *GetGameRecommendsMsg) Reset() {
	*x = GetGameRecommendsMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[192]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGameRecommendsMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameRecommendsMsg) ProtoMessage() {}

func (x *GetGameRecommendsMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[192]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameRecommendsMsg.ProtoReflect.Descriptor instead.
func (*GetGameRecommendsMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{192}
}

func (x *GetGameRecommendsMsg) GetGameId() int32 {
	if x != nil && x.GameId != nil {
		return *x.GameId
	}
	return 0
}

func (x *GetGameRecommendsMsg) GetVendorId() int32 {
	if x != nil && x.VendorId != nil {
		return *x.VendorId
	}
	return 0
}

type ResHead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    *int32  `protobuf:"varint,1,req,name=code" json:"code,omitempty"`
	Message *string `protobuf:"bytes,2,req,name=message" json:"message,omitempty"`
}

func (x *ResHead) Reset() {
	*x = ResHead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[193]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResHead) ProtoMessage() {}

func (x *ResHead) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[193]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResHead.ProtoReflect.Descriptor instead.
func (*ResHead) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{193}
}

func (x *ResHead) GetCode() int32 {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return 0
}

func (x *ResHead) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

type GetGameRecommendsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Head   *ResHead         `protobuf:"bytes,1,req,name=head" json:"head,omitempty"`      //头部
	Status *int32           `protobuf:"varint,2,req,name=status" json:"status,omitempty"` //標籤開關狀態
	Data   []*GameRecommend `protobuf:"bytes,3,rep,name=data" json:"data,omitempty"`
}

func (x *GetGameRecommendsRes) Reset() {
	*x = GetGameRecommendsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[194]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGameRecommendsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameRecommendsRes) ProtoMessage() {}

func (x *GetGameRecommendsRes) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[194]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameRecommendsRes.ProtoReflect.Descriptor instead.
func (*GetGameRecommendsRes) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{194}
}

func (x *GetGameRecommendsRes) GetHead() *ResHead {
	if x != nil {
		return x.Head
	}
	return nil
}

func (x *GetGameRecommendsRes) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *GetGameRecommendsRes) GetData() []*GameRecommend {
	if x != nil {
		return x.Data
	}
	return nil
}

type GameRecommend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId *int32  `protobuf:"varint,1,req,name=game_id,json=gameId" json:"game_id,omitempty"`
	Url    *string `protobuf:"bytes,2,req,name=url" json:"url,omitempty"`
	Status *int32  `protobuf:"varint,3,req,name=status" json:"status,omitempty"`
}

func (x *GameRecommend) Reset() {
	*x = GameRecommend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[195]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameRecommend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameRecommend) ProtoMessage() {}

func (x *GameRecommend) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[195]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameRecommend.ProtoReflect.Descriptor instead.
func (*GameRecommend) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{195}
}

func (x *GameRecommend) GetGameId() int32 {
	if x != nil && x.GameId != nil {
		return *x.GameId
	}
	return 0
}

func (x *GameRecommend) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *GameRecommend) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

//取得熱門標籤
type GetGameLobbyAddrMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VendorId *int32 `protobuf:"varint,1,req,name=vendor_id,json=vendorId" json:"vendor_id,omitempty"`
}

func (x *GetGameLobbyAddrMsg) Reset() {
	*x = GetGameLobbyAddrMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[196]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGameLobbyAddrMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameLobbyAddrMsg) ProtoMessage() {}

func (x *GetGameLobbyAddrMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[196]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameLobbyAddrMsg.ProtoReflect.Descriptor instead.
func (*GetGameLobbyAddrMsg) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{196}
}

func (x *GetGameLobbyAddrMsg) GetVendorId() int32 {
	if x != nil && x.VendorId != nil {
		return *x.VendorId
	}
	return 0
}

type GetGameLobbyAddrMsgRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Head *ResHead `protobuf:"bytes,1,req,name=head" json:"head,omitempty"` //头部
	Addr *string  `protobuf:"bytes,2,req,name=addr" json:"addr,omitempty"` //
}

func (x *GetGameLobbyAddrMsgRet) Reset() {
	*x = GetGameLobbyAddrMsgRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HallMsg_proto_msgTypes[197]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGameLobbyAddrMsgRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameLobbyAddrMsgRet) ProtoMessage() {}

func (x *GetGameLobbyAddrMsgRet) ProtoReflect() protoreflect.Message {
	mi := &file_HallMsg_proto_msgTypes[197]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameLobbyAddrMsgRet.ProtoReflect.Descriptor instead.
func (*GetGameLobbyAddrMsgRet) Descriptor() ([]byte, []int) {
	return file_HallMsg_proto_rawDescGZIP(), []int{197}
}

func (x *GetGameLobbyAddrMsgRet) GetHead() *ResHead {
	if x != nil {
		return x.Head
	}
	return nil
}

func (x *GetGameLobbyAddrMsgRet) GetAddr() string {
	if x != nil && x.Addr != nil {
		return *x.Addr
	}
	return ""
}

var File_HallMsg_proto protoreflect.FileDescriptor

var file_HallMsg_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x48, 0x61, 0x6c, 0x6c, 0x4d, 0x73, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x08, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x4d, 0x73, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xff, 0x01, 0x0a, 0x0a, 0x47,
	0x75, 0x65, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x44, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x48, 0x44, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x44, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x06, 0x48, 0x44, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x69, 0x74,
	0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x53, 0x69, 0x74, 0x65, 0x49,
	0x44, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x44, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x0a, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x75, 0x65, 0x73, 0x74,
	0x4b, 0x65, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x47, 0x75, 0x65, 0x73, 0x74,
	0x4b, 0x65, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0x8a, 0x02, 0x0a,
	0x09, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x44,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x48, 0x44, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x44, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x06, 0x48, 0x44, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x69,
	0x74, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x53, 0x69, 0x74, 0x65,
	0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x02, 0x28, 0x09, 0x52, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x44, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x0a, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x10,
	0x0a, 0x03, 0x43, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x43, 0x65, 0x72,
	0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0x9e, 0x02, 0x0a, 0x0c, 0x55, 0x73,
	0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x10, 0x0a, 0x03, 0x43, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x43,
	0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x44, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x48, 0x44, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x44,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x48, 0x44, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6c, 0x6c, 0x4c, 0x6f, 0x67, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x41,
	0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72,
	0x65, 0x61, 0x49, 0x44, 0x12, 0x34, 0x0a, 0x08, 0x46, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x08, 0x46, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xae, 0x02, 0x0a, 0x0e, 0x46,
	0x6c, 0x6f, 0x77, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x55, 0x6e,
	0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x24, 0x0a, 0x0d, 0x46,
	0x6c, 0x6f, 0x77, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x46, 0x6c, 0x6f, 0x77, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f,
	0x77, 0x12, 0x28, 0x0a, 0x0f, 0x46, 0x6c, 0x6f, 0x77, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x46, 0x6c, 0x6f, 0x77,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x41,
	0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a,
	0x0e, 0x46, 0x6c, 0x6f, 0x77, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x46, 0x6c, 0x6f, 0x77, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x61,
	0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52,
	0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x8c, 0x13, 0x0a, 0x11,
	0x55, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6c, 0x6c, 0x4c, 0x6f, 0x67, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x55,
	0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x55,
	0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x65, 0x78, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x53, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x61,
	0x64, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x48, 0x65, 0x61, 0x64, 0x49,
	0x44, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x73, 0x54, 0x6f, 0x70, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x49, 0x73, 0x54, 0x6f, 0x70, 0x57, 0x69, 0x6e,
	0x64, 0x6f, 0x77, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x61, 0x73, 0x68, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x07, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x61, 0x73, 0x68, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x47, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18,
	0x09, 0x20, 0x02, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x47, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x12,
	0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12,
	0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x49, 0x73, 0x4b, 0x69, 0x63, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x49, 0x73, 0x4b, 0x69, 0x63, 0x6b, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x73, 0x42, 0x69, 0x6e,
	0x64, 0x47, 0x75, 0x65, 0x73, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x49, 0x73,
	0x42, 0x69, 0x6e, 0x64, 0x47, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x55, 0x73,
	0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x4b, 0x65, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6e, 0x6e, 0x4d, 0x73, 0x67, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x6e, 0x6e, 0x4d, 0x73, 0x67, 0x12, 0x2c, 0x0a, 0x11, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x52, 0x61, 0x74, 0x65, 0x54, 0x69, 0x70, 0x4d, 0x73, 0x67,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x52,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x70, 0x4d, 0x73, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x42, 0x61, 0x6e,
	0x6b, 0x50, 0x77, 0x64, 0x54, 0x69, 0x70, 0x4d, 0x73, 0x67, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x42, 0x61, 0x6e, 0x6b, 0x50, 0x77, 0x64, 0x54, 0x69, 0x70, 0x4d, 0x73, 0x67, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x49, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x55, 0x49, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x53, 0x6f,
	0x72, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x61, 0x79, 0x53, 0x6f, 0x72,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x70, 0x47, 0x72, 0x61, 0x64, 0x65, 0x4d, 0x73, 0x67, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x55, 0x70, 0x47, 0x72, 0x61, 0x64, 0x65, 0x4d, 0x73,
	0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x4c, 0x6f, 0x63, 0x6b, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x4c, 0x6f, 0x63, 0x6b, 0x47, 0x61, 0x6d, 0x65, 0x49,
	0x44, 0x12, 0x26, 0x0a, 0x0e, 0x49, 0x73, 0x42, 0x69, 0x6e, 0x64, 0x5a, 0x68, 0x69, 0x66, 0x75,
	0x62, 0x61, 0x6f, 0x18, 0x17, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x49, 0x73, 0x42, 0x69, 0x6e,
	0x64, 0x5a, 0x68, 0x69, 0x66, 0x75, 0x62, 0x61, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x5a, 0x68, 0x69,
	0x66, 0x75, 0x62, 0x61, 0x6f, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x5a, 0x68, 0x69,
	0x66, 0x75, 0x62, 0x61, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x1a, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x0a,
	0x0f, 0x50, 0x61, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x50, 0x61, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x61, 0x79, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x4d, 0x73, 0x67, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x50,
	0x61, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x50,
	0x61, 0x79, 0x54, 0x69, 0x70, 0x73, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x61,
	0x79, 0x54, 0x69, 0x70, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x49, 0x73, 0x42, 0x69, 0x6e, 0x64, 0x42,
	0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x49,
	0x73, 0x42, 0x69, 0x6e, 0x64, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x42, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x42, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x61, 0x6e,
	0x6b, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x42, 0x61, 0x6e,
	0x6b, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72,
	0x64, 0x4e, 0x75, 0x6d, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x42, 0x61, 0x6e, 0x6b,
	0x43, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x12, 0x22, 0x0a, 0x0c, 0x42, 0x61, 0x6e, 0x6b, 0x52,
	0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x42,
	0x61, 0x6e, 0x6b, 0x52, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x50,
	0x61, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x24, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x50, 0x61, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x49, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x25, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x49, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x31, 0x0a, 0x09, 0x47,
	0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x32, 0x18, 0x26, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x32, 0x52, 0x09, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x32, 0x12, 0x28,
	0x0a, 0x06, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x27, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72,
	0x52, 0x06, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x75, 0x6d, 0x43,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x18, 0x28, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x53, 0x75, 0x6d,
	0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x53, 0x68, 0x6f, 0x77, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x29, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x10, 0x53, 0x68, 0x6f, 0x77, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x53, 0x68, 0x6f, 0x77, 0x41, 0x6c, 0x6c, 0x47, 0x61, 0x6d,
	0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x53, 0x68,
	0x6f, 0x77, 0x41, 0x6c, 0x6c, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x2e,
	0x0a, 0x12, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x54, 0x69, 0x70, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x54, 0x69, 0x70, 0x12, 0x1e,
	0x0a, 0x0a, 0x41, 0x6e, 0x6e, 0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x18, 0x2c, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x41, 0x6e, 0x6e, 0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x1a,
	0x0a, 0x08, 0x43, 0x6c, 0x75, 0x62, 0x4f, 0x70, 0x65, 0x6e, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x43, 0x6c, 0x75, 0x62, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x3f, 0x0a, 0x0f, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x2e, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x53, 0x68, 0x6f, 0x77, 0x18, 0x2f,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x42, 0x61, 0x6e,
	0x6b, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x2c, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74,
	0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x53, 0x68, 0x6f, 0x77, 0x18, 0x30, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x11, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x53,
	0x68, 0x6f, 0x77, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x31,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c,
	0x53, 0x68, 0x6f, 0x77, 0x56, 0x49, 0x50, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x32, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x53, 0x68, 0x6f, 0x77, 0x56, 0x49, 0x50, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x68, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x33,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x53, 0x68, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x49, 0x44,
	0x12, 0x20, 0x0a, 0x0b, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18,
	0x34, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x68, 0x6f, 0x77, 0x43, 0x53, 0x18, 0x35, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x53, 0x68, 0x6f, 0x77, 0x43, 0x53, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x6c,
	0x61, 0x79, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x53, 0x18, 0x36, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x50, 0x6c, 0x61, 0x79, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x53, 0x12, 0x28, 0x0a, 0x0f, 0x50, 0x6c,
	0x61, 0x79, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x18, 0x37, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0f, 0x50, 0x6c, 0x61, 0x79, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x50, 0x6c, 0x61, 0x79, 0x74, 0x69, 0x6d, 0x65,
	0x56, 0x49, 0x50, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x38, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10,
	0x50, 0x6c, 0x61, 0x79, 0x74, 0x69, 0x6d, 0x65, 0x56, 0x49, 0x50, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x12, 0x32, 0x0a, 0x14, 0x53, 0x68, 0x6f, 0x77, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x42,
	0x69, 0x6e, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x39, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14,
	0x53, 0x68, 0x6f, 0x77, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x42, 0x69, 0x6e, 0x64, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x53, 0x68, 0x6f, 0x77, 0x41, 0x6c, 0x6c, 0x47,
	0x61, 0x6d, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x3a, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x14, 0x53, 0x68, 0x6f, 0x77, 0x41, 0x6c, 0x6c, 0x47, 0x61, 0x6d, 0x65, 0x42,
	0x69, 0x6e, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x53, 0x68, 0x6f, 0x77,
	0x56, 0x49, 0x50, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x69, 0x6e, 0x64, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x53, 0x68, 0x6f, 0x77, 0x56, 0x49, 0x50,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x69, 0x6e, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x28,
	0x0a, 0x0f, 0x53, 0x68, 0x6f, 0x77, 0x43, 0x53, 0x42, 0x69, 0x6e, 0x64, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x53, 0x68, 0x6f, 0x77, 0x43, 0x53, 0x42,
	0x69, 0x6e, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x53, 0x68, 0x6f, 0x77,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x50, 0x6f, 0x70, 0x75, 0x70, 0x18, 0x3d, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x10, 0x53, 0x68, 0x6f, 0x77, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x50,
	0x6f, 0x70, 0x75, 0x70, 0x12, 0x2a, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x50,
	0x6f, 0x70, 0x75, 0x70, 0x54, 0x65, 0x78, 0x74, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x50, 0x6f, 0x70, 0x75, 0x70, 0x54, 0x65, 0x78, 0x74,
	0x12, 0x22, 0x0a, 0x0c, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x3f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x72,
	0x61, 0x6d, 0x65, 0x18, 0x40, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x47, 0x69, 0x66, 0x74, 0x4d, 0x6f,
	0x6e, 0x65, 0x79, 0x18, 0x41, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x47, 0x69, 0x66, 0x74, 0x4d,
	0x6f, 0x6e, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x13, 0x53, 0x68, 0x6f, 0x77, 0x43, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x41, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x42, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x13, 0x53, 0x68, 0x6f, 0x77, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x41,
	0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x38, 0x0a, 0x17, 0x53, 0x68, 0x6f, 0x77, 0x46, 0x69,
	0x72, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x74, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x18, 0x43, 0x20, 0x01, 0x28, 0x05, 0x52, 0x17, 0x53, 0x68, 0x6f, 0x77, 0x46, 0x69, 0x72,
	0x73, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x12, 0x28, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x44, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x8e, 0x01, 0x0a, 0x0b, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x47, 0x57,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x47, 0x57, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x6f, 0x72, 0x74,
	0x18, 0x04, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x6f,
	0x72, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0x6b, 0x0a, 0x06, 0x42,
	0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x4c,
	0x69, 0x6e, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x18,
	0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x12,
	0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0xc2, 0x01, 0x0a, 0x09, 0x47, 0x61, 0x6d,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x12, 0x18,
	0x0a, 0x07, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x07, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x63, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x49, 0x63, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x63, 0x6f, 0x6e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x49, 0x63, 0x6f, 0x6e, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x53, 0x6b, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x53, 0x6b, 0x69, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0x4f, 0x0a,
	0x0a, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x43, 0x65, 0x72, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x03, 0x43, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0x3d,
	0x0a, 0x0a, 0x48, 0x61, 0x6c, 0x6c, 0x56, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06,
	0x41, 0x72, 0x65, 0x61, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x06, 0x41, 0x72,
	0x65, 0x61, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0xe6, 0x02,
	0x0a, 0x0b, 0x48, 0x61, 0x6c, 0x6c, 0x56, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a,
	0x0e, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0e, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x4f, 0x53, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x49, 0x4f, 0x53, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x42, 0x69, 0x6c,
	0x6c, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x42,
	0x69, 0x6c, 0x6c, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6c, 0x75,
	0x62, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43,
	0x6c, 0x75, 0x62, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x72, 0x65, 0x61, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x72, 0x65, 0x61, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x41, 0x6e,
	0x64, 0x72, 0x6f, 0x69, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x32, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x32, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x4f, 0x53, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x32, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x49, 0x4f, 0x53, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x32, 0x22, 0x66, 0x0a, 0x11, 0x41, 0x6c, 0x6c, 0x47, 0x61, 0x6d,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x38, 0x0a, 0x0a, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0xa7,
	0x04, 0x0a, 0x0e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x61, 0x6d,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x47, 0x61, 0x6d,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4d, 0x6f,
	0x6e, 0x65, 0x79, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x04, 0x20,
	0x02, 0x28, 0x09, 0x52, 0x04, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x61, 0x73, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x06,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x42, 0x61, 0x73, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x41, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x1e, 0x0a, 0x0a, 0x49, 0x4f, 0x53, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x49, 0x4f, 0x53, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x22, 0x0a, 0x0c, 0x4b, 0x69, 0x63, 0x6b, 0x4f, 0x75, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x4b, 0x69, 0x63, 0x6b, 0x4f, 0x75, 0x74, 0x4d, 0x6f,
	0x6e, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x61, 0x78, 0x4f, 0x64, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x4d, 0x61, 0x78, 0x4f, 0x64, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x47,
	0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x47,
	0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f,
	0x49, 0x44, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44,
	0x12, 0x12, 0x0a, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x50, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x1c, 0x0a, 0x09, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x44, 0x65, 0x73, 0x63, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x65,
	0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x42, 0x65,
	0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x69, 0x70, 0x42, 0x65, 0x74,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x69, 0x70,
	0x42, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x6c, 0x0a, 0x19, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x46,
	0x6c, 0x61, 0x67, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x12, 0x17, 0x0a,
	0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0x93, 0x01, 0x0a, 0x0e, 0x47, 0x61, 0x6d, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f,
	0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44,
	0x12, 0x1a, 0x0a, 0x08, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x44, 0x22, 0x91, 0x01, 0x0a,
	0x0c, 0x5a, 0x68, 0x69, 0x66, 0x75, 0x62, 0x61, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a,
	0x08, 0x5a, 0x68, 0x69, 0x66, 0x75, 0x62, 0x61, 0x6f, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x08, 0x5a, 0x68, 0x69, 0x66, 0x75, 0x62, 0x61, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x61,
	0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x61,
	0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x56, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x43,
	0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x43,
	0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f,
	0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44,
	0x22, 0xb3, 0x01, 0x0a, 0x0c, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0b, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64,
	0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x56,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x56, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x08, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0x63, 0x0a, 0x0e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x6c, 0x64, 0x50,
	0x77, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x4f, 0x6c, 0x64, 0x50, 0x77, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x4e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0b, 0x4e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0x57, 0x0a, 0x0e, 0x53,
	0x65, 0x6e, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x56, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x54, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x54, 0x65, 0x6c, 0x12,
	0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x08, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x41,
	0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72,
	0x65, 0x61, 0x49, 0x44, 0x22, 0x90, 0x01, 0x0a, 0x11, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x56, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x44, 0x6f, 0x77, 0x6e, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x44,
	0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x12, 0x17,
	0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0x3d, 0x0a, 0x0a, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x79, 0x46, 0x61, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x61, 0x63, 0x65, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x46, 0x61, 0x63, 0x65, 0x49, 0x44, 0x12, 0x17, 0x0a,
	0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0x75, 0x0a, 0x0c, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x44,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24,
	0x0a, 0x0d, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x4f, 0x50, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x02, 0x4f, 0x50, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0xc6, 0x01,
	0x0a, 0x0f, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x03, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x4f, 0x50, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x02, 0x4f, 0x50, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x05, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0c, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x18, 0x06, 0x20, 0x02, 0x28, 0x03,
	0x52, 0x0b, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x12, 0x17, 0x0a,
	0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0x6f, 0x0a, 0x10, 0x42, 0x69, 0x6e, 0x64, 0x47, 0x75,
	0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x54, 0x65,
	0x6c, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x03, 0x54, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x56, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x56, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0x3f, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16,
	0x0a, 0x06, 0x48, 0x44, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06,
	0x48, 0x44, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x43, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x09, 0x52, 0x03, 0x43, 0x65, 0x72, 0x22, 0x60, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x55,
	0x73, 0x65, 0x72, 0x48, 0x61, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x22, 0x70, 0x0a, 0x11, 0x46, 0x69,
	0x6e, 0x64, 0x53, 0x65, 0x74, 0x50, 0x77, 0x64, 0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x54, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x03, 0x54, 0x65,
	0x6c, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x05, 0x56, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0x67, 0x0a, 0x12,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x42, 0x61, 0x6e, 0x6b, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x6c, 0x64, 0x50, 0x77, 0x64, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x06, 0x4f, 0x6c, 0x64, 0x50, 0x77, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x4e, 0x65,
	0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x0b, 0x4e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41,
	0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0x62, 0x0a, 0x15, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x65, 0x74,
	0x42, 0x61, 0x6e, 0x6b, 0x50, 0x77, 0x64, 0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x56, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x56,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0x99, 0x01, 0x0a, 0x0a, 0x4d, 0x61,
	0x69, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x52, 0x65,
	0x61, 0x64, 0x18, 0x04, 0x20, 0x02, 0x28, 0x08, 0x52, 0x06, 0x49, 0x73, 0x52, 0x65, 0x61, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41,
	0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0x55, 0x0a, 0x08, 0x4d, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x30, 0x0a, 0x08, 0x4d, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d,
	0x61, 0x69, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x08, 0x4d, 0x61, 0x69, 0x6c, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0x3c, 0x0a, 0x11,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x61, 0x69, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x02, 0x49,
	0x44, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0x97, 0x01, 0x0a, 0x0e, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x4d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x12,
	0x22, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0c, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x18, 0x04, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x17, 0x0a, 0x07, 0x41,
	0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72,
	0x65, 0x61, 0x49, 0x44, 0x22, 0x90, 0x01, 0x0a, 0x0b, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x61, 0x74, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x57, 0x58, 0x4e, 0x6f,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x57, 0x58, 0x4e, 0x6f, 0x12, 0x0e, 0x0a, 0x02,
	0x51, 0x51, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x02, 0x51, 0x51, 0x12, 0x16, 0x0a, 0x06,
	0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x6c,
	0x69, 0x70, 0x61, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x4a, 0x69, 0x75, 0x6c, 0x69, 0x61, 0x6f, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4a, 0x69, 0x75, 0x6c, 0x69, 0x61, 0x6f, 0x12, 0x17,
	0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0x59, 0x0a, 0x09, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x09, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x61, 0x74, 0x69, 0x6c, 0x52, 0x09,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65,
	0x61, 0x5f, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61,
	0x49, 0x44, 0x22, 0x76, 0x0a, 0x0b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0x43, 0x0a, 0x10, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06,
	0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x22,
	0xb3, 0x01, 0x0a, 0x0a, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06,
	0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x54, 0x65,
	0x6c, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x03, 0x54, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02,
	0x51, 0x51, 0x18, 0x04, 0x20, 0x02, 0x28, 0x09, 0x52, 0x02, 0x51, 0x51, 0x12, 0x12, 0x0a, 0x04,
	0x57, 0x58, 0x4e, 0x6f, 0x18, 0x05, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x57, 0x58, 0x4e, 0x6f,
	0x12, 0x12, 0x0a, 0x04, 0x4d, 0x65, 0x6d, 0x6f, 0x18, 0x06, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04,
	0x4d, 0x65, 0x6d, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x12, 0x17, 0x0a, 0x07,
	0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41,
	0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0x61, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74,
	0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x0b, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0x99, 0x01, 0x0a, 0x0e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x50,
	0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09,
	0x50, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x68, 0x76, 0x50,
	0x61, 0x79, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x68, 0x76, 0x50,
	0x61, 0x79, 0x65, 0x72, 0x22, 0x74, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0x41, 0x0a, 0x06, 0x47, 0x65,
	0x74, 0x46, 0x41, 0x51, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x49, 0x44, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0x3e, 0x0a,
	0x09, 0x46, 0x41, 0x51, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0x62, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x1c,
	0x0a, 0x09, 0x54, 0x6e, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x09, 0x54, 0x6e, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x4c, 0x6f, 0x67, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08,
	0x4c, 0x6f, 0x67, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61,
	0x5f, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49,
	0x44, 0x22, 0xb3, 0x01, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x4c, 0x6f, 0x67,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x54, 0x61, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x03, 0x52, 0x09, 0x54, 0x61, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0x6d, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x74, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x0e, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x74, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x74, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0e, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0x5d, 0x0a, 0x0a, 0x42, 0x61, 0x6e, 0x6b, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41,
	0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0x55, 0x0a, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x30, 0x0a, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42,
	0x61, 0x6e, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0xe1, 0x01, 0x0a,
	0x0e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x1e, 0x0a, 0x0a, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x0a, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x52, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x07, 0x52, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x74,
	0x4d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x74, 0x4d, 0x73,
	0x67, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x69, 0x66, 0x74, 0x43,
	0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x47, 0x69, 0x66, 0x74, 0x43,
	0x61, 0x73, 0x68, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c,
	0x42, 0x6f, 0x6e, 0x75, 0x73, 0x44, 0x61, 0x79, 0x44, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x0c, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x44, 0x61, 0x79, 0x44, 0x61, 0x74, 0x61,
	0x22, 0xdb, 0x01, 0x0a, 0x09, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x52, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x43, 0x0a, 0x0f, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6e, 0x65, 0x74, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x0f, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3e, 0x0a, 0x0d, 0x44, 0x6f, 0x77, 0x6e, 0x53, 0x74, 0x65,
	0x61, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6e,
	0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x6f, 0x77,
	0x6e, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x52, 0x0d, 0x44, 0x6f, 0x77, 0x6e, 0x53, 0x74, 0x65, 0x61,
	0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0x92,
	0x05, 0x0a, 0x0f, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1e,
	0x0a, 0x0a, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x0a, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x06,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x0c, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x6c, 0x6f, 0x77, 0x73,
	0x18, 0x07, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x6c, 0x6f,
	0x77, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x63, 0x6f, 0x6d,
	0x65, 0x18, 0x08, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0b, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x6e,
	0x63, 0x6f, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0c, 0x52, 0x65, 0x6d, 0x61,
	0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x61, 0x6e, 0x42,
	0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x43, 0x61,
	0x6e, 0x42, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x66, 0x66, 0x69,
	0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x31, 0x18, 0x0b, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0b, 0x4f,
	0x66, 0x66, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x31, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x57, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x18, 0x0c, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x0c, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x57, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x12, 0x20,
	0x0a, 0x0b, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x52, 0x4c, 0x18, 0x0d, 0x20,
	0x02, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x52, 0x4c,
	0x12, 0x24, 0x0a, 0x0d, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x63, 0x6f, 0x6d,
	0x65, 0x18, 0x0e, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0d, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x32, 0x18, 0x0f, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x66, 0x66,
	0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x32, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x66, 0x66, 0x69,
	0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x33, 0x18, 0x10, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0b, 0x4f,
	0x66, 0x66, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x33, 0x12, 0x14, 0x0a, 0x05, 0x51, 0x52,
	0x55, 0x72, 0x6c, 0x18, 0x11, 0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x51, 0x52, 0x55, 0x72, 0x6c,
	0x12, 0x1c, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x31, 0x54, 0x79, 0x70, 0x65, 0x18, 0x12, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x09, 0x55, 0x73, 0x65, 0x72, 0x31, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x32, 0x54, 0x79, 0x70, 0x65, 0x18, 0x13, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x09, 0x55, 0x73, 0x65, 0x72, 0x32, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x55, 0x73, 0x65, 0x72, 0x33, 0x54, 0x79, 0x70, 0x65, 0x18, 0x14, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x09, 0x55, 0x73, 0x65, 0x72, 0x33, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72,
	0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65,
	0x61, 0x49, 0x44, 0x22, 0x75, 0x0a, 0x0e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x6f, 0x77, 0x6e,
	0x53, 0x74, 0x65, 0x61, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a,
	0x09, 0x59, 0x65, 0x73, 0x74, 0x65, 0x72, 0x64, 0x61, 0x79, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x09, 0x59, 0x65, 0x73, 0x74, 0x65, 0x72, 0x64, 0x61, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x54,
	0x6f, 0x64, 0x61, 0x79, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x54, 0x6f, 0x64, 0x61,
	0x79, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0x92, 0x01, 0x0a, 0x0d, 0x4a,
	0x6f, 0x69, 0x6e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x52, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x52, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06,
	0x52, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49,
	0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x22,
	0x73, 0x0a, 0x0e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x52, 0x65, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x18, 0x03, 0x20,
	0x02, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x41,
	0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72,
	0x65, 0x61, 0x49, 0x44, 0x22, 0x57, 0x0a, 0x0e, 0x43, 0x53, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x74,
	0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14,
	0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0xaa, 0x01,
	0x0a, 0x11, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x54,
	0x65, 0x6c, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x03, 0x54, 0x65, 0x6c, 0x12, 0x16, 0x0a,
	0x06, 0x57, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x57,
	0x65, 0x69, 0x78, 0x69, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x51, 0x51, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x51, 0x51, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x56,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x56, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0x4c, 0x0a, 0x09, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0x6a, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x78,
	0x79, 0x50, 0x4f, 0x53, 0x54, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x72, 0x6c,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x03, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x48,
	0x74, 0x6d, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x48,
	0x74, 0x6d, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x22, 0x78, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x43,
	0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x67, 0x12, 0x16, 0x0a,
	0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x47,
	0x61, 0x6d, 0x65, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x6c, 0x61, 0x67, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x46, 0x6c, 0x61, 0x67, 0x49, 0x44, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0xb2,
	0x02, 0x0a, 0x12, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x73, 0x67, 0x12, 0x3d, 0x0a, 0x0b, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6e, 0x65, 0x74,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0b, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09,
	0x42, 0x65, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x09, 0x42, 0x65, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x72,
	0x65, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x46,
	0x72, 0x65, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0b, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x73,
	0x67, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x73, 0x67,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x50, 0x69, 0x53, 0x61, 0x69, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x50, 0x69, 0x53, 0x61, 0x69, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72,
	0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65,
	0x61, 0x49, 0x44, 0x22, 0x8e, 0x01, 0x0a, 0x11, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x0f, 0x4c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0f, 0x4c, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x41,
	0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72,
	0x65, 0x61, 0x49, 0x44, 0x22, 0x6f, 0x0a, 0x0e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x6f, 0x72, 0x74, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x53, 0x6f, 0x72, 0x74, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18,
	0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41,
	0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0x4c, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65,
	0x43, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x4d,
	0x73, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72,
	0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65,
	0x61, 0x49, 0x44, 0x22, 0xf5, 0x02, 0x0a, 0x16, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6d, 0x70,
	0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x16,
	0x0a, 0x06, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06,
	0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x04, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x3a, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6e, 0x65,
	0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x4d, 0x73, 0x67, 0x52, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x12, 0x36, 0x0a, 0x0a, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0a,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x68, 0x6f, 0x77, 0x18, 0x08, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x04, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09, 0x45, 0x6e, 0x74, 0x65, 0x72,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x49,
	0x44, 0x18, 0x0a, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74,
	0x49, 0x44, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0x6d, 0x0a, 0x0c, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05,
	0x42, 0x6f, 0x6e, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x65, 0x61, 0x64, 0x4c, 0x69, 0x6e,
	0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x44, 0x65, 0x61, 0x64, 0x4c, 0x69, 0x6e,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0x79, 0x0a, 0x0e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x61, 0x63, 0x68, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x0a, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x61, 0x63, 0x68, 0x12, 0x1e, 0x0a, 0x0a,
	0x46, 0x72, 0x65, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x0a, 0x46, 0x72, 0x65, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41,
	0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0x46, 0x0a, 0x19, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x49,
	0x64, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x49, 0x64, 0x78, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52,
	0x03, 0x49, 0x64, 0x78, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0x72, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x42, 0x75, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4d, 0x73, 0x67,
	0x12, 0x16, 0x0a, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x6c, 0x61, 0x67,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x46, 0x6c, 0x61, 0x67, 0x49, 0x44,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61,
	0x5f, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49,
	0x44, 0x22, 0x59, 0x0a, 0x0c, 0x42, 0x75, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4d, 0x73,
	0x67, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x07, 0x52, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x52,
	0x65, 0x74, 0x4d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x74,
	0x4d, 0x73, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0x41, 0x0a, 0x0e,
	0x4a, 0x61, 0x63, 0x6b, 0x70, 0x6f, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x22,
	0x43, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65,
	0x4d, 0x73, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x17, 0x0a, 0x07, 0x41,
	0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72,
	0x65, 0x61, 0x49, 0x44, 0x22, 0x84, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x06, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x55, 0x70, 0x70,
	0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x55, 0x70, 0x70, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x46, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x65, 0x63, 0x4d,
	0x73, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72,
	0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65,
	0x61, 0x49, 0x44, 0x22, 0xf7, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x65, 0x63, 0x52, 0x65, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x0b, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a,
	0x0f, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0f, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x54, 0x61, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x0e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x24, 0x0a, 0x0d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x78, 0x42, 0x6f, 0x6e, 0x75, 0x73,
	0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x78,
	0x42, 0x6f, 0x6e, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x18, 0x06, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0e, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x22, 0x64, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x78,
	0x4c, 0x6f, 0x67, 0x4d, 0x73, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a,
	0x0a, 0x08, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x08, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72,
	0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65,
	0x61, 0x49, 0x44, 0x22, 0xca, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x78, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x49, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x61,
	0x78, 0x4c, 0x6f, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6e, 0x65, 0x74,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x54, 0x61, 0x78, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x74, 0x52, 0x0f, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x78, 0x4c, 0x6f, 0x67, 0x12, 0x1a, 0x0a, 0x08,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x61, 0x78, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x61, 0x78, 0x12, 0x24, 0x0a, 0x0d, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x54, 0x61, 0x78, 0x42, 0x6f, 0x6e, 0x75, 0x78, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x0d, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x61, 0x78, 0x42, 0x6f, 0x6e, 0x75, 0x78, 0x12, 0x20,
	0x0a, 0x0b, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x0b, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65,
	0x22, 0xb5, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x54, 0x61, 0x78, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x62, 0x74, 0x61, 0x78, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x0a, 0x62, 0x74, 0x61, 0x78, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x63, 0x64, 0x74, 0x61, 0x78, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x64, 0x74, 0x61, 0x78, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x26, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x61, 0x78, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54,
	0x61, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x41, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4d, 0x73, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72,
	0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65,
	0x61, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x84, 0x02, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x3d, 0x0a, 0x0c, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0c, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54,
	0x61, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0e,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x61, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24,
	0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0d, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x65,
	0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0f, 0x50,
	0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22,
	0x0a, 0x0c, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x6b, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x26, 0x0a, 0x0e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x5e, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x46, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x43, 0x68, 0x76, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x43, 0x68, 0x76, 0x4d, 0x73, 0x67, 0x22, 0x5f, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x54, 0x61, 0x78, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x30, 0x0a, 0x07, 0x54, 0x61, 0x78, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x78, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x07, 0x54, 0x61, 0x78, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x6c, 0x0a, 0x0c, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x54, 0x61, 0x78, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x16,
	0x0a, 0x06, 0x53, 0x74, 0x61, 0x67, 0x65, 0x31, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06,
	0x53, 0x74, 0x61, 0x67, 0x65, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x67, 0x65, 0x32,
	0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x67, 0x65, 0x32, 0x12, 0x16,
	0x0a, 0x06, 0x53, 0x74, 0x61, 0x67, 0x65, 0x33, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06,
	0x53, 0x74, 0x61, 0x67, 0x65, 0x33, 0x22, 0x49, 0x0a, 0x16, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x6d, 0x4d, 0x73, 0x67,
	0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x22, 0x79, 0x0a, 0x16, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x6d, 0x52, 0x65, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x41,
	0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72,
	0x65, 0x61, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x67, 0x65, 0x31, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x67, 0x65, 0x31, 0x12, 0x16, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x67, 0x65, 0x32, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74,
	0x61, 0x67, 0x65, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x67, 0x65, 0x33, 0x18, 0x04,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x67, 0x65, 0x33, 0x22, 0x49, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x78, 0x42, 0x6f, 0x6e, 0x75, 0x73,
	0x4c, 0x6f, 0x67, 0x4d, 0x73, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x7b, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x54, 0x61, 0x78, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x4c, 0x6f, 0x67, 0x52, 0x65,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x48, 0x0a, 0x0f, 0x54, 0x61,
	0x78, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x78, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x4c, 0x6f, 0x67, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x0f, 0x54, 0x61, 0x78, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x4c, 0x6f, 0x67,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0xb8, 0x01, 0x0a, 0x14, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x61,
	0x78, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07,
	0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x42, 0x54, 0x61, 0x78, 0x42,
	0x6f, 0x6e, 0x75, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x0f, 0x42, 0x54, 0x61, 0x78, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x2a, 0x0a, 0x10, 0x43, 0x44, 0x54, 0x61, 0x78, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x10, 0x43, 0x44, 0x54,
	0x61, 0x78, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a,
	0x13, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x61, 0x78, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x13, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x54, 0x61, 0x78, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x46, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0xae, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x55, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x65, 0x6d, 0x70, 0x42, 0x55,
	0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x54, 0x65, 0x6d, 0x70, 0x42,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x4e, 0x65, 0x77,
	0x55, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0c, 0x54, 0x6f, 0x64, 0x61,
	0x79, 0x4e, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x6f, 0x64, 0x61,
	0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x54, 0x6f,
	0x64, 0x61, 0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x22, 0x3f, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x53,
	0x68, 0x61, 0x6e, 0x46, 0x75, 0x4d, 0x73, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61,
	0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x3a, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x53, 0x68, 0x61, 0x6e, 0x46, 0x75, 0x52, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x6f, 0x64,
	0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x43, 0x6f, 0x64, 0x65, 0x49,
	0x44, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0xd7, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61,
	0x6e, 0x46, 0x75, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72,
	0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65,
	0x61, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x70, 0x70,
	0x4b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x70, 0x70, 0x4b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x9a, 0x02, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x6e, 0x46, 0x75, 0x43, 0x68, 0x61,
	0x74, 0x52, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x72,
	0x6c, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55,
	0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x41, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x70,
	0x70, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x49, 0x44, 0x22, 0x50, 0x0a, 0x1d,
	0x4e, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x65,
	0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67, 0x12, 0x17, 0x0a,
	0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0xa3,
	0x03, 0x0a, 0x1d, 0x4e, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x67, 0x44,
	0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x52, 0x65, 0x67, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0c, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x65, 0x6c, 0x66, 0x57, 0x69,
	0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0c, 0x53, 0x65,
	0x6c, 0x66, 0x57, 0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x18, 0x06, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x75, 0x6d, 0x53, 0x75, 0x62, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x18, 0x07, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0b, 0x53, 0x75, 0x6d, 0x53, 0x75, 0x62, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x75, 0x6d, 0x53, 0x75, 0x62, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0b, 0x53, 0x75, 0x6d, 0x53, 0x75,
	0x62, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x53, 0x75, 0x6d, 0x53, 0x75, 0x62,
	0x57, 0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x14, 0x53, 0x75, 0x6d, 0x53, 0x75, 0x62, 0x57, 0x69, 0x74, 0x68,
	0x44, 0x72, 0x61, 0x77, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x51, 0x52,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x51, 0x52, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x55, 0x70, 0x70, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x55, 0x70, 0x70, 0x65, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x22, 0x6e, 0x0a, 0x1f, 0x4e, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x55, 0x73, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x44, 0x61, 0x74, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0x22, 0xf3, 0x01, 0x0a, 0x1f, 0x4e, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x74, 0x12, 0x4e, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53,
	0x75, 0x62, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62,
	0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62,
	0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x6d, 0x43,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x73, 0x75, 0x6d,
	0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x75, 0x6d, 0x57, 0x69, 0x74,
	0x68, 0x44, 0x72, 0x61, 0x77, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x75, 0x6d,
	0x57, 0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x6d, 0x42,
	0x6f, 0x6e, 0x75, 0x73, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x73, 0x75, 0x6d, 0x42,
	0x6f, 0x6e, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x75, 0x73, 0x65,
	0x72, 0x6c, 0x61, 0x73, 0x74, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x75, 0x73, 0x65, 0x72, 0x6c, 0x61, 0x73, 0x74, 0x22, 0xca, 0x01, 0x0a, 0x1c, 0x4e,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74,
	0x53, 0x75, 0x62, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x67, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x52, 0x65, 0x67, 0x44, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a,
	0x0f, 0x53, 0x75, 0x6d, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0f, 0x53, 0x75, 0x6d, 0x43, 0x68, 0x61, 0x72, 0x67,
	0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x53, 0x75, 0x6d, 0x57, 0x69,
	0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x11, 0x53, 0x75, 0x6d, 0x57, 0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0b, 0x42, 0x6f, 0x6e, 0x75,
	0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x5a, 0x0a, 0x27, 0x4e, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4d,
	0x73, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x22, 0xaf, 0x01, 0x0a, 0x27, 0x4e, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x74, 0x12,
	0x72, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x03, 0x53, 0x75, 0x6d, 0x22, 0xa2, 0x01, 0x0a, 0x28, 0x4e, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x57, 0x69,
	0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x0e, 0x57, 0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x55, 0x0a, 0x22, 0x4e, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x73, 0x67,
	0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x22, 0x99, 0x01, 0x0a, 0x22, 0x4e, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x74, 0x12, 0x61, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4e, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x14, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x53,
	0x75, 0x6d, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x53, 0x75, 0x6d, 0x22, 0x99, 0x01,
	0x0a, 0x23, 0x4e, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x57, 0x69, 0x74, 0x68, 0x44, 0x72, 0x61,
	0x77, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0e, 0x57,
	0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x65, 0x6d, 0x6f, 0x18, 0x04, 0x20,
	0x02, 0x28, 0x09, 0x52, 0x04, 0x4d, 0x65, 0x6d, 0x6f, 0x22, 0x52, 0x0a, 0x1f, 0x4e, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x42, 0x6f,
	0x6e, 0x75, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x17, 0x0a, 0x07,
	0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41,
	0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x41, 0x0a,
	0x1f, 0x4e, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47,
	0x65, 0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6f, 0x6f, 0x6c, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6f, 0x6f, 0x6c, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x81, 0x01, 0x0a, 0x1e, 0x4e, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x57, 0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x4d, 0x73, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x63, 0x68, 0x76, 0x4d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x68,
	0x76, 0x4d, 0x73, 0x67, 0x22, 0x3b, 0x0a, 0x21, 0x4e, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x57, 0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x68, 0x76,
	0x4d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x63, 0x68, 0x76, 0x4d, 0x73,
	0x67, 0x22, 0x33, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x47, 0x61, 0x6d, 0x65,
	0x46, 0x6c, 0x61, 0x67, 0x42, 0x79, 0x41, 0x72, 0x65, 0x61, 0x4d, 0x73, 0x67, 0x12, 0x17, 0x0a,
	0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0x4d, 0x0a, 0x1a, 0x4e, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x73, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x69, 0x0a, 0x1a, 0x4e, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x74, 0x12, 0x4b, 0x0a, 0x0d, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6e, 0x65, 0x74,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x0d, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0xef, 0x01, 0x0a, 0x1b, 0x4e, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x55, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x09, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x6f,
	0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x54,
	0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x6f, 0x70, 0x55,
	0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0b, 0x54,
	0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0x6c, 0x0a, 0x1d, 0x4e, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x47,
	0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x4d, 0x73, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x44, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65,
	0x22, 0xa3, 0x01, 0x0a, 0x1d, 0x4e, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x47, 0x65,
	0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x59, 0x65, 0x73, 0x74, 0x65, 0x72, 0x64, 0x61, 0x79, 0x52,
	0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x11, 0x59,
	0x65, 0x73, 0x74, 0x65, 0x72, 0x64, 0x61, 0x79, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x53, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x53,
	0x75, 0x6d, 0x12, 0x42, 0x0a, 0x07, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x07, 0x4c,
	0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xa4, 0x01, 0x0a, 0x1e, 0x4e, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x74, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x59, 0x65, 0x73,
	0x74, 0x65, 0x72, 0x64, 0x61, 0x79, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x11, 0x59, 0x65, 0x73, 0x74, 0x65, 0x72, 0x64, 0x61, 0x79, 0x52,
	0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x75, 0x6d, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x53, 0x75, 0x6d, 0x12, 0x42, 0x0a, 0x07, 0x4c, 0x6f, 0x67,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6e, 0x65, 0x74,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x47,
	0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x07, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x6a, 0x0a,
	0x1f, 0x4e, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47,
	0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4d, 0x73, 0x67,
	0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x68, 0x76, 0x4d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x63, 0x68, 0x76, 0x4d, 0x73, 0x67, 0x22, 0xaf, 0x05, 0x0a, 0x1f, 0x4e, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x74,
	0x65, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x75, 0x6d, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x75, 0x6d, 0x62, 0x6f,
	0x6e, 0x75, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6f, 0x6f,
	0x6c, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x70,
	0x6f, 0x6f, 0x6c, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x65, 0x77,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x0d, 0x6e, 0x65, 0x77, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x12,
	0x22, 0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x6c, 0x61, 0x73, 0x74, 0x18,
	0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0c, 0x6e, 0x65, 0x77, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x6c,
	0x61, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x75, 0x73, 0x65, 0x72, 0x18, 0x06, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0e, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x75, 0x73, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x6e,
	0x65, 0x77, 0x75, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x18, 0x07, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x0c, 0x6e, 0x65, 0x77, 0x75, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x6c, 0x61, 0x73, 0x74, 0x18, 0x08, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x6c, 0x61, 0x73, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x6c, 0x61, 0x73, 0x74, 0x18, 0x0a,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x6c, 0x61, 0x73,
	0x74, 0x12, 0x28, 0x0a, 0x0f, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x6c, 0x61, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0f, 0x62, 0x6f, 0x6e, 0x75,
	0x73, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x6c, 0x61, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x18, 0x0c, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x12, 0x22, 0x0a,
	0x0c, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x18, 0x0d, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x74, 0x6f, 0x64, 0x61,
	0x79, 0x12, 0x2a, 0x0a, 0x10, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x74, 0x6f, 0x64, 0x61, 0x79, 0x18, 0x0e, 0x20, 0x02, 0x28, 0x05, 0x52, 0x10, 0x62, 0x6f, 0x6e,
	0x75, 0x73, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x12, 0x22, 0x0a,
	0x0c, 0x70, 0x61, 0x79, 0x75, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x18, 0x0f, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x61, 0x79, 0x75, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x64, 0x61,
	0x79, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x75, 0x73, 0x65, 0x72, 0x6c, 0x61, 0x73, 0x74,
	0x18, 0x10, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x75, 0x73, 0x65, 0x72, 0x6c,
	0x61, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x72, 0x75,
	0x72, 0x6c, 0x18, 0x12, 0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x71, 0x72, 0x75, 0x72, 0x6c, 0x12,
	0x22, 0x0a, 0x0c, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x73, 0x65, 0x63, 0x73, 0x18,
	0x13, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0c, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x73,
	0x65, 0x63, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x68, 0x76, 0x4d, 0x73, 0x67, 0x18, 0x14, 0x20,
	0x02, 0x28, 0x09, 0x52, 0x06, 0x43, 0x68, 0x76, 0x4d, 0x73, 0x67, 0x22, 0x71, 0x0a, 0x22, 0x4e,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x6f, 0x67, 0x4d, 0x73,
	0x67, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x44, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x22, 0xd7,
	0x01, 0x0a, 0x22, 0x4e, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4c,
	0x6f, 0x67, 0x52, 0x65, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x6c, 0x61,
	0x73, 0x74, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x6c, 0x61, 0x73, 0x74, 0x64, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x75,
	0x73, 0x65, 0x72, 0x12, 0x63, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x15, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xe9, 0x01, 0x0a, 0x23, 0x4e, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x75, 0x6d, 0x53,
	0x75, 0x62, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0b, 0x53,
	0x75, 0x6d, 0x53, 0x75, 0x62, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x53, 0x75,
	0x6d, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x0f, 0x53, 0x75, 0x6d, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0e, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x22, 0x71, 0x0a, 0x22, 0x4e, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4d, 0x73, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72,
	0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65,
	0x61, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x44,
	0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x44,
	0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x22, 0xc7, 0x01, 0x0a, 0x22, 0x4e, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x74, 0x12, 0x63,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x15, 0x47, 0x65,
	0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x6c, 0x61, 0x73, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x10, 0x63,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x6c, 0x61, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x73, 0x75,
	0x6d, 0x22, 0xe9, 0x01, 0x0a, 0x23, 0x4e, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4c, 0x6f, 0x67,
	0x44, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x4c, 0x6f, 0x67, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x43,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x0c, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x24, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0d, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0d, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x42,
	0x6f, 0x6e, 0x75, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x0b, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4a, 0x0a,
	0x17, 0x55, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f,
	0x64, 0x65, 0x47, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61,
	0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0xcd, 0x01, 0x0a, 0x17, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x4d, 0x6f, 0x64, 0x65, 0x31, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x4d, 0x6f,
	0x64, 0x65, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x6f, 0x64, 0x65, 0x32, 0x18, 0x03, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x05, 0x4d, 0x6f, 0x64, 0x65, 0x32, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x6f, 0x64,
	0x65, 0x33, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x4d, 0x6f, 0x64, 0x65, 0x33, 0x12,
	0x14, 0x0a, 0x05, 0x4d, 0x6f, 0x64, 0x65, 0x34, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05,
	0x4d, 0x6f, 0x64, 0x65, 0x34, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x6f, 0x64, 0x65, 0x35, 0x18, 0x06,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x4d, 0x6f, 0x64, 0x65, 0x35, 0x12, 0x14, 0x0a, 0x05, 0x4d,
	0x6f, 0x64, 0x65, 0x36, 0x18, 0x07, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x4d, 0x6f, 0x64, 0x65,
	0x36, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x68, 0x76, 0x4d, 0x73, 0x67, 0x18, 0x08, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x06, 0x63, 0x68, 0x76, 0x4d, 0x73, 0x67, 0x22, 0x74, 0x0a, 0x19, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x0e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x33, 0x0a, 0x19, 0x55, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x57,
	0x69, 0x74, 0x68, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0xa6, 0x01, 0x0a, 0x1d, 0x55, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xaa, 0x01,
	0x0a, 0x1d, 0x55, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x57, 0x69,
	0x74, 0x68, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x50, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x09, 0x50, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x6b, 0x0a,
	0x1a, 0x55, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74,
	0x68, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x1a,
	0x55, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xed, 0x01, 0x0a, 0x21, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x4e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x6f, 0x66, 0x66,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x6f,
	0x66, 0x66, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x6f, 0x66,
	0x66, 0x65, 0x72, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0b, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0d, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x42, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x73, 0x18, 0x06, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x42,
	0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x22, 0x8e, 0x01, 0x0a, 0x21, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x73, 0x67,
	0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x92, 0x02, 0x0a, 0x21,
	0x55, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x6f, 0x6e,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x52, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x52,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x04, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x05, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x61, 0x67,
	0x65, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x50, 0x61,
	0x67, 0x65, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x77, 0x0a, 0x1e, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x1e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0xb5, 0x01, 0x0a, 0x25, 0x55, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x65,
	0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x61,
	0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x44, 0x61,
	0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x6f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x4e, 0x6f, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x83, 0x01, 0x0a, 0x16, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x4d, 0x73, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x82,
	0x02, 0x0a, 0x16, 0x55, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0c, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x6f, 0x6e, 0x75, 0x73,
	0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x50, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x09, 0x50, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x56, 0x0a, 0x13, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x13,
	0x55, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0xa0, 0x01, 0x0a, 0x1a, 0x55, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x61, 0x79, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x44, 0x61, 0x79, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x44, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0e, 0x44, 0x61,
	0x79, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x28, 0x0a, 0x0f,
	0x44, 0x61, 0x79, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0f, 0x44, 0x61, 0x79, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x83, 0x01, 0x0a, 0x16, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x42, 0x6f, 0x72, 0x72, 0x6f, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x73,
	0x67, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xce, 0x02, 0x0a,
	0x16, 0x55, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x6f, 0x72, 0x72, 0x6f, 0x77,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6f, 0x6e, 0x75, 0x73,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0b, 0x62, 0x6f,
	0x6e, 0x75, 0x73, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0b,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x50,
	0x72, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x10, 0x50, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x6d, 0x61, 0x69,
	0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0c, 0x52,
	0x65, 0x6d, 0x61, 0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x77,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x6c, 0x61, 0x73, 0x74, 0x77, 0x65, 0x65, 0x6b, 0x18,
	0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x10, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x6c,
	0x61, 0x73, 0x74, 0x77, 0x65, 0x65, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x50, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x56, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x42, 0x6f, 0x72, 0x72, 0x6f, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x6f, 0x72, 0x72, 0x6f, 0x77, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x13, 0x55, 0x73, 0x65, 0x72, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x42, 0x6f, 0x72, 0x72, 0x6f, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xb2, 0x01,
	0x0a, 0x1a, 0x55, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x6f, 0x72, 0x72, 0x6f,
	0x77, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x4c,
	0x6f, 0x67, 0x44, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x02, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x02, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x4c, 0x0a, 0x19, 0x55, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x57,
	0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x12,
	0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x22, 0x74, 0x0a, 0x19, 0x55, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x57, 0x69, 0x6e,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x74, 0x12, 0x57, 0x0a,
	0x12, 0x55, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x57, 0x69, 0x6e, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6e, 0x65, 0x74, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x57, 0x69,
	0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x12, 0x55, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x57, 0x69, 0x6e,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xdf, 0x01, 0x0a, 0x1d, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x57, 0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x53, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x57, 0x65, 0x65, 0x6b, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x57, 0x65, 0x65, 0x6b, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x57, 0x65, 0x65, 0x6b, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0f, 0x57,
	0x65, 0x65, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2a,
	0x0a, 0x10, 0x57, 0x65, 0x65, 0x6b, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x10, 0x57, 0x65, 0x65, 0x6b, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6f,
	0x6e, 0x75, 0x73, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x62, 0x6f, 0x6e, 0x75, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x44, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d,
	0x79, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x67, 0x12, 0x17, 0x0a,
	0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x93,
	0x02, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x6f, 0x73, 0x73, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x42, 0x6f, 0x73, 0x73, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a,
	0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x0a, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x4d, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08,
	0x4d, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x54, 0x6f, 0x64, 0x61,
	0x79, 0x4e, 0x65, 0x77, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x0e, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x4e, 0x65, 0x77, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x2c, 0x0a, 0x11, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x11, 0x54, 0x6f, 0x64,
	0x61, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x51, 0x72, 0x55, 0x52, 0x4c, 0x18, 0x06, 0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x51,
	0x72, 0x55, 0x52, 0x4c, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x22, 0x2b, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x54, 0x69, 0x70, 0x73, 0x4d, 0x73, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61,
	0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49,
	0x44, 0x22, 0xfa, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54,
	0x69, 0x70, 0x73, 0x52, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x65, 0x6c, 0x66, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x53, 0x65, 0x6c, 0x66, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x41, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x41, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x18, 0x03, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x06, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x43, 0x18, 0x04, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x43, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x18, 0x05, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x06, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x18, 0x06, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x12, 0x52, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x69, 0x70, 0x73, 0x52, 0x65, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x69, 0x70,
	0x73, 0x52, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x14, 0x47, 0x65, 0x74, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x54, 0x69, 0x70, 0x73, 0x52, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0x94,
	0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x69, 0x70, 0x73,
	0x52, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x6c, 0x76, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x02, 0x6c, 0x76, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d,
	0x69, 0x6e, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09,
	0x6d, 0x69, 0x6e, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x78,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61,
	0x78, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x6f, 0x6e, 0x75, 0x73,
	0x52, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09, 0x42, 0x6f, 0x6e, 0x75,
	0x73, 0x52, 0x61, 0x74, 0x65, 0x22, 0x9f, 0x01, 0x0a, 0x16, 0x55, 0x6e, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x73, 0x67,
	0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x68, 0x76, 0x49, 0x50, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x68, 0x76,
	0x49, 0x50, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x6e, 0x67,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x4c, 0x6e,
	0x67, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x30, 0x0a, 0x16, 0x55, 0x6e, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x68, 0x76, 0x4d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x06, 0x43, 0x68, 0x76, 0x4d, 0x73, 0x67, 0x22, 0x64, 0x0a, 0x19, 0x55, 0x6e, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x50, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x33, 0x0a, 0x19, 0x55, 0x6e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x50, 0x72, 0x65, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x43, 0x68, 0x76, 0x4d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x43, 0x68,
	0x76, 0x4d, 0x73, 0x67, 0x22, 0x44, 0x0a, 0x11, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x47, 0x65, 0x74,
	0x4d, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65,
	0x61, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61,
	0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x9b, 0x02, 0x0a, 0x11, 0x53,
	0x70, 0x6c, 0x69, 0x74, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x74,
	0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0b, 0x53, 0x70, 0x6c, 0x69, 0x74,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0c, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x0c, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x12, 0x26,
	0x0a, 0x0e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x61, 0x73, 0x74, 0x64, 0x61, 0x79,
	0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c,
	0x61, 0x73, 0x74, 0x64, 0x61, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x51, 0x72, 0x55, 0x52, 0x4c, 0x18,
	0x06, 0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x51, 0x72, 0x55, 0x52, 0x4c, 0x12, 0x18, 0x0a, 0x07,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x55, 0x70, 0x70, 0x65, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x55, 0x70, 0x70,
	0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x81, 0x01, 0x0a, 0x14, 0x53, 0x70, 0x6c,
	0x69, 0x74, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x4d, 0x73,
	0x67, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xa7, 0x01, 0x0a,
	0x14, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x74, 0x52, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x50, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0c, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4d, 0x0a, 0x11, 0x53, 0x70, 0x6c, 0x69, 0x74,
	0x47, 0x65, 0x74, 0x4d, 0x79, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x70,
	0x6c, 0x69, 0x74, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x11, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x22, 0x57, 0x0a, 0x15, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x47,
	0x65, 0x74, 0x4d, 0x79, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x07, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x0d, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x48, 0x0a, 0x15, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x54, 0x69, 0x70, 0x73, 0x4d, 0x73, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61,
	0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x8f, 0x01, 0x0a, 0x15, 0x53, 0x70,
	0x6c, 0x69, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x69, 0x70, 0x73,
	0x52, 0x65, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x65, 0x74, 0x75, 0x72, 0x65, 0x6e, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0d, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x65, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x50, 0x0a, 0x12, 0x53, 0x70, 0x6c,
	0x69, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x69, 0x70, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54,
	0x69, 0x70, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x12, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x69, 0x70, 0x73, 0x22, 0xd0, 0x01, 0x0a, 0x16,
	0x53, 0x70, 0x6c, 0x69, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x69,
	0x70, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x52, 0x65, 0x63, 0x72, 0x75, 0x69, 0x74, 0x42, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08,
	0x52, 0x65, 0x63, 0x72, 0x75, 0x69, 0x74, 0x42, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x63, 0x72,
	0x75, 0x69, 0x74, 0x43, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x63, 0x72,
	0x75, 0x69, 0x74, 0x43, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x63, 0x72, 0x75, 0x69, 0x74, 0x44,
	0x18, 0x04, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x63, 0x72, 0x75, 0x69, 0x74, 0x44,
	0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x42, 0x18, 0x05, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x07, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x42, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x43, 0x18, 0x06, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x43, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x44, 0x18,
	0x07, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x44, 0x22, 0x46,
	0x0a, 0x13, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x4d, 0x73, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x49, 0x0a, 0x13, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x47,
	0x65, 0x74, 0x4d, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x4d, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x08, 0x4d, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x79, 0x57,
	0x61, 0x69, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x4d, 0x79, 0x57, 0x61, 0x69,
	0x74, 0x22, 0x89, 0x01, 0x0a, 0x14, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72,
	0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65,
	0x61, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x43,
	0x68, 0x76, 0x49, 0x50, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x0c, 0x43, 0x68, 0x76, 0x49, 0x50, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x6c, 0x6e, 0x67, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x09, 0x6c, 0x6e, 0x67, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x2e, 0x0a,
	0x14, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x68, 0x76, 0x4d, 0x73, 0x67, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x43, 0x68, 0x76, 0x4d, 0x73, 0x67, 0x22, 0x67, 0x0a,
	0x1a, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x41,
	0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72,
	0x65, 0x61, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x22, 0x54, 0x0a, 0x1a, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x42,
	0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x68, 0x76, 0x4d, 0x73, 0x67, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x43, 0x68, 0x76, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a,
	0x69, 0x6e, 0x74, 0x52, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x4c, 0x0a, 0x19,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x42, 0x6f, 0x6e, 0x75, 0x73,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65,
	0x61, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61,
	0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0xad, 0x01, 0x0a, 0x19, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x4e, 0x6f, 0x77, 0x46,
	0x6c, 0x6f, 0x77, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x0d, 0x4e, 0x6f, 0x77, 0x46, 0x6c, 0x6f, 0x77, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28,
	0x0a, 0x0f, 0x46, 0x6c, 0x6f, 0x77, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0f, 0x46, 0x6c, 0x6f, 0x77, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x61, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x52, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x68, 0x76, 0x4d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x06, 0x43, 0x68, 0x76, 0x4d, 0x73, 0x67, 0x22, 0x65, 0x0a, 0x12, 0x41, 0x64,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x67,
	0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x22, 0x46, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x52, 0x65, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x68, 0x76, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x06, 0x43, 0x68, 0x76, 0x4d, 0x73, 0x67, 0x22, 0x58, 0x0a, 0x11, 0x45, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4d, 0x73, 0x67, 0x12, 0x2a,
	0x0a, 0x10, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x10, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72,
	0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65,
	0x61, 0x49, 0x44, 0x22, 0x48, 0x0a, 0x14, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x52,
	0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x52, 0x65,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x68, 0x76, 0x4d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x43, 0x68, 0x76, 0x4d, 0x73, 0x67, 0x22, 0x6d, 0x0a,
	0x14, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0d, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x22, 0x4b, 0x0a, 0x17,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x52, 0x65, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x68, 0x76, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x06, 0x43, 0x68, 0x76, 0x4d, 0x73, 0x67, 0x22, 0x80, 0x01, 0x0a, 0x14, 0x47, 0x72,
	0x61, 0x64, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x07, 0x52, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x43, 0x68, 0x76, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x43, 0x68,
	0x76, 0x4d, 0x73, 0x67, 0x12, 0x36, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x47, 0x72, 0x61, 0x64, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x08, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x84, 0x01, 0x0a,
	0x10, 0x47, 0x72, 0x61, 0x64, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x02, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x03, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x0e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x77, 0x61, 0x72,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0b, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x72,
	0x61, 0x6d, 0x65, 0x22, 0x42, 0x0a, 0x0f, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x47,
	0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x17,
	0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0x50, 0x0a, 0x12, 0x43, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x74, 0x12, 0x3a, 0x0a,
	0x0c, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x43, 0x61, 0x6d,
	0x70, 0x61, 0x69, 0x67, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x22, 0xfe, 0x01, 0x0a, 0x0c, 0x43, 0x61,
	0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x02, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x69,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x50, 0x69, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x65, 0x71, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x05, 0x53, 0x65, 0x71, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x54, 0x61, 0x67, 0x18,
	0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0b, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x54,
	0x61, 0x67, 0x12, 0x2a, 0x0a, 0x10, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x42, 0x65,
	0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x02, 0x28, 0x05, 0x52, 0x10, 0x43, 0x61,
	0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x18, 0x07, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x4c, 0x69,
	0x6e, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x49, 0x0a, 0x16, 0x46, 0x69,
	0x72, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x4d, 0x73, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0xd7, 0x01, 0x0a, 0x19, 0x46, 0x69, 0x72, 0x73, 0x74, 0x44,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x74,
	0x4d, 0x73, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x52, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x46, 0x0a,
	0x10, 0x46, 0x69, 0x72, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x46, 0x69, 0x72, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x10, 0x46, 0x69, 0x72, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x58, 0x0a, 0x16, 0x46, 0x69, 0x72, 0x73, 0x74, 0x44, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x46, 0x69, 0x72, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x16, 0x46, 0x69, 0x72, 0x73, 0x74, 0x44, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22,
	0xf4, 0x01, 0x0a, 0x10, 0x46, 0x69, 0x72, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x09, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x02,
	0x28, 0x03, 0x52, 0x0c, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x57, 0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x02, 0x28, 0x03, 0x52, 0x09, 0x57, 0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22,
	0x0a, 0x0c, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x02, 0x28, 0x03, 0x52, 0x0c, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x10, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xa2, 0x02, 0x0a, 0x16, 0x46, 0x69, 0x72, 0x73, 0x74,
	0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x07, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x4a, 0x6f, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x4a, 0x6f, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0d, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x57, 0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x02, 0x28, 0x03, 0x52, 0x09, 0x57, 0x69, 0x6e, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x06, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x04, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x02, 0x28, 0x03,
	0x52, 0x0d, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x81, 0x01, 0x0a, 0x16,
	0x46, 0x69, 0x72, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x52, 0x07, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49,
	0x44, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22,
	0x55, 0x0a, 0x19, 0x46, 0x69, 0x72, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x18, 0x0a, 0x07,
	0x52, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x52,
	0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x52, 0x65, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x29, 0x0a, 0x0f, 0x50, 0x65, 0x72, 0x47, 0x61, 0x6d,
	0x65, 0x4c, 0x6f, 0x67, 0x49, 0x44, 0x4d, 0x73, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x61, 0x6d,
	0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49,
	0x44, 0x22, 0x53, 0x0a, 0x12, 0x50, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x6f, 0x67, 0x49,
	0x44, 0x52, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x3d, 0x0a, 0x0b, 0x50, 0x65, 0x72, 0x47, 0x61,
	0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6e,
	0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x4c,
	0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x52, 0x0b, 0x50, 0x65, 0x72, 0x47, 0x61,
	0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xe3, 0x01, 0x0a, 0x11, 0x50, 0x65, 0x72, 0x47, 0x61,
	0x6d, 0x65, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x18, 0x0a, 0x07,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x6c, 0x61, 0x67, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x46, 0x6c, 0x61, 0x67, 0x49, 0x44, 0x12, 0x20,
	0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x03, 0x20,
	0x02, 0x28, 0x03, 0x52, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x6e, 0x65, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x65,
	0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x42,
	0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x42, 0x65, 0x74, 0x4f,
	0x64, 0x64, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0d, 0x42, 0x65, 0x74, 0x4f, 0x64, 0x64, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x50, 0x61, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x50, 0x61, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x83, 0x01, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x46, 0x69, 0x73, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4d, 0x73,
	0x67, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x72, 0x61, 0x64, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x07, 0x54, 0x72, 0x61, 0x64, 0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x50,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6b, 0x69, 0x6c, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x6a, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x46, 0x69, 0x73, 0x68, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x05, 0x70, 0x61, 0x67,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72,
	0x12, 0x2c, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x73, 0x68,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x80,
	0x02, 0x0a, 0x0a, 0x46, 0x69, 0x73, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1b, 0x0a,
	0x09, 0x66, 0x69, 0x73, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x08, 0x66, 0x69, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x62, 0x65,
	0x74, 0x5f, 0x6f, 0x64, 0x64, 0x73, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x03, 0x52, 0x0d, 0x62, 0x65, 0x74, 0x4f, 0x64, 0x64, 0x73, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x26, 0x0a, 0x0f, 0x77, 0x69, 0x6e, 0x5f, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0d, 0x77, 0x69, 0x6e, 0x4c,
	0x6f, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6b, 0x69, 0x6c,
	0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x6b, 0x69,
	0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x64, 0x64, 0x73, 0x18, 0x06,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x6f, 0x64, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65,
	0x6d, 0x6f, 0x18, 0x07, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x12, 0x21,
	0x0a, 0x0c, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x66, 0x69, 0x73, 0x68, 0x18, 0x08,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x46, 0x69, 0x73,
	0x68, 0x22, 0x4c, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x73, 0x4d, 0x73, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x49, 0x64, 0x22,
	0x37, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x48, 0x65, 0x61, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x73, 0x52, 0x65,
	0x73, 0x12, 0x25, 0x0a, 0x04, 0x68, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x48, 0x65,
	0x61, 0x64, 0x52, 0x04, 0x68, 0x65, 0x61, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x52, 0x0a,
	0x0d, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x32, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x6f, 0x62, 0x62,
	0x79, 0x41, 0x64, 0x64, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x76, 0x65, 0x6e,
	0x64, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65,
	0x4c, 0x6f, 0x62, 0x62, 0x79, 0x41, 0x64, 0x64, 0x72, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x74, 0x12,
	0x25, 0x0a, 0x04, 0x68, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x48, 0x65, 0x61, 0x64,
	0x52, 0x04, 0x68, 0x65, 0x61, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f,
	0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f,
}

var (
	file_HallMsg_proto_rawDescOnce sync.Once
	file_HallMsg_proto_rawDescData = file_HallMsg_proto_rawDesc
)

func file_HallMsg_proto_rawDescGZIP() []byte {
	file_HallMsg_proto_rawDescOnce.Do(func() {
		file_HallMsg_proto_rawDescData = protoimpl.X.CompressGZIP(file_HallMsg_proto_rawDescData)
	})
	return file_HallMsg_proto_rawDescData
}

var file_HallMsg_proto_msgTypes = make([]protoimpl.MessageInfo, 198)
var file_HallMsg_proto_goTypes = []interface{}{
	(*GuestLogin)(nil),                               // 0: netproto.GuestLogin
	(*UserLogin)(nil),                                // 1: netproto.UserLogin
	(*UserLoginRet)(nil),                             // 2: netproto.UserLoginRet
	(*FlowAmountInfo)(nil),                           // 3: netproto.FlowAmountInfo
	(*UserHallLogonData)(nil),                        // 4: netproto.UserHallLogonData
	(*PaymentInfo)(nil),                              // 5: netproto.PaymentInfo
	(*Banner)(nil),                                   // 6: netproto.Banner
	(*GameList2)(nil),                                // 7: netproto.GameList2
	(*UserLogout)(nil),                               // 8: netproto.UserLogout
	(*HallVerReq)(nil),                               // 9: netproto.HallVerReq
	(*HallVerInfo)(nil),                              // 10: netproto.HallVerInfo
	(*AllGameServerInfo)(nil),                        // 11: netproto.AllGameServerInfo
	(*GameServerInfo)(nil),                           // 12: netproto.GameServerInfo
	(*RequestGameServerAddrInfo)(nil),                // 13: netproto.RequestGameServerAddrInfo
	(*GameServerAddr)(nil),                           // 14: netproto.GameServerAddr
	(*ZhifubaoInfo)(nil),                             // 15: netproto.ZhifubaoInfo
	(*BankCardInfo)(nil),                             // 16: netproto.BankCardInfo
	(*ModifyPassword)(nil),                           // 17: netproto.ModifyPassword
	(*SendPhoneVCode)(nil),                           // 18: netproto.SendPhoneVCode
	(*SendPhoneVCodeRet)(nil),                        // 19: netproto.SendPhoneVCodeRet
	(*ModifyFace)(nil),                               // 20: netproto.ModifyFace
	(*MoneyDeposit)(nil),                             // 21: netproto.MoneyDeposit
	(*MoneyDepositRet)(nil),                          // 22: netproto.MoneyDepositRet
	(*BindGuestAccount)(nil),                         // 23: netproto.BindGuestAccount
	(*RequestUserHallInfo)(nil),                      // 24: netproto.RequestUserHallInfo
	(*ResUserHallInfo)(nil),                          // 25: netproto.ResUserHallInfo
	(*FindSetPwdByPhone)(nil),                        // 26: netproto.FindSetPwdByPhone
	(*ModifyBankPassword)(nil),                       // 27: netproto.ModifyBankPassword
	(*FindSetBankPwdByPhone)(nil),                    // 28: netproto.FindSetBankPwdByPhone
	(*MailDetail)(nil),                               // 29: netproto.MailDetail
	(*MailList)(nil),                                 // 30: netproto.MailList
	(*RequestMailDetail)(nil),                        // 31: netproto.RequestMailDetail
	(*ContactService)(nil),                           // 32: netproto.ContactService
	(*AgentDeatil)(nil),                              // 33: netproto.AgentDeatil
	(*AgentList)(nil),                                // 34: netproto.AgentList
	(*ReportAgent)(nil),                              // 35: netproto.ReportAgent
	(*RequestAgentList)(nil),                         // 36: netproto.RequestAgentList
	(*ApplyAgent)(nil),                               // 37: netproto.ApplyAgent
	(*ConvertMoney)(nil),                             // 38: netproto.ConvertMoney
	(*CreatePayOrder)(nil),                           // 39: netproto.CreatePayOrder
	(*CreatePayOrderRet)(nil),                        // 40: netproto.CreatePayOrderRet
	(*GetFAQ)(nil),                                   // 41: netproto.GetFAQ
	(*FAQDetail)(nil),                                // 42: netproto.FAQDetail
	(*GetConvertLog)(nil),                            // 43: netproto.GetConvertLog
	(*ConvertLogDetail)(nil),                         // 44: netproto.ConvertLogDetail
	(*ConvertLogList)(nil),                           // 45: netproto.ConvertLogList
	(*BankDetail)(nil),                               // 46: netproto.BankDetail
	(*BankList)(nil),                                 // 47: netproto.BankList
	(*LoginBonusData)(nil),                           // 48: netproto.LoginBonusData
	(*AgentData)(nil),                                // 49: netproto.AgentData
	(*AgentDetailData)(nil),                          // 50: netproto.AgentDetailData
	(*AgentDownSteam)(nil),                           // 51: netproto.AgentDownSteam
	(*JoinAgentList)(nil),                            // 52: netproto.JoinAgentList
	(*ApplyAgentList)(nil),                           // 53: netproto.ApplyAgentList
	(*CSNotiftyCount)(nil),                           // 54: netproto.CSNotiftyCount
	(*RequestApplyAgent)(nil),                        // 55: netproto.RequestApplyAgent
	(*ProxyData)(nil),                                // 56: netproto.ProxyData
	(*ProxyPOSTData)(nil),                            // 57: netproto.ProxyPOSTData
	(*GetGameCompetitionMsg)(nil),                    // 58: netproto.GetGameCompetitionMsg
	(*GameCompetitionMsg)(nil),                       // 59: netproto.GameCompetitionMsg
	(*LeaderboardDetail)(nil),                        // 60: netproto.LeaderboardDetail
	(*ScoreboardList)(nil),                           // 61: netproto.ScoreboardList
	(*GetGameCompetitionRuleMsg)(nil),                // 62: netproto.GetGameCompetitionRuleMsg
	(*GameCompetitionRuleMsg)(nil),                   // 63: netproto.GameCompetitionRuleMsg
	(*RewardDetail)(nil),                             // 64: netproto.RewardDetail
	(*OrderTicketMsg)(nil),                           // 65: netproto.OrderTicketMsg
	(*ClientUpdateUserNotifyIdx)(nil),                // 66: netproto.ClientUpdateUserNotifyIdx
	(*GetBuyTicketMsg)(nil),                          // 67: netproto.GetBuyTicketMsg
	(*BuyTicketMsg)(nil),                             // 68: netproto.BuyTicketMsg
	(*JackpotPoolRet)(nil),                           // 69: netproto.JackpotPoolRet
	(*GetUserQRCodeMsg)(nil),                         // 70: netproto.GetUserQRCodeMsg
	(*GetUserQRCodeRet)(nil),                         // 71: netproto.GetUserQRCodeRet
	(*GetUserAgentExecMsg)(nil),                      // 72: netproto.GetUserAgentExecMsg
	(*GetUserAgentExecRet)(nil),                      // 73: netproto.GetUserAgentExecRet
	(*GetUserAgentTaxLogMsg)(nil),                    // 74: netproto.GetUserAgentTaxLogMsg
	(*GetUserAgentTaxLogRetList)(nil),                // 75: netproto.GetUserAgentTaxLogRetList
	(*GetUserAgentTaxLogRet)(nil),                    // 76: netproto.GetUserAgentTaxLogRet
	(*GetWithdrawMsg)(nil),                           // 77: netproto.GetWithdrawMsg
	(*GetWithdrawRet)(nil),                           // 78: netproto.GetWithdrawRet
	(*GetWithdrawList)(nil),                          // 79: netproto.GetWithdrawList
	(*GetWithdrawOrderMsg)(nil),                      // 80: netproto.GetWithdrawOrderMsg
	(*GetWithdrawOrderRet)(nil),                      // 81: netproto.GetWithdrawOrderRet
	(*GetAgentTaxListRet)(nil),                       // 82: netproto.GetAgentTaxListRet
	(*AgentTaxList)(nil),                             // 83: netproto.AgentTaxList
	(*AgentUserLevelInfomMsg)(nil),                   // 84: netproto.AgentUserLevelInfomMsg
	(*AgentUserLevelInfomRet)(nil),                   // 85: netproto.AgentUserLevelInfomRet
	(*GetAgentTaxBonusLogMsg)(nil),                   // 86: netproto.GetAgentTaxBonusLogMsg
	(*GetAgentTaxBonusLogRet)(nil),                   // 87: netproto.GetAgentTaxBonusLogRet
	(*AgentTaxBonusLogList)(nil),                     // 88: netproto.AgentTaxBonusLogList
	(*GetUserAgentListMsg)(nil),                      // 89: netproto.GetUserAgentListMsg
	(*GetUserAgentListRet)(nil),                      // 90: netproto.GetUserAgentListRet
	(*GetShanFuMsg)(nil),                             // 91: netproto.GetShanFuMsg
	(*GetShanFuRet)(nil),                             // 92: netproto.GetShanFuRet
	(*GetShanFuChatMsg)(nil),                         // 93: netproto.GetShanFuChatMsg
	(*GetShanFuChatRet)(nil),                         // 94: netproto.GetShanFuChatRet
	(*NetProfitAgentGetAgentInfoMsg)(nil),            // 95: netproto.NetProfitAgentGetAgentInfoMsg
	(*NetProfitAgentGetAgentInfoRet)(nil),            // 96: netproto.NetProfitAgentGetAgentInfoRet
	(*NetProfitAgentGetSubUserListMsg)(nil),          // 97: netproto.NetProfitAgentGetSubUserListMsg
	(*NetProfitAgentGetSubUserListRet)(nil),          // 98: netproto.NetProfitAgentGetSubUserListRet
	(*NetProfitAgentGetSubUserList)(nil),             // 99: netproto.NetProfitAgentGetSubUserList
	(*NetProfitAgentGetAgentWithdrawAmountMsg)(nil),  // 100: netproto.NetProfitAgentGetAgentWithdrawAmountMsg
	(*NetProfitAgentGetAgentWithdrawAmountRet)(nil),  // 101: netproto.NetProfitAgentGetAgentWithdrawAmountRet
	(*NetProfitAgentGetAgentWithdrawAmountList)(nil), // 102: netproto.NetProfitAgentGetAgentWithdrawAmountList
	(*NetProfitAgentGetWithdrawAmountMsg)(nil),       // 103: netproto.NetProfitAgentGetWithdrawAmountMsg
	(*NetProfitAgentGetWithdrawAmountRet)(nil),       // 104: netproto.NetProfitAgentGetWithdrawAmountRet
	(*NetProfitAgentGetWithdrawAmountList)(nil),      // 105: netproto.NetProfitAgentGetWithdrawAmountList
	(*NetProfitAgentGetBonusAmountMsg)(nil),          // 106: netproto.NetProfitAgentGetBonusAmountMsg
	(*NetProfitAgentGetBonusAmountRet)(nil),          // 107: netproto.NetProfitAgentGetBonusAmountRet
	(*NetProfitAgentWithDrawOrderMsg)(nil),           // 108: netproto.NetProfitAgentWithDrawOrderMsg
	(*NetProfitAgentWithDrawOrderMsgRet)(nil),        // 109: netproto.NetProfitAgentWithDrawOrderMsgRet
	(*GetShowGameFlagByAreaMsg)(nil),                 // 110: netproto.GetShowGameFlagByAreaMsg
	(*NetProfitAgentApplyListMsg)(nil),               // 111: netproto.NetProfitAgentApplyListMsg
	(*NetProfitAgentApplyListRet)(nil),               // 112: netproto.NetProfitAgentApplyListRet
	(*NetProfitAgentApplyListList)(nil),              // 113: netproto.NetProfitAgentApplyListList
	(*NetProfitGetWithdrawDetailMsg)(nil),            // 114: netproto.NetProfitGetWithdrawDetailMsg
	(*NetProfitGetWithdrawDetailRet)(nil),            // 115: netproto.NetProfitGetWithdrawDetailRet
	(*NetProfitGetWithdrawDetailList)(nil),           // 116: netproto.NetProfitGetWithdrawDetailList
	(*NetProfitAgentGetAgentDetailMsg)(nil),          // 117: netproto.NetProfitAgentGetAgentDetailMsg
	(*NetProfitAgentGetAgentDetailRet)(nil),          // 118: netproto.NetProfitAgentGetAgentDetailRet
	(*NetProfitAgentGetAgentReportLogMsg)(nil),       // 119: netproto.NetProfitAgentGetAgentReportLogMsg
	(*NetProfitAgentGetAgentReportLogRet)(nil),       // 120: netproto.NetProfitAgentGetAgentReportLogRet
	(*NetProfitAgentGetAgentReportLogList)(nil),      // 121: netproto.NetProfitAgentGetAgentReportLogList
	(*NetProfitAgentGetWithdrawDetailMsg)(nil),       // 122: netproto.NetProfitAgentGetWithdrawDetailMsg
	(*NetProfitAgentGetWithdrawDetailRet)(nil),       // 123: netproto.NetProfitAgentGetWithdrawDetailRet
	(*NetProfitAgentGetWithdrawDetailList)(nil),      // 124: netproto.NetProfitAgentGetWithdrawDetailList
	(*UserAgentUserModeGetMsg)(nil),                  // 125: netproto.UserAgentUserModeGetMsg
	(*UserAgentUserModeGetRet)(nil),                  // 126: netproto.UserAgentUserModeGetRet
	(*UserAgentGetWithAmountMsg)(nil),                // 127: netproto.UserAgentGetWithAmountMsg
	(*UserAgentGetWithAmountRet)(nil),                // 128: netproto.UserAgentGetWithAmountRet
	(*UserAgentGetWithAmountListMsg)(nil),            // 129: netproto.UserAgentGetWithAmountListMsg
	(*UserAgentGetWithAmountListRet)(nil),            // 130: netproto.UserAgentGetWithAmountListRet
	(*UserAgentGetWithAmountListRetList)(nil),        // 131: netproto.UserAgentGetWithAmountListRetList
	(*UserAgentGetWithdrawAmountListMsg)(nil),        // 132: netproto.UserAgentGetWithdrawAmountListMsg
	(*UserAgentGetWithdrawAmountListRet)(nil),        // 133: netproto.UserAgentGetWithdrawAmountListRet
	(*UserAgentGetWithdrawAmountListRetList)(nil),    // 134: netproto.UserAgentGetWithdrawAmountListRetList
	(*UserAgentResultListMsg)(nil),                   // 135: netproto.UserAgentResultListMsg
	(*UserAgentResultListRet)(nil),                   // 136: netproto.UserAgentResultListRet
	(*UserAgentResultListRetList)(nil),               // 137: netproto.UserAgentResultListRetList
	(*UserAgentBorrowListMsg)(nil),                   // 138: netproto.UserAgentBorrowListMsg
	(*UserAgentBorrowListRet)(nil),                   // 139: netproto.UserAgentBorrowListRet
	(*UserAgentBorrowListRetList)(nil),               // 140: netproto.UserAgentBorrowListRetList
	(*UserAgentWinAmountListMsg)(nil),                // 141: netproto.UserAgentWinAmountListMsg
	(*UserAgentWinAmountListRet)(nil),                // 142: netproto.UserAgentWinAmountListRet
	(*UserAgentWinAmountListRetList)(nil),            // 143: netproto.UserAgentWinAmountListRetList
	(*GetMyPromotionMsg)(nil),                        // 144: netproto.GetMyPromotionMsg
	(*GetMyPromotionRet)(nil),                        // 145: netproto.GetMyPromotionRet
	(*GetRewardTipsMsg)(nil),                         // 146: netproto.GetRewardTipsMsg
	(*GetRewardTipsRet)(nil),                         // 147: netproto.GetRewardTipsRet
	(*GetRewardTipsRetList)(nil),                     // 148: netproto.GetRewardTipsRetList
	(*UnlimitConvertOrderMsg)(nil),                   // 149: netproto.UnlimitConvertOrderMsg
	(*UnlimitConvertOrderRet)(nil),                   // 150: netproto.UnlimitConvertOrderRet
	(*UnlimitPreConvertOrderMsg)(nil),                // 151: netproto.UnlimitPreConvertOrderMsg
	(*UnlimitPreConvertOrderRet)(nil),                // 152: netproto.UnlimitPreConvertOrderRet
	(*SplitGetMyInfoMsg)(nil),                        // 153: netproto.SplitGetMyInfoMsg
	(*SplitGetMyInfoRet)(nil),                        // 154: netproto.SplitGetMyInfoRet
	(*SplitGetMyConvertMsg)(nil),                     // 155: netproto.SplitGetMyConvertMsg
	(*SplitGetMyConvertRet)(nil),                     // 156: netproto.SplitGetMyConvertRet
	(*SplitGetMyConvertList)(nil),                    // 157: netproto.SplitGetMyConvertList
	(*SplitGetRewardTipsMsg)(nil),                    // 158: netproto.SplitGetRewardTipsMsg
	(*SplitGetRewardTipsRet)(nil),                    // 159: netproto.SplitGetRewardTipsRet
	(*SplitGetRewardTipsList)(nil),                   // 160: netproto.SplitGetRewardTipsList
	(*SplitGetMyRewardMsg)(nil),                      // 161: netproto.SplitGetMyRewardMsg
	(*SplitGetMyRewardRet)(nil),                      // 162: netproto.SplitGetMyRewardRet
	(*SplitConvertOrderMsg)(nil),                     // 163: netproto.SplitConvertOrderMsg
	(*SplitConvertOrderRet)(nil),                     // 164: netproto.SplitConvertOrderRet
	(*SplitBindingInvitedCodeMsg)(nil),               // 165: netproto.SplitBindingInvitedCodeMsg
	(*SplitBindingInvitedCodeRet)(nil),               // 166: netproto.SplitBindingInvitedCodeRet
	(*EventChargeBonusAmountMsg)(nil),                // 167: netproto.EventChargeBonusAmountMsg
	(*EventChargeBonusAmountRet)(nil),                // 168: netproto.EventChargeBonusAmountRet
	(*AddUserRelationMsg)(nil),                       // 169: netproto.AddUserRelationMsg
	(*AddUserRelationRet)(nil),                       // 170: netproto.AddUserRelationRet
	(*ExchangeCouponMsg)(nil),                        // 171: netproto.ExchangeCouponMsg
	(*ExchangeCouponRetMsg)(nil),                     // 172: netproto.ExchangeCouponRetMsg
	(*ModifyAvatarFrameMsg)(nil),                     // 173: netproto.ModifyAvatarFrameMsg
	(*ModifyAvatarFrameRetMsg)(nil),                  // 174: netproto.ModifyAvatarFrameRetMsg
	(*GradeSettingDataList)(nil),                     // 175: netproto.GradeSettingDataList
	(*GradeSettingData)(nil),                         // 176: netproto.GradeSettingData
	(*CampaignGetList)(nil),                          // 177: netproto.CampaignGetList
	(*CampaignGetListRet)(nil),                       // 178: netproto.CampaignGetListRet
	(*CampaignData)(nil),                             // 179: netproto.CampaignData
	(*FirstDepositGetInfoMsg)(nil),                   // 180: netproto.FirstDepositGetInfoMsg
	(*FirstDepositGetInfoRetMsg)(nil),                // 181: netproto.FirstDepositGetInfoRetMsg
	(*FirstDepositInfo)(nil),                         // 182: netproto.FirstDepositInfo
	(*FirstDepositUserRecord)(nil),                   // 183: netproto.FirstDepositUserRecord
	(*FirstDepositCollectMsg)(nil),                   // 184: netproto.FirstDepositCollectMsg
	(*FirstDepositCollectRetMsg)(nil),                // 185: netproto.FirstDepositCollectRetMsg
	(*PerGameLogIDMsg)(nil),                          // 186: netproto.PerGameLogIDMsg
	(*PerGameLogIDRetMsg)(nil),                       // 187: netproto.PerGameLogIDRetMsg
	(*PerGameLogListMsg)(nil),                        // 188: netproto.PerGameLogListMsg
	(*GetFishDetailMsg)(nil),                         // 189: netproto.GetFishDetailMsg
	(*GetFishDetailMsgRes)(nil),                      // 190: netproto.GetFishDetailMsgRes
	(*FishDetail)(nil),                               // 191: netproto.FishDetail
	(*GetGameRecommendsMsg)(nil),                     // 192: netproto.GetGameRecommendsMsg
	(*ResHead)(nil),                                  // 193: netproto.ResHead
	(*GetGameRecommendsRes)(nil),                     // 194: netproto.GetGameRecommendsRes
	(*GameRecommend)(nil),                            // 195: netproto.GameRecommend
	(*GetGameLobbyAddrMsg)(nil),                      // 196: netproto.GetGameLobbyAddrMsg
	(*GetGameLobbyAddrMsgRet)(nil),                   // 197: netproto.GetGameLobbyAddrMsgRet
	(*Pager)(nil),                                    // 198: netproto.Pager
}
var file_HallMsg_proto_depIdxs = []int32{
	4,   // 0: netproto.UserLoginRet.UserData:type_name -> netproto.UserHallLogonData
	3,   // 1: netproto.UserLoginRet.FlowInfo:type_name -> netproto.FlowAmountInfo
	7,   // 2: netproto.UserHallLogonData.GameList2:type_name -> netproto.GameList2
	6,   // 3: netproto.UserHallLogonData.Banner:type_name -> netproto.Banner
	5,   // 4: netproto.UserHallLogonData.PaymentInfoList:type_name -> netproto.PaymentInfo
	12,  // 5: netproto.AllGameServerInfo.ServerList:type_name -> netproto.GameServerInfo
	29,  // 6: netproto.MailList.MailList:type_name -> netproto.MailDetail
	33,  // 7: netproto.AgentList.AgentList:type_name -> netproto.AgentDeatil
	44,  // 8: netproto.ConvertLogList.ConvertLogList:type_name -> netproto.ConvertLogDetail
	46,  // 9: netproto.BankList.BankList:type_name -> netproto.BankDetail
	50,  // 10: netproto.AgentData.AgentDetailData:type_name -> netproto.AgentDetailData
	51,  // 11: netproto.AgentData.DownSteamList:type_name -> netproto.AgentDownSteam
	60,  // 12: netproto.GameCompetitionMsg.Leaderboard:type_name -> netproto.LeaderboardDetail
	61,  // 13: netproto.LeaderboardDetail.LeaderboardList:type_name -> netproto.ScoreboardList
	65,  // 14: netproto.GameCompetitionRuleMsg.OrderTicket:type_name -> netproto.OrderTicketMsg
	64,  // 15: netproto.GameCompetitionRuleMsg.RewardInfo:type_name -> netproto.RewardDetail
	76,  // 16: netproto.GetUserAgentTaxLogRetList.UserAgentTaxLog:type_name -> netproto.GetUserAgentTaxLogRet
	79,  // 17: netproto.GetWithdrawRet.WithdrawList:type_name -> netproto.GetWithdrawList
	83,  // 18: netproto.GetAgentTaxListRet.TaxList:type_name -> netproto.AgentTaxList
	88,  // 19: netproto.GetAgentTaxBonusLogRet.TaxBonusLogList:type_name -> netproto.AgentTaxBonusLogList
	99,  // 20: netproto.NetProfitAgentGetSubUserListRet.GetSubUserList:type_name -> netproto.NetProfitAgentGetSubUserList
	102, // 21: netproto.NetProfitAgentGetAgentWithdrawAmountRet.GetAgentWithdrawAmountList:type_name -> netproto.NetProfitAgentGetAgentWithdrawAmountList
	105, // 22: netproto.NetProfitAgentGetWithdrawAmountRet.GetWithdrawAmountRet:type_name -> netproto.NetProfitAgentGetWithdrawAmountList
	113, // 23: netproto.NetProfitAgentApplyListRet.ApplyListList:type_name -> netproto.NetProfitAgentApplyListList
	116, // 24: netproto.NetProfitGetWithdrawDetailRet.LogList:type_name -> netproto.NetProfitGetWithdrawDetailList
	116, // 25: netproto.NetProfitGetWithdrawDetailList.LogList:type_name -> netproto.NetProfitGetWithdrawDetailList
	121, // 26: netproto.NetProfitAgentGetAgentReportLogRet.GetWithdrawDetailList:type_name -> netproto.NetProfitAgentGetAgentReportLogList
	124, // 27: netproto.NetProfitAgentGetWithdrawDetailRet.GetWithdrawDetailList:type_name -> netproto.NetProfitAgentGetWithdrawDetailList
	131, // 28: netproto.UserAgentGetWithAmountListRet.UserAgentGetWithAmountList:type_name -> netproto.UserAgentGetWithAmountListRetList
	134, // 29: netproto.UserAgentGetWithdrawAmountListRet.UserAgentGetWithdrawAmountList:type_name -> netproto.UserAgentGetWithdrawAmountListRetList
	137, // 30: netproto.UserAgentResultListRet.UserAgentResultList:type_name -> netproto.UserAgentResultListRetList
	140, // 31: netproto.UserAgentBorrowListRet.UserAgentBorrowList:type_name -> netproto.UserAgentBorrowListRetList
	143, // 32: netproto.UserAgentWinAmountListRet.UserAgentWinAmount:type_name -> netproto.UserAgentWinAmountListRetList
	148, // 33: netproto.GetRewardTipsRet.GetRewardTipsRetData:type_name -> netproto.GetRewardTipsRetList
	157, // 34: netproto.SplitGetMyConvertRet.SplitGetMyConvert:type_name -> netproto.SplitGetMyConvertList
	160, // 35: netproto.SplitGetRewardTipsRet.SplitGetRewardTips:type_name -> netproto.SplitGetRewardTipsList
	176, // 36: netproto.GradeSettingDataList.DataList:type_name -> netproto.GradeSettingData
	179, // 37: netproto.CampaignGetListRet.CampaignData:type_name -> netproto.CampaignData
	182, // 38: netproto.FirstDepositGetInfoRetMsg.FirstDepositInfo:type_name -> netproto.FirstDepositInfo
	183, // 39: netproto.FirstDepositGetInfoRetMsg.FirstDepositUserRecord:type_name -> netproto.FirstDepositUserRecord
	188, // 40: netproto.PerGameLogIDRetMsg.PerGameList:type_name -> netproto.PerGameLogListMsg
	198, // 41: netproto.GetFishDetailMsgRes.pager:type_name -> netproto.Pager
	191, // 42: netproto.GetFishDetailMsgRes.detail:type_name -> netproto.FishDetail
	193, // 43: netproto.GetGameRecommendsRes.head:type_name -> netproto.ResHead
	195, // 44: netproto.GetGameRecommendsRes.data:type_name -> netproto.GameRecommend
	193, // 45: netproto.GetGameLobbyAddrMsgRet.head:type_name -> netproto.ResHead
	46,  // [46:46] is the sub-list for method output_type
	46,  // [46:46] is the sub-list for method input_type
	46,  // [46:46] is the sub-list for extension type_name
	46,  // [46:46] is the sub-list for extension extendee
	0,   // [0:46] is the sub-list for field type_name
}

func init() { file_HallMsg_proto_init() }
func file_HallMsg_proto_init() {
	if File_HallMsg_proto != nil {
		return
	}
	file_CommonMsg_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_HallMsg_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuestLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLoginRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlowAmountInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserHallLogonData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Banner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameList2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLogout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HallVerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HallVerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllGameServerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameServerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestGameServerAddrInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameServerAddr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZhifubaoInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BankCardInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyPassword); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendPhoneVCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendPhoneVCodeRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyFace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoneyDeposit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoneyDepositRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindGuestAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestUserHallInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResUserHallInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindSetPwdByPhone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyBankPassword); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindSetBankPwdByPhone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MailDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MailList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestMailDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContactService); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentDeatil); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportAgent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestAgentList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyAgent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConvertMoney); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePayOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePayOrderRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFAQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FAQDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConvertLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConvertLogDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConvertLogList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BankDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BankList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginBonusData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentDetailData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentDownSteam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinAgentList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyAgentList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSNotiftyCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestApplyAgent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProxyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProxyPOSTData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGameCompetitionMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameCompetitionMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaderboardDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScoreboardList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGameCompetitionRuleMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameCompetitionRuleMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RewardDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderTicketMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientUpdateUserNotifyIdx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBuyTicketMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyTicketMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JackpotPoolRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserQRCodeMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserQRCodeRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserAgentExecMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserAgentExecRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserAgentTaxLogMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserAgentTaxLogRetList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserAgentTaxLogRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWithdrawMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWithdrawRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWithdrawList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWithdrawOrderMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWithdrawOrderRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAgentTaxListRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentTaxList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentUserLevelInfomMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentUserLevelInfomRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAgentTaxBonusLogMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAgentTaxBonusLogRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentTaxBonusLogList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserAgentListMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserAgentListRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShanFuMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShanFuRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShanFuChatMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShanFuChatRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetProfitAgentGetAgentInfoMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetProfitAgentGetAgentInfoRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetProfitAgentGetSubUserListMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetProfitAgentGetSubUserListRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetProfitAgentGetSubUserList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetProfitAgentGetAgentWithdrawAmountMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetProfitAgentGetAgentWithdrawAmountRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetProfitAgentGetAgentWithdrawAmountList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetProfitAgentGetWithdrawAmountMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetProfitAgentGetWithdrawAmountRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetProfitAgentGetWithdrawAmountList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetProfitAgentGetBonusAmountMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetProfitAgentGetBonusAmountRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetProfitAgentWithDrawOrderMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetProfitAgentWithDrawOrderMsgRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShowGameFlagByAreaMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetProfitAgentApplyListMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetProfitAgentApplyListRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetProfitAgentApplyListList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetProfitGetWithdrawDetailMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetProfitGetWithdrawDetailRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetProfitGetWithdrawDetailList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetProfitAgentGetAgentDetailMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetProfitAgentGetAgentDetailRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetProfitAgentGetAgentReportLogMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetProfitAgentGetAgentReportLogRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetProfitAgentGetAgentReportLogList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetProfitAgentGetWithdrawDetailMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetProfitAgentGetWithdrawDetailRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetProfitAgentGetWithdrawDetailList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAgentUserModeGetMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAgentUserModeGetRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAgentGetWithAmountMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAgentGetWithAmountRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAgentGetWithAmountListMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAgentGetWithAmountListRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAgentGetWithAmountListRetList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAgentGetWithdrawAmountListMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAgentGetWithdrawAmountListRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAgentGetWithdrawAmountListRetList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAgentResultListMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAgentResultListRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAgentResultListRetList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAgentBorrowListMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAgentBorrowListRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAgentBorrowListRetList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAgentWinAmountListMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAgentWinAmountListRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAgentWinAmountListRetList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyPromotionMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyPromotionRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRewardTipsMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[147].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRewardTipsRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[148].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRewardTipsRetList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[149].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlimitConvertOrderMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[150].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlimitConvertOrderRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[151].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlimitPreConvertOrderMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[152].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlimitPreConvertOrderRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[153].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SplitGetMyInfoMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[154].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SplitGetMyInfoRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[155].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SplitGetMyConvertMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[156].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SplitGetMyConvertRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[157].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SplitGetMyConvertList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[158].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SplitGetRewardTipsMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[159].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SplitGetRewardTipsRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[160].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SplitGetRewardTipsList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[161].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SplitGetMyRewardMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[162].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SplitGetMyRewardRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[163].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SplitConvertOrderMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[164].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SplitConvertOrderRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[165].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SplitBindingInvitedCodeMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[166].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SplitBindingInvitedCodeRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[167].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventChargeBonusAmountMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[168].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventChargeBonusAmountRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[169].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserRelationMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[170].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserRelationRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[171].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeCouponMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[172].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeCouponRetMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[173].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyAvatarFrameMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[174].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyAvatarFrameRetMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[175].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GradeSettingDataList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[176].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GradeSettingData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[177].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CampaignGetList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[178].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CampaignGetListRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[179].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CampaignData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[180].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FirstDepositGetInfoMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[181].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FirstDepositGetInfoRetMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[182].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FirstDepositInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[183].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FirstDepositUserRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[184].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FirstDepositCollectMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[185].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FirstDepositCollectRetMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[186].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PerGameLogIDMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[187].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PerGameLogIDRetMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[188].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PerGameLogListMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[189].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFishDetailMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[190].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFishDetailMsgRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[191].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FishDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[192].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGameRecommendsMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[193].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResHead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[194].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGameRecommendsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[195].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameRecommend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[196].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGameLobbyAddrMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HallMsg_proto_msgTypes[197].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGameLobbyAddrMsgRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_HallMsg_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   198,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_HallMsg_proto_goTypes,
		DependencyIndexes: file_HallMsg_proto_depIdxs,
		MessageInfos:      file_HallMsg_proto_msgTypes,
	}.Build()
	File_HallMsg_proto = out.File
	file_HallMsg_proto_rawDesc = nil
	file_HallMsg_proto_goTypes = nil
	file_HallMsg_proto_depIdxs = nil
}
