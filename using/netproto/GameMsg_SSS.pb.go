// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: GameMsg_SSS.proto

package netproto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//游戏阶段定义
type SSSGameStep int32

const (
	SSSGameStep_SSSGameStepBegin   SSSGameStep = 1 //游戏开始阶段
	SSSGameStep_SSSGameStepDeal    SSSGameStep = 2 //发牌阶段
	SSSGameStep_SSSGameStepCombine SSSGameStep = 3 //组牌阶段
	SSSGameStep_SSSGameCompare     SSSGameStep = 4 //比牌结算阶段(前后敦比牌、打枪全垒打、特殊牌型、结算)
	SSSGameStep_SSSGameStepWait    SSSGameStep = 5 //游戏等待阶段
)

// Enum value maps for SSSGameStep.
var (
	SSSGameStep_name = map[int32]string{
		1: "SSSGameStepBegin",
		2: "SSSGameStepDeal",
		3: "SSSGameStepCombine",
		4: "SSSGameCompare",
		5: "SSSGameStepWait",
	}
	SSSGameStep_value = map[string]int32{
		"SSSGameStepBegin":   1,
		"SSSGameStepDeal":    2,
		"SSSGameStepCombine": 3,
		"SSSGameCompare":     4,
		"SSSGameStepWait":    5,
	}
)

func (x SSSGameStep) Enum() *SSSGameStep {
	p := new(SSSGameStep)
	*p = x
	return p
}

func (x SSSGameStep) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SSSGameStep) Descriptor() protoreflect.EnumDescriptor {
	return file_GameMsg_SSS_proto_enumTypes[0].Descriptor()
}

func (SSSGameStep) Type() protoreflect.EnumType {
	return &file_GameMsg_SSS_proto_enumTypes[0]
}

func (x SSSGameStep) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *SSSGameStep) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = SSSGameStep(num)
	return nil
}

// Deprecated: Use SSSGameStep.Descriptor instead.
func (SSSGameStep) EnumDescriptor() ([]byte, []int) {
	return file_GameMsg_SSS_proto_rawDescGZIP(), []int{0}
}

//普通牌型
type SSSDunCardsNomalType int32

const (
	SSSDunCardsNomalType_TongHuaShun SSSDunCardsNomalType = 1  //同花顺
	SSSDunCardsNomalType_ZhaDan      SSSDunCardsNomalType = 2  //炸弹
	SSSDunCardsNomalType_HuLu        SSSDunCardsNomalType = 3  //葫芦
	SSSDunCardsNomalType_TongHua     SSSDunCardsNomalType = 4  //同花
	SSSDunCardsNomalType_ShunZi      SSSDunCardsNomalType = 5  //顺子
	SSSDunCardsNomalType_SanTiao     SSSDunCardsNomalType = 6  //三条 中后敦用
	SSSDunCardsNomalType_ChongSan    SSSDunCardsNomalType = 7  //冲三 头敦用
	SSSDunCardsNomalType_LiangDui    SSSDunCardsNomalType = 8  //两对
	SSSDunCardsNomalType_YiDui       SSSDunCardsNomalType = 9  //一对
	SSSDunCardsNomalType_SanPai      SSSDunCardsNomalType = 10 //散牌
)

// Enum value maps for SSSDunCardsNomalType.
var (
	SSSDunCardsNomalType_name = map[int32]string{
		1:  "TongHuaShun",
		2:  "ZhaDan",
		3:  "HuLu",
		4:  "TongHua",
		5:  "ShunZi",
		6:  "SanTiao",
		7:  "ChongSan",
		8:  "LiangDui",
		9:  "YiDui",
		10: "SanPai",
	}
	SSSDunCardsNomalType_value = map[string]int32{
		"TongHuaShun": 1,
		"ZhaDan":      2,
		"HuLu":        3,
		"TongHua":     4,
		"ShunZi":      5,
		"SanTiao":     6,
		"ChongSan":    7,
		"LiangDui":    8,
		"YiDui":       9,
		"SanPai":      10,
	}
)

func (x SSSDunCardsNomalType) Enum() *SSSDunCardsNomalType {
	p := new(SSSDunCardsNomalType)
	*p = x
	return p
}

func (x SSSDunCardsNomalType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SSSDunCardsNomalType) Descriptor() protoreflect.EnumDescriptor {
	return file_GameMsg_SSS_proto_enumTypes[1].Descriptor()
}

func (SSSDunCardsNomalType) Type() protoreflect.EnumType {
	return &file_GameMsg_SSS_proto_enumTypes[1]
}

func (x SSSDunCardsNomalType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *SSSDunCardsNomalType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = SSSDunCardsNomalType(num)
	return nil
}

// Deprecated: Use SSSDunCardsNomalType.Descriptor instead.
func (SSSDunCardsNomalType) EnumDescriptor() ([]byte, []int) {
	return file_GameMsg_SSS_proto_rawDescGZIP(), []int{1}
}

//特殊牌型
type SSSDunCardsSpecialType int32

const (
	SSSDunCardsSpecialType_TongHuaShiSanShui SSSDunCardsSpecialType = 101 //至尊青龙
	SSSDunCardsSpecialType_ShiSanShui        SSSDunCardsSpecialType = 102 //十三水
	SSSDunCardsSpecialType_ShiErHuangZu      SSSDunCardsSpecialType = 103 //十二皇族
	SSSDunCardsSpecialType_SanTongHuaShun    SSSDunCardsSpecialType = 104 //三同花顺
	SSSDunCardsSpecialType_SanFenTianXia     SSSDunCardsSpecialType = 105 //三分天下
	SSSDunCardsSpecialType_QuanDa            SSSDunCardsSpecialType = 106 //全大
	SSSDunCardsSpecialType_QuanXiao          SSSDunCardsSpecialType = 107 //全小
	SSSDunCardsSpecialType_CouYiSe           SSSDunCardsSpecialType = 108 //凑一色
	//	ShuangGuaiChongSan	= 109;//双怪冲三
	//	SanChongJiaDan	  	= 110;//三冲加弹
	SSSDunCardsSpecialType_SiTaoSantiao SSSDunCardsSpecialType = 111 //四套三条
	SSSDunCardsSpecialType_WuDuiSanTiao SSSDunCardsSpecialType = 112 //五对三条
	SSSDunCardsSpecialType_LiuDuiBan    SSSDunCardsSpecialType = 113 //六对半
	SSSDunCardsSpecialType_SanShunZi    SSSDunCardsSpecialType = 114 //三顺子
	SSSDunCardsSpecialType_SanTongHua   SSSDunCardsSpecialType = 115 //三同花
)

// Enum value maps for SSSDunCardsSpecialType.
var (
	SSSDunCardsSpecialType_name = map[int32]string{
		101: "TongHuaShiSanShui",
		102: "ShiSanShui",
		103: "ShiErHuangZu",
		104: "SanTongHuaShun",
		105: "SanFenTianXia",
		106: "QuanDa",
		107: "QuanXiao",
		108: "CouYiSe",
		111: "SiTaoSantiao",
		112: "WuDuiSanTiao",
		113: "LiuDuiBan",
		114: "SanShunZi",
		115: "SanTongHua",
	}
	SSSDunCardsSpecialType_value = map[string]int32{
		"TongHuaShiSanShui": 101,
		"ShiSanShui":        102,
		"ShiErHuangZu":      103,
		"SanTongHuaShun":    104,
		"SanFenTianXia":     105,
		"QuanDa":            106,
		"QuanXiao":          107,
		"CouYiSe":           108,
		"SiTaoSantiao":      111,
		"WuDuiSanTiao":      112,
		"LiuDuiBan":         113,
		"SanShunZi":         114,
		"SanTongHua":        115,
	}
)

func (x SSSDunCardsSpecialType) Enum() *SSSDunCardsSpecialType {
	p := new(SSSDunCardsSpecialType)
	*p = x
	return p
}

func (x SSSDunCardsSpecialType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SSSDunCardsSpecialType) Descriptor() protoreflect.EnumDescriptor {
	return file_GameMsg_SSS_proto_enumTypes[2].Descriptor()
}

func (SSSDunCardsSpecialType) Type() protoreflect.EnumType {
	return &file_GameMsg_SSS_proto_enumTypes[2]
}

func (x SSSDunCardsSpecialType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *SSSDunCardsSpecialType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = SSSDunCardsSpecialType(num)
	return nil
}

// Deprecated: Use SSSDunCardsSpecialType.Descriptor instead.
func (SSSDunCardsSpecialType) EnumDescriptor() ([]byte, []int) {
	return file_GameMsg_SSS_proto_rawDescGZIP(), []int{2}
}

//墩类型定义
type SSSDunType int32

const (
	SSSDunType_DunTypeHead SSSDunType = 1 //头墩
	SSSDunType_DunTypeBody SSSDunType = 2 //中墩
	SSSDunType_DunTypeFoot SSSDunType = 3 //后墩
)

// Enum value maps for SSSDunType.
var (
	SSSDunType_name = map[int32]string{
		1: "DunTypeHead",
		2: "DunTypeBody",
		3: "DunTypeFoot",
	}
	SSSDunType_value = map[string]int32{
		"DunTypeHead": 1,
		"DunTypeBody": 2,
		"DunTypeFoot": 3,
	}
)

func (x SSSDunType) Enum() *SSSDunType {
	p := new(SSSDunType)
	*p = x
	return p
}

func (x SSSDunType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SSSDunType) Descriptor() protoreflect.EnumDescriptor {
	return file_GameMsg_SSS_proto_enumTypes[3].Descriptor()
}

func (SSSDunType) Type() protoreflect.EnumType {
	return &file_GameMsg_SSS_proto_enumTypes[3]
}

func (x SSSDunType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *SSSDunType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = SSSDunType(num)
	return nil
}

// Deprecated: Use SSSDunType.Descriptor instead.
func (SSSDunType) EnumDescriptor() ([]byte, []int) {
	return file_GameMsg_SSS_proto_rawDescGZIP(), []int{3}
}

//墩定义
type Dun struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sdt   *int32       `protobuf:"varint,1,opt,name=Sdt" json:"Sdt,omitempty"`    //墩类型 类型为 SSSDunType
	Ct    *int32       `protobuf:"varint,2,opt,name=Ct" json:"Ct,omitempty"`      //牌型   类型为 SSSDunCardsNomalType
	Cards []*PokerCard `protobuf:"bytes,3,rep,name=Cards" json:"Cards,omitempty"` //牌组
}

func (x *Dun) Reset() {
	*x = Dun{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SSS_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dun) ProtoMessage() {}

func (x *Dun) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SSS_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dun.ProtoReflect.Descriptor instead.
func (*Dun) Descriptor() ([]byte, []int) {
	return file_GameMsg_SSS_proto_rawDescGZIP(), []int{0}
}

func (x *Dun) GetSdt() int32 {
	if x != nil && x.Sdt != nil {
		return *x.Sdt
	}
	return 0
}

func (x *Dun) GetCt() int32 {
	if x != nil && x.Ct != nil {
		return *x.Ct
	}
	return 0
}

func (x *Dun) GetCards() []*PokerCard {
	if x != nil {
		return x.Cards
	}
	return nil
}

//手牌
type HandCards struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Head *Dun `protobuf:"bytes,1,req,name=Head" json:"Head,omitempty"` //前墩
	Body *Dun `protobuf:"bytes,2,req,name=Body" json:"Body,omitempty"` //中墩
	Foot *Dun `protobuf:"bytes,3,req,name=Foot" json:"Foot,omitempty"` //后墩
}

func (x *HandCards) Reset() {
	*x = HandCards{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SSS_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandCards) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandCards) ProtoMessage() {}

func (x *HandCards) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SSS_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandCards.ProtoReflect.Descriptor instead.
func (*HandCards) Descriptor() ([]byte, []int) {
	return file_GameMsg_SSS_proto_rawDescGZIP(), []int{1}
}

func (x *HandCards) GetHead() *Dun {
	if x != nil {
		return x.Head
	}
	return nil
}

func (x *HandCards) GetBody() *Dun {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *HandCards) GetFoot() *Dun {
	if x != nil {
		return x.Foot
	}
	return nil
}

//推送房间配置信息
type PushGameCfg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeOut *int32 `protobuf:"varint,1,req,name=TimeOut" json:"TimeOut,omitempty"` //游戏间隔超时时间
	DiFen   *int32 `protobuf:"varint,2,req,name=DiFen" json:"DiFen,omitempty"`     //底分
}

func (x *PushGameCfg) Reset() {
	*x = PushGameCfg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SSS_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushGameCfg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushGameCfg) ProtoMessage() {}

func (x *PushGameCfg) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SSS_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushGameCfg.ProtoReflect.Descriptor instead.
func (*PushGameCfg) Descriptor() ([]byte, []int) {
	return file_GameMsg_SSS_proto_rawDescGZIP(), []int{2}
}

func (x *PushGameCfg) GetTimeOut() int32 {
	if x != nil && x.TimeOut != nil {
		return *x.TimeOut
	}
	return 0
}

func (x *PushGameCfg) GetDiFen() int32 {
	if x != nil && x.DiFen != nil {
		return *x.DiFen
	}
	return 0
}

//比牌结算项
type SettlementCell struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Win  *int32 `protobuf:"varint,1,req,name=Win" json:"Win,omitempty"`   //赢的水数
	Lose *int32 `protobuf:"varint,2,req,name=Lose" json:"Lose,omitempty"` //输的水数
}

func (x *SettlementCell) Reset() {
	*x = SettlementCell{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SSS_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettlementCell) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettlementCell) ProtoMessage() {}

func (x *SettlementCell) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SSS_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettlementCell.ProtoReflect.Descriptor instead.
func (*SettlementCell) Descriptor() ([]byte, []int) {
	return file_GameMsg_SSS_proto_rawDescGZIP(), []int{3}
}

func (x *SettlementCell) GetWin() int32 {
	if x != nil && x.Win != nil {
		return *x.Win
	}
	return 0
}

func (x *SettlementCell) GetLose() int32 {
	if x != nil && x.Lose != nil {
		return *x.Lose
	}
	return 0
}

//单个角色恢复所需信息
type RoleRecoverInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatNo    *int32    `protobuf:"varint,1,req,name=SeatNo" json:"SeatNo,omitempty"`       //玩家座位号
	ZuPaiOver *bool     `protobuf:"varint,2,req,name=ZuPaiOver" json:"ZuPaiOver,omitempty"` //组牌是否完成
	Cards     *CardInfo `protobuf:"bytes,3,opt,name=Cards" json:"Cards,omitempty"`          //组好的牌信息，组牌完成后才有
}

func (x *RoleRecoverInfo) Reset() {
	*x = RoleRecoverInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SSS_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleRecoverInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleRecoverInfo) ProtoMessage() {}

func (x *RoleRecoverInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SSS_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleRecoverInfo.ProtoReflect.Descriptor instead.
func (*RoleRecoverInfo) Descriptor() ([]byte, []int) {
	return file_GameMsg_SSS_proto_rawDescGZIP(), []int{4}
}

func (x *RoleRecoverInfo) GetSeatNo() int32 {
	if x != nil && x.SeatNo != nil {
		return *x.SeatNo
	}
	return 0
}

func (x *RoleRecoverInfo) GetZuPaiOver() bool {
	if x != nil && x.ZuPaiOver != nil {
		return *x.ZuPaiOver
	}
	return false
}

func (x *RoleRecoverInfo) GetCards() *CardInfo {
	if x != nil {
		return x.Cards
	}
	return nil
}

//推送房间信息 断线重连
//断线重连 根据Step 字段进行判断，如果Step<SSSGameStepCombine CompareInfo的信息为空
//如果Step>=SSSGameStepCompareH则 RoleRecoverInfo中的手牌信息包含所有玩家的手牌信息
type PushGameInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rris     []*RoleRecoverInfo `protobuf:"bytes,1,rep,name=Rris" json:"Rris,omitempty"`          //断线重连恢复所需数据信息
	Sts      []*SItem           `protobuf:"bytes,2,rep,name=Sts" json:"Sts,omitempty"`            //结算信息，未结算返回空数组
	Step     *int32             `protobuf:"varint,3,req,name=Step" json:"Step,omitempty"`         //游戏进度
	TimeOut  *int32             `protobuf:"varint,4,req,name=TimeOut" json:"TimeOut,omitempty"`   //总超时时间
	LastTime *int32             `protobuf:"varint,5,req,name=LastTime" json:"LastTime,omitempty"` //剩余时间
	Cards    []*PokerCard       `protobuf:"bytes,6,rep,name=Cards" json:"Cards,omitempty"`        //牌组
	Compare  *CompareInfo       `protobuf:"bytes,7,opt,name=Compare" json:"Compare,omitempty"`    //比牌信息，用于比牌阶段
}

func (x *PushGameInfo) Reset() {
	*x = PushGameInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SSS_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushGameInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushGameInfo) ProtoMessage() {}

func (x *PushGameInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SSS_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushGameInfo.ProtoReflect.Descriptor instead.
func (*PushGameInfo) Descriptor() ([]byte, []int) {
	return file_GameMsg_SSS_proto_rawDescGZIP(), []int{5}
}

func (x *PushGameInfo) GetRris() []*RoleRecoverInfo {
	if x != nil {
		return x.Rris
	}
	return nil
}

func (x *PushGameInfo) GetSts() []*SItem {
	if x != nil {
		return x.Sts
	}
	return nil
}

func (x *PushGameInfo) GetStep() int32 {
	if x != nil && x.Step != nil {
		return *x.Step
	}
	return 0
}

func (x *PushGameInfo) GetTimeOut() int32 {
	if x != nil && x.TimeOut != nil {
		return *x.TimeOut
	}
	return 0
}

func (x *PushGameInfo) GetLastTime() int32 {
	if x != nil && x.LastTime != nil {
		return *x.LastTime
	}
	return 0
}

func (x *PushGameInfo) GetCards() []*PokerCard {
	if x != nil {
		return x.Cards
	}
	return nil
}

func (x *PushGameInfo) GetCompare() *CompareInfo {
	if x != nil {
		return x.Compare
	}
	return nil
}

//组牌完成请求
type CompleteCardComb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hcs       *HandCards `protobuf:"bytes,1,req,name=Hcs" json:"Hcs,omitempty"`              //组好的手牌
	IsSpecial *bool      `protobuf:"varint,2,req,name=IsSpecial" json:"IsSpecial,omitempty"` //是否是特殊牌型
	St        *int32     `protobuf:"varint,3,req,name=St" json:"St,omitempty"`               //特殊牌型类型 SSSDunCardsSpecialType
}

func (x *CompleteCardComb) Reset() {
	*x = CompleteCardComb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SSS_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteCardComb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteCardComb) ProtoMessage() {}

func (x *CompleteCardComb) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SSS_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteCardComb.ProtoReflect.Descriptor instead.
func (*CompleteCardComb) Descriptor() ([]byte, []int) {
	return file_GameMsg_SSS_proto_rawDescGZIP(), []int{6}
}

func (x *CompleteCardComb) GetHcs() *HandCards {
	if x != nil {
		return x.Hcs
	}
	return nil
}

func (x *CompleteCardComb) GetIsSpecial() bool {
	if x != nil && x.IsSpecial != nil {
		return *x.IsSpecial
	}
	return false
}

func (x *CompleteCardComb) GetSt() int32 {
	if x != nil && x.St != nil {
		return *x.St
	}
	return 0
}

//组牌完成消息响应
type CompleteCardCombRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code *int32  `protobuf:"varint,1,req,name=Code" json:"Code,omitempty"` //返回值 0成功 非零失败
	Msg  *string `protobuf:"bytes,2,req,name=Msg" json:"Msg,omitempty"`    //错误描述
}

func (x *CompleteCardCombRet) Reset() {
	*x = CompleteCardCombRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SSS_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteCardCombRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteCardCombRet) ProtoMessage() {}

func (x *CompleteCardCombRet) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SSS_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteCardCombRet.ProtoReflect.Descriptor instead.
func (*CompleteCardCombRet) Descriptor() ([]byte, []int) {
	return file_GameMsg_SSS_proto_rawDescGZIP(), []int{7}
}

func (x *CompleteCardCombRet) GetCode() int32 {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return 0
}

func (x *CompleteCardCombRet) GetMsg() string {
	if x != nil && x.Msg != nil {
		return *x.Msg
	}
	return ""
}

//牌组
type GroupCards struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardsRet []*DefaultCard `protobuf:"bytes,1,rep,name=CardsRet" json:"CardsRet,omitempty"` //组好的5副手牌
}

func (x *GroupCards) Reset() {
	*x = GroupCards{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SSS_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupCards) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupCards) ProtoMessage() {}

func (x *GroupCards) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SSS_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupCards.ProtoReflect.Descriptor instead.
func (*GroupCards) Descriptor() ([]byte, []int) {
	return file_GameMsg_SSS_proto_rawDescGZIP(), []int{8}
}

func (x *GroupCards) GetCardsRet() []*DefaultCard {
	if x != nil {
		return x.CardsRet
	}
	return nil
}

//发送默认一组牌
type DefaultCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hcs *HandCards `protobuf:"bytes,1,req,name=Hcs" json:"Hcs,omitempty"` //组好的手牌
	St  *int32     `protobuf:"varint,2,req,name=St" json:"St,omitempty"`  //特殊牌型类型，0表示不是特殊牌型
}

func (x *DefaultCard) Reset() {
	*x = DefaultCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SSS_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DefaultCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DefaultCard) ProtoMessage() {}

func (x *DefaultCard) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SSS_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DefaultCard.ProtoReflect.Descriptor instead.
func (*DefaultCard) Descriptor() ([]byte, []int) {
	return file_GameMsg_SSS_proto_rawDescGZIP(), []int{9}
}

func (x *DefaultCard) GetHcs() *HandCards {
	if x != nil {
		return x.Hcs
	}
	return nil
}

func (x *DefaultCard) GetSt() int32 {
	if x != nil && x.St != nil {
		return *x.St
	}
	return 0
}

//发送玩家比牌信息
type CompareInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ugs    []*UserGun   `protobuf:"bytes,1,rep,name=Ugs" json:"Ugs,omitempty"`       //打枪、全垒打信息
	Result *ScoreResult `protobuf:"bytes,2,req,name=Result" json:"Result,omitempty"` //水数信息
}

func (x *CompareInfo) Reset() {
	*x = CompareInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SSS_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompareInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompareInfo) ProtoMessage() {}

func (x *CompareInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SSS_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompareInfo.ProtoReflect.Descriptor instead.
func (*CompareInfo) Descriptor() ([]byte, []int) {
	return file_GameMsg_SSS_proto_rawDescGZIP(), []int{10}
}

func (x *CompareInfo) GetUgs() []*UserGun {
	if x != nil {
		return x.Ugs
	}
	return nil
}

func (x *CompareInfo) GetResult() *ScoreResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type CardInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cards  *HandCards `protobuf:"bytes,1,req,name=Cards" json:"Cards,omitempty"`
	SeatNo *int32     `protobuf:"varint,2,req,name=SeatNo" json:"SeatNo,omitempty"`
	Sct    *int32     `protobuf:"varint,4,req,name=Sct" json:"Sct,omitempty"` //特殊牌型类型 SSSDunCardsSpecialType 不是则为0
}

func (x *CardInfo) Reset() {
	*x = CardInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SSS_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardInfo) ProtoMessage() {}

func (x *CardInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SSS_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardInfo.ProtoReflect.Descriptor instead.
func (*CardInfo) Descriptor() ([]byte, []int) {
	return file_GameMsg_SSS_proto_rawDescGZIP(), []int{11}
}

func (x *CardInfo) GetCards() *HandCards {
	if x != nil {
		return x.Cards
	}
	return nil
}

func (x *CardInfo) GetSeatNo() int32 {
	if x != nil && x.SeatNo != nil {
		return *x.SeatNo
	}
	return 0
}

func (x *CardInfo) GetSct() int32 {
	if x != nil && x.Sct != nil {
		return *x.Sct
	}
	return 0
}

type UserGun struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attacter *int32  `protobuf:"varint,1,req,name=Attacter" json:"Attacter,omitempty"` //打枪者
	Recvers  []int32 `protobuf:"varint,2,rep,name=Recvers" json:"Recvers,omitempty"`   //被打枪的人
	IsAll    *bool   `protobuf:"varint,3,req,name=IsAll" json:"IsAll,omitempty"`       //是否是全垒打
}

func (x *UserGun) Reset() {
	*x = UserGun{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SSS_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserGun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGun) ProtoMessage() {}

func (x *UserGun) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SSS_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGun.ProtoReflect.Descriptor instead.
func (*UserGun) Descriptor() ([]byte, []int) {
	return file_GameMsg_SSS_proto_rawDescGZIP(), []int{12}
}

func (x *UserGun) GetAttacter() int32 {
	if x != nil && x.Attacter != nil {
		return *x.Attacter
	}
	return 0
}

func (x *UserGun) GetRecvers() []int32 {
	if x != nil {
		return x.Recvers
	}
	return nil
}

func (x *UserGun) GetIsAll() bool {
	if x != nil && x.IsAll != nil {
		return *x.IsAll
	}
	return false
}

type SpecialResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatNo       *int32 `protobuf:"varint,1,req,name=SeatNo" json:"SeatNo,omitempty"`             //玩家座位号
	SpecialWater *int32 `protobuf:"varint,2,req,name=SpecialWater" json:"SpecialWater,omitempty"` //特殊水数
}

func (x *SpecialResult) Reset() {
	*x = SpecialResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SSS_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecialResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecialResult) ProtoMessage() {}

func (x *SpecialResult) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SSS_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecialResult.ProtoReflect.Descriptor instead.
func (*SpecialResult) Descriptor() ([]byte, []int) {
	return file_GameMsg_SSS_proto_rawDescGZIP(), []int{13}
}

func (x *SpecialResult) GetSeatNo() int32 {
	if x != nil && x.SeatNo != nil {
		return *x.SeatNo
	}
	return 0
}

func (x *SpecialResult) GetSpecialWater() int32 {
	if x != nil && x.SpecialWater != nil {
		return *x.SpecialWater
	}
	return 0
}

type ScoreResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scores       []*DunScore      `protobuf:"bytes,1,rep,name=Scores" json:"Scores,omitempty"`             //每敦水数详细
	SpecialWater []*SpecialResult `protobuf:"bytes,2,rep,name=SpecialWater" json:"SpecialWater,omitempty"` //特殊水数
}

func (x *ScoreResult) Reset() {
	*x = ScoreResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SSS_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScoreResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScoreResult) ProtoMessage() {}

func (x *ScoreResult) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SSS_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScoreResult.ProtoReflect.Descriptor instead.
func (*ScoreResult) Descriptor() ([]byte, []int) {
	return file_GameMsg_SSS_proto_rawDescGZIP(), []int{14}
}

func (x *ScoreResult) GetScores() []*DunScore {
	if x != nil {
		return x.Scores
	}
	return nil
}

func (x *ScoreResult) GetSpecialWater() []*SpecialResult {
	if x != nil {
		return x.SpecialWater
	}
	return nil
}

type DunScore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sdt    *int32 `protobuf:"varint,1,req,name=Sdt" json:"Sdt,omitempty"`       //敦类型
	Score  *int32 `protobuf:"varint,2,req,name=Score" json:"Score,omitempty"`   //水数
	Extra  *int32 `protobuf:"varint,3,req,name=Extra" json:"Extra,omitempty"`   //普通牌的特殊牌水数
	Gun    *int32 `protobuf:"varint,4,req,name=Gun" json:"Gun,omitempty"`       //打枪水数
	AllGun *int32 `protobuf:"varint,5,req,name=AllGun" json:"AllGun,omitempty"` //全垒打水数
}

func (x *DunScore) Reset() {
	*x = DunScore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SSS_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DunScore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DunScore) ProtoMessage() {}

func (x *DunScore) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SSS_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DunScore.ProtoReflect.Descriptor instead.
func (*DunScore) Descriptor() ([]byte, []int) {
	return file_GameMsg_SSS_proto_rawDescGZIP(), []int{15}
}

func (x *DunScore) GetSdt() int32 {
	if x != nil && x.Sdt != nil {
		return *x.Sdt
	}
	return 0
}

func (x *DunScore) GetScore() int32 {
	if x != nil && x.Score != nil {
		return *x.Score
	}
	return 0
}

func (x *DunScore) GetExtra() int32 {
	if x != nil && x.Extra != nil {
		return *x.Extra
	}
	return 0
}

func (x *DunScore) GetGun() int32 {
	if x != nil && x.Gun != nil {
		return *x.Gun
	}
	return 0
}

func (x *DunScore) GetAllGun() int32 {
	if x != nil && x.AllGun != nil {
		return *x.AllGun
	}
	return 0
}

//结算项
type SItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatNo *int32 `protobuf:"varint,1,req,name=SeatNo" json:"SeatNo,omitempty"` //玩家座位号
	Coins  *int32 `protobuf:"varint,2,req,name=Coins" json:"Coins,omitempty"`   //输赢金币
	Amount *int32 `protobuf:"varint,3,req,name=Amount" json:"Amount,omitempty"` //总计水数
}

func (x *SItem) Reset() {
	*x = SItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SSS_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SItem) ProtoMessage() {}

func (x *SItem) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SSS_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SItem.ProtoReflect.Descriptor instead.
func (*SItem) Descriptor() ([]byte, []int) {
	return file_GameMsg_SSS_proto_rawDescGZIP(), []int{16}
}

func (x *SItem) GetSeatNo() int32 {
	if x != nil && x.SeatNo != nil {
		return *x.SeatNo
	}
	return 0
}

func (x *SItem) GetCoins() int32 {
	if x != nil && x.Coins != nil {
		return *x.Coins
	}
	return 0
}

func (x *SItem) GetAmount() int32 {
	if x != nil && x.Amount != nil {
		return *x.Amount
	}
	return 0
}

//广播结算消息 游戏中的总计与结算消息放在一起
type NotifySSSSettlement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sis []*SItem `protobuf:"bytes,1,rep,name=Sis" json:"Sis,omitempty"` //结算信息
}

func (x *NotifySSSSettlement) Reset() {
	*x = NotifySSSSettlement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SSS_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifySSSSettlement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifySSSSettlement) ProtoMessage() {}

func (x *NotifySSSSettlement) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SSS_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifySSSSettlement.ProtoReflect.Descriptor instead.
func (*NotifySSSSettlement) Descriptor() ([]byte, []int) {
	return file_GameMsg_SSS_proto_rawDescGZIP(), []int{17}
}

func (x *NotifySSSSettlement) GetSis() []*SItem {
	if x != nil {
		return x.Sis
	}
	return nil
}

//广播阶段超时信息
type NotifyOptTimeOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Step    *int32 `protobuf:"varint,1,req,name=Step" json:"Step,omitempty"`       //游戏进度  SSSGameStep
	TimeOut *int32 `protobuf:"varint,2,req,name=TimeOut" json:"TimeOut,omitempty"` //当前进度超时时间
}

func (x *NotifyOptTimeOut) Reset() {
	*x = NotifyOptTimeOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SSS_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyOptTimeOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyOptTimeOut) ProtoMessage() {}

func (x *NotifyOptTimeOut) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SSS_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyOptTimeOut.ProtoReflect.Descriptor instead.
func (*NotifyOptTimeOut) Descriptor() ([]byte, []int) {
	return file_GameMsg_SSS_proto_rawDescGZIP(), []int{18}
}

func (x *NotifyOptTimeOut) GetStep() int32 {
	if x != nil && x.Step != nil {
		return *x.Step
	}
	return 0
}

func (x *NotifyOptTimeOut) GetTimeOut() int32 {
	if x != nil && x.TimeOut != nil {
		return *x.TimeOut
	}
	return 0
}

//广播玩家组好的手牌数据
type NotifyHandCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cards *CardInfo `protobuf:"bytes,1,req,name=cards" json:"cards,omitempty"` //牌型信息
}

func (x *NotifyHandCard) Reset() {
	*x = NotifyHandCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SSS_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyHandCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyHandCard) ProtoMessage() {}

func (x *NotifyHandCard) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SSS_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyHandCard.ProtoReflect.Descriptor instead.
func (*NotifyHandCard) Descriptor() ([]byte, []int) {
	return file_GameMsg_SSS_proto_rawDescGZIP(), []int{19}
}

func (x *NotifyHandCard) GetCards() *CardInfo {
	if x != nil {
		return x.Cards
	}
	return nil
}

//牌局编号
type SSSGameNoInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameNo *string `protobuf:"bytes,1,req,name=GameNo" json:"GameNo,omitempty"`
}

func (x *SSSGameNoInfo) Reset() {
	*x = SSSGameNoInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_SSS_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SSSGameNoInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSSGameNoInfo) ProtoMessage() {}

func (x *SSSGameNoInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_SSS_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSSGameNoInfo.ProtoReflect.Descriptor instead.
func (*SSSGameNoInfo) Descriptor() ([]byte, []int) {
	return file_GameMsg_SSS_proto_rawDescGZIP(), []int{20}
}

func (x *SSSGameNoInfo) GetGameNo() string {
	if x != nil && x.GameNo != nil {
		return *x.GameNo
	}
	return ""
}

var File_GameMsg_SSS_proto protoreflect.FileDescriptor

var file_GameMsg_SSS_proto_rawDesc = []byte{
	0x0a, 0x11, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x5f, 0x53, 0x53, 0x53, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x47,
	0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x52, 0x0a, 0x03,
	0x44, 0x75, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x64, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x53, 0x64, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x43, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x43, 0x74, 0x12, 0x29, 0x0a, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x50, 0x6f, 0x6b, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x52, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73,
	0x22, 0x74, 0x0a, 0x09, 0x48, 0x61, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x21, 0x0a,
	0x04, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6e, 0x65,
	0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x75, 0x6e, 0x52, 0x04, 0x48, 0x65, 0x61, 0x64,
	0x12, 0x21, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x75, 0x6e, 0x52, 0x04, 0x42,
	0x6f, 0x64, 0x79, 0x12, 0x21, 0x0a, 0x04, 0x46, 0x6f, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x75, 0x6e,
	0x52, 0x04, 0x46, 0x6f, 0x6f, 0x74, 0x22, 0x3d, 0x0a, 0x0b, 0x50, 0x75, 0x73, 0x68, 0x47, 0x61,
	0x6d, 0x65, 0x43, 0x66, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x75, 0x74,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x75, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x44, 0x69, 0x46, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05,
	0x44, 0x69, 0x46, 0x65, 0x6e, 0x22, 0x36, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x43, 0x65, 0x6c, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x57, 0x69, 0x6e, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x57, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x4c, 0x6f, 0x73,
	0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x4c, 0x6f, 0x73, 0x65, 0x22, 0x71, 0x0a,
	0x0f, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x06, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x5a, 0x75, 0x50, 0x61,
	0x69, 0x4f, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x02, 0x28, 0x08, 0x52, 0x09, 0x5a, 0x75, 0x50,
	0x61, 0x69, 0x4f, 0x76, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73,
	0x22, 0x86, 0x02, 0x0a, 0x0c, 0x50, 0x75, 0x73, 0x68, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x2d, 0x0a, 0x04, 0x52, 0x72, 0x69, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x52, 0x72, 0x69, 0x73,
	0x12, 0x21, 0x0a, 0x03, 0x53, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x03,
	0x53, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x74, 0x65, 0x70, 0x18, 0x03, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x04, 0x53, 0x74, 0x65, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x4f,
	0x75, 0x74, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x75,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x29, 0x0a,
	0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e,
	0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6f, 0x6b, 0x65, 0x72, 0x43, 0x61, 0x72,
	0x64, 0x52, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x2f, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6e, 0x65, 0x74, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x07, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x22, 0x67, 0x0a, 0x10, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x62, 0x12, 0x25, 0x0a,
	0x03, 0x48, 0x63, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x65, 0x74,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x73, 0x52,
	0x03, 0x48, 0x63, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x02, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x53, 0x70, 0x65, 0x63, 0x69,
	0x61, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x53, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x02,
	0x53, 0x74, 0x22, 0x3b, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61,
	0x72, 0x64, 0x43, 0x6f, 0x6d, 0x62, 0x52, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x22,
	0x3f, 0x0a, 0x0a, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x31, 0x0a,
	0x08, 0x43, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x08, 0x43, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x74,
	0x22, 0x44, 0x0a, 0x0b, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x61, 0x72, 0x64, 0x12,
	0x25, 0x0a, 0x03, 0x48, 0x63, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e,
	0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64,
	0x73, 0x52, 0x03, 0x48, 0x63, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x53, 0x74, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x02, 0x53, 0x74, 0x22, 0x61, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x0a, 0x03, 0x55, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x47, 0x75, 0x6e, 0x52, 0x03, 0x55, 0x67, 0x73, 0x12, 0x2d, 0x0a, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6e, 0x65, 0x74,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x5f, 0x0a, 0x08, 0x43, 0x61, 0x72,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x29, 0x0a, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x48, 0x61, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x73, 0x52, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x06, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x63, 0x74, 0x18,
	0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x53, 0x63, 0x74, 0x22, 0x55, 0x0a, 0x07, 0x55, 0x73,
	0x65, 0x72, 0x47, 0x75, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x74, 0x74, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x41, 0x74, 0x74, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x63, 0x76, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x07, 0x52, 0x65, 0x63, 0x76, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x49,
	0x73, 0x41, 0x6c, 0x6c, 0x18, 0x03, 0x20, 0x02, 0x28, 0x08, 0x52, 0x05, 0x49, 0x73, 0x41, 0x6c,
	0x6c, 0x22, 0x4b, 0x0a, 0x0d, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x06, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x61, 0x6c, 0x57, 0x61, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x0c, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x57, 0x61, 0x74, 0x65, 0x72, 0x22, 0x76,
	0x0a, 0x0b, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2a, 0x0a,
	0x06, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x75, 0x6e, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x52, 0x06, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x0c, 0x53, 0x70, 0x65,
	0x63, 0x69, 0x61, 0x6c, 0x57, 0x61, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69,
	0x61, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0c, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61,
	0x6c, 0x57, 0x61, 0x74, 0x65, 0x72, 0x22, 0x72, 0x0a, 0x08, 0x44, 0x75, 0x6e, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x64, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x03, 0x53, 0x64, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x12, 0x10, 0x0a, 0x03, 0x47, 0x75, 0x6e, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x47,
	0x75, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6c, 0x6c, 0x47, 0x75, 0x6e, 0x18, 0x05, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x06, 0x41, 0x6c, 0x6c, 0x47, 0x75, 0x6e, 0x22, 0x4d, 0x0a, 0x05, 0x53, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x06, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x43,
	0x6f, 0x69, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x43, 0x6f, 0x69, 0x6e,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x38, 0x0a, 0x13, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x53, 0x53, 0x53, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x21, 0x0a, 0x03, 0x53, 0x69, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x03,
	0x53, 0x69, 0x73, 0x22, 0x40, 0x0a, 0x10, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4f, 0x70, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x4f, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x74, 0x65, 0x70, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x53, 0x74, 0x65, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x54,
	0x69, 0x6d, 0x65, 0x4f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x54, 0x69,
	0x6d, 0x65, 0x4f, 0x75, 0x74, 0x22, 0x3a, 0x0a, 0x0e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48,
	0x61, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x12, 0x28, 0x0a, 0x05, 0x63, 0x61, 0x72, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x63, 0x61, 0x72, 0x64,
	0x73, 0x22, 0x27, 0x0a, 0x0d, 0x53, 0x53, 0x53, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x2a, 0x79, 0x0a, 0x0b, 0x53, 0x53,
	0x53, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x65, 0x70, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x53, 0x53,
	0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x65, 0x70, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x10, 0x01, 0x12,
	0x13, 0x0a, 0x0f, 0x53, 0x53, 0x53, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x65, 0x70, 0x44, 0x65,
	0x61, 0x6c, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x53, 0x53, 0x47, 0x61, 0x6d, 0x65, 0x53,
	0x74, 0x65, 0x70, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e,
	0x53, 0x53, 0x53, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x10, 0x04,
	0x12, 0x13, 0x0a, 0x0f, 0x53, 0x53, 0x53, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x65, 0x70, 0x57,
	0x61, 0x69, 0x74, 0x10, 0x05, 0x2a, 0x96, 0x01, 0x0a, 0x14, 0x53, 0x53, 0x53, 0x44, 0x75, 0x6e,
	0x43, 0x61, 0x72, 0x64, 0x73, 0x4e, 0x6f, 0x6d, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f,
	0x0a, 0x0b, 0x54, 0x6f, 0x6e, 0x67, 0x48, 0x75, 0x61, 0x53, 0x68, 0x75, 0x6e, 0x10, 0x01, 0x12,
	0x0a, 0x0a, 0x06, 0x5a, 0x68, 0x61, 0x44, 0x61, 0x6e, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x48,
	0x75, 0x4c, 0x75, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x6f, 0x6e, 0x67, 0x48, 0x75, 0x61,
	0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x68, 0x75, 0x6e, 0x5a, 0x69, 0x10, 0x05, 0x12, 0x0b,
	0x0a, 0x07, 0x53, 0x61, 0x6e, 0x54, 0x69, 0x61, 0x6f, 0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x43,
	0x68, 0x6f, 0x6e, 0x67, 0x53, 0x61, 0x6e, 0x10, 0x07, 0x12, 0x0c, 0x0a, 0x08, 0x4c, 0x69, 0x61,
	0x6e, 0x67, 0x44, 0x75, 0x69, 0x10, 0x08, 0x12, 0x09, 0x0a, 0x05, 0x59, 0x69, 0x44, 0x75, 0x69,
	0x10, 0x09, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x61, 0x6e, 0x50, 0x61, 0x69, 0x10, 0x0a, 0x2a, 0xf1,
	0x01, 0x0a, 0x16, 0x53, 0x53, 0x53, 0x44, 0x75, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x73, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x6f, 0x6e,
	0x67, 0x48, 0x75, 0x61, 0x53, 0x68, 0x69, 0x53, 0x61, 0x6e, 0x53, 0x68, 0x75, 0x69, 0x10, 0x65,
	0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x68, 0x69, 0x53, 0x61, 0x6e, 0x53, 0x68, 0x75, 0x69, 0x10, 0x66,
	0x12, 0x10, 0x0a, 0x0c, 0x53, 0x68, 0x69, 0x45, 0x72, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x5a, 0x75,
	0x10, 0x67, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x61, 0x6e, 0x54, 0x6f, 0x6e, 0x67, 0x48, 0x75, 0x61,
	0x53, 0x68, 0x75, 0x6e, 0x10, 0x68, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x61, 0x6e, 0x46, 0x65, 0x6e,
	0x54, 0x69, 0x61, 0x6e, 0x58, 0x69, 0x61, 0x10, 0x69, 0x12, 0x0a, 0x0a, 0x06, 0x51, 0x75, 0x61,
	0x6e, 0x44, 0x61, 0x10, 0x6a, 0x12, 0x0c, 0x0a, 0x08, 0x51, 0x75, 0x61, 0x6e, 0x58, 0x69, 0x61,
	0x6f, 0x10, 0x6b, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x6f, 0x75, 0x59, 0x69, 0x53, 0x65, 0x10, 0x6c,
	0x12, 0x10, 0x0a, 0x0c, 0x53, 0x69, 0x54, 0x61, 0x6f, 0x53, 0x61, 0x6e, 0x74, 0x69, 0x61, 0x6f,
	0x10, 0x6f, 0x12, 0x10, 0x0a, 0x0c, 0x57, 0x75, 0x44, 0x75, 0x69, 0x53, 0x61, 0x6e, 0x54, 0x69,
	0x61, 0x6f, 0x10, 0x70, 0x12, 0x0d, 0x0a, 0x09, 0x4c, 0x69, 0x75, 0x44, 0x75, 0x69, 0x42, 0x61,
	0x6e, 0x10, 0x71, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x61, 0x6e, 0x53, 0x68, 0x75, 0x6e, 0x5a, 0x69,
	0x10, 0x72, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x61, 0x6e, 0x54, 0x6f, 0x6e, 0x67, 0x48, 0x75, 0x61,
	0x10, 0x73, 0x2a, 0x3f, 0x0a, 0x0a, 0x53, 0x53, 0x53, 0x44, 0x75, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x75, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x48, 0x65, 0x61, 0x64, 0x10,
	0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x75, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x6f, 0x64, 0x79,
	0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x75, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x46, 0x6f, 0x6f,
	0x74, 0x10, 0x03, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74,
	0x6f,
}

var (
	file_GameMsg_SSS_proto_rawDescOnce sync.Once
	file_GameMsg_SSS_proto_rawDescData = file_GameMsg_SSS_proto_rawDesc
)

func file_GameMsg_SSS_proto_rawDescGZIP() []byte {
	file_GameMsg_SSS_proto_rawDescOnce.Do(func() {
		file_GameMsg_SSS_proto_rawDescData = protoimpl.X.CompressGZIP(file_GameMsg_SSS_proto_rawDescData)
	})
	return file_GameMsg_SSS_proto_rawDescData
}

var file_GameMsg_SSS_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_GameMsg_SSS_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_GameMsg_SSS_proto_goTypes = []interface{}{
	(SSSGameStep)(0),            // 0: netproto.SSSGameStep
	(SSSDunCardsNomalType)(0),   // 1: netproto.SSSDunCardsNomalType
	(SSSDunCardsSpecialType)(0), // 2: netproto.SSSDunCardsSpecialType
	(SSSDunType)(0),             // 3: netproto.SSSDunType
	(*Dun)(nil),                 // 4: netproto.Dun
	(*HandCards)(nil),           // 5: netproto.HandCards
	(*PushGameCfg)(nil),         // 6: netproto.PushGameCfg
	(*SettlementCell)(nil),      // 7: netproto.SettlementCell
	(*RoleRecoverInfo)(nil),     // 8: netproto.RoleRecoverInfo
	(*PushGameInfo)(nil),        // 9: netproto.PushGameInfo
	(*CompleteCardComb)(nil),    // 10: netproto.CompleteCardComb
	(*CompleteCardCombRet)(nil), // 11: netproto.CompleteCardCombRet
	(*GroupCards)(nil),          // 12: netproto.GroupCards
	(*DefaultCard)(nil),         // 13: netproto.DefaultCard
	(*CompareInfo)(nil),         // 14: netproto.CompareInfo
	(*CardInfo)(nil),            // 15: netproto.CardInfo
	(*UserGun)(nil),             // 16: netproto.UserGun
	(*SpecialResult)(nil),       // 17: netproto.SpecialResult
	(*ScoreResult)(nil),         // 18: netproto.ScoreResult
	(*DunScore)(nil),            // 19: netproto.DunScore
	(*SItem)(nil),               // 20: netproto.SItem
	(*NotifySSSSettlement)(nil), // 21: netproto.NotifySSSSettlement
	(*NotifyOptTimeOut)(nil),    // 22: netproto.NotifyOptTimeOut
	(*NotifyHandCard)(nil),      // 23: netproto.NotifyHandCard
	(*SSSGameNoInfo)(nil),       // 24: netproto.SSSGameNoInfo
	(*PokerCard)(nil),           // 25: netproto.PokerCard
}
var file_GameMsg_SSS_proto_depIdxs = []int32{
	25, // 0: netproto.Dun.Cards:type_name -> netproto.PokerCard
	4,  // 1: netproto.HandCards.Head:type_name -> netproto.Dun
	4,  // 2: netproto.HandCards.Body:type_name -> netproto.Dun
	4,  // 3: netproto.HandCards.Foot:type_name -> netproto.Dun
	15, // 4: netproto.RoleRecoverInfo.Cards:type_name -> netproto.CardInfo
	8,  // 5: netproto.PushGameInfo.Rris:type_name -> netproto.RoleRecoverInfo
	20, // 6: netproto.PushGameInfo.Sts:type_name -> netproto.SItem
	25, // 7: netproto.PushGameInfo.Cards:type_name -> netproto.PokerCard
	14, // 8: netproto.PushGameInfo.Compare:type_name -> netproto.CompareInfo
	5,  // 9: netproto.CompleteCardComb.Hcs:type_name -> netproto.HandCards
	13, // 10: netproto.GroupCards.CardsRet:type_name -> netproto.DefaultCard
	5,  // 11: netproto.DefaultCard.Hcs:type_name -> netproto.HandCards
	16, // 12: netproto.CompareInfo.Ugs:type_name -> netproto.UserGun
	18, // 13: netproto.CompareInfo.Result:type_name -> netproto.ScoreResult
	5,  // 14: netproto.CardInfo.Cards:type_name -> netproto.HandCards
	19, // 15: netproto.ScoreResult.Scores:type_name -> netproto.DunScore
	17, // 16: netproto.ScoreResult.SpecialWater:type_name -> netproto.SpecialResult
	20, // 17: netproto.NotifySSSSettlement.Sis:type_name -> netproto.SItem
	15, // 18: netproto.NotifyHandCard.cards:type_name -> netproto.CardInfo
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_GameMsg_SSS_proto_init() }
func file_GameMsg_SSS_proto_init() {
	if File_GameMsg_SSS_proto != nil {
		return
	}
	file_GameMsg_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_GameMsg_SSS_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dun); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SSS_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandCards); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SSS_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushGameCfg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SSS_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SettlementCell); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SSS_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleRecoverInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SSS_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushGameInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SSS_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteCardComb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SSS_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteCardCombRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SSS_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupCards); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SSS_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DefaultCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SSS_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompareInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SSS_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SSS_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserGun); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SSS_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecialResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SSS_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScoreResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SSS_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DunScore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SSS_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SSS_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifySSSSettlement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SSS_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyOptTimeOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SSS_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyHandCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_SSS_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SSSGameNoInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_GameMsg_SSS_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_GameMsg_SSS_proto_goTypes,
		DependencyIndexes: file_GameMsg_SSS_proto_depIdxs,
		EnumInfos:         file_GameMsg_SSS_proto_enumTypes,
		MessageInfos:      file_GameMsg_SSS_proto_msgTypes,
	}.Build()
	File_GameMsg_SSS_proto = out.File
	file_GameMsg_SSS_proto_rawDesc = nil
	file_GameMsg_SSS_proto_goTypes = nil
	file_GameMsg_SSS_proto_depIdxs = nil
}
