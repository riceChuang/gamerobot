// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: Game_QZPN.proto

package netproto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type QZPN_GameMessageClassID int32

const (
	QZPN_GameMessageClassID_QZPNSettingID                QZPN_GameMessageClassID = 10001 //设置相关
	QZPN_GameMessageClassID_QZPNStateID                  QZPN_GameMessageClassID = 10002 //阶段ID S2C
	QZPN_GameMessageClassID_QZPNQiangZhuangID            QZPN_GameMessageClassID = 10003 //抢庄ID C2S
	QZPN_GameMessageClassID_QZPNOnUserZhuangBetID        QZPN_GameMessageClassID = 10004 //通知搶莊給其他用戶 S2C
	QZPN_GameMessageClassID_QZPNBroadCastZhuangID        QZPN_GameMessageClassID = 10005 //广播庄家 S2C
	QZPN_GameMessageClassID_QZPNXianjiaBetID             QZPN_GameMessageClassID = 10006 //下注ID C2S
	QZPN_GameMessageClassID_QZPNOnUserXianBetID          QZPN_GameMessageClassID = 10007 //通知下注給其他用戶 S2C
	QZPN_GameMessageClassID_QZPNBroadCastXianBetID       QZPN_GameMessageClassID = 10008 //广播閒家倍數 S2C
	QZPN_GameMessageClassID_QZPNBroadCastDiceID          QZPN_GameMessageClassID = 10009 //广播骰盅 S2C
	QZPN_GameMessageClassID_QZPNGameResultID             QZPN_GameMessageClassID = 10010 //游戏结果 S2C
	QZPN_GameMessageClassID_QZPNBroadCastUserNoMoneyID   QZPN_GameMessageClassID = 10011 //广播玩家金額不足 S2C
	QZPN_GameMessageClassID_QZPNBroadCastGameEndResultID QZPN_GameMessageClassID = 10012 //广播玩家結果資訊 S2C
	QZPN_GameMessageClassID_QZPNGameSceneID              QZPN_GameMessageClassID = 10013 //游戏场景
	QZPN_GameMessageClassID_QZPNUserBetInfoID            QZPN_GameMessageClassID = 10014 //玩家可下注資訊(搶莊/下注)
	QZPN_GameMessageClassID_QZPNGameNo                   QZPN_GameMessageClassID = 10015 //牌局編號
	QZPN_GameMessageClassID_QZPNUserPaijiouID            QZPN_GameMessageClassID = 10016 //傳送牌給使用者 S2C
	QZPN_GameMessageClassID_QZPNUserMiPaiId              QZPN_GameMessageClassID = 10017 //玩家是某咪牌 C2S
	QZPN_GameMessageClassID_QZPNOnUserPaijiouID          QZPN_GameMessageClassID = 10018 //通知牌型給其他用戶 S2C
)

// Enum value maps for QZPN_GameMessageClassID.
var (
	QZPN_GameMessageClassID_name = map[int32]string{
		10001: "QZPNSettingID",
		10002: "QZPNStateID",
		10003: "QZPNQiangZhuangID",
		10004: "QZPNOnUserZhuangBetID",
		10005: "QZPNBroadCastZhuangID",
		10006: "QZPNXianjiaBetID",
		10007: "QZPNOnUserXianBetID",
		10008: "QZPNBroadCastXianBetID",
		10009: "QZPNBroadCastDiceID",
		10010: "QZPNGameResultID",
		10011: "QZPNBroadCastUserNoMoneyID",
		10012: "QZPNBroadCastGameEndResultID",
		10013: "QZPNGameSceneID",
		10014: "QZPNUserBetInfoID",
		10015: "QZPNGameNo",
		10016: "QZPNUserPaijiouID",
		10017: "QZPNUserMiPaiId",
		10018: "QZPNOnUserPaijiouID",
	}
	QZPN_GameMessageClassID_value = map[string]int32{
		"QZPNSettingID":                10001,
		"QZPNStateID":                  10002,
		"QZPNQiangZhuangID":            10003,
		"QZPNOnUserZhuangBetID":        10004,
		"QZPNBroadCastZhuangID":        10005,
		"QZPNXianjiaBetID":             10006,
		"QZPNOnUserXianBetID":          10007,
		"QZPNBroadCastXianBetID":       10008,
		"QZPNBroadCastDiceID":          10009,
		"QZPNGameResultID":             10010,
		"QZPNBroadCastUserNoMoneyID":   10011,
		"QZPNBroadCastGameEndResultID": 10012,
		"QZPNGameSceneID":              10013,
		"QZPNUserBetInfoID":            10014,
		"QZPNGameNo":                   10015,
		"QZPNUserPaijiouID":            10016,
		"QZPNUserMiPaiId":              10017,
		"QZPNOnUserPaijiouID":          10018,
	}
)

func (x QZPN_GameMessageClassID) Enum() *QZPN_GameMessageClassID {
	p := new(QZPN_GameMessageClassID)
	*p = x
	return p
}

func (x QZPN_GameMessageClassID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QZPN_GameMessageClassID) Descriptor() protoreflect.EnumDescriptor {
	return file_Game_QZPN_proto_enumTypes[0].Descriptor()
}

func (QZPN_GameMessageClassID) Type() protoreflect.EnumType {
	return &file_Game_QZPN_proto_enumTypes[0]
}

func (x QZPN_GameMessageClassID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *QZPN_GameMessageClassID) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = QZPN_GameMessageClassID(num)
	return nil
}

// Deprecated: Use QZPN_GameMessageClassID.Descriptor instead.
func (QZPN_GameMessageClassID) EnumDescriptor() ([]byte, []int) {
	return file_Game_QZPN_proto_rawDescGZIP(), []int{0}
}

var File_Game_QZPN_proto protoreflect.FileDescriptor

var file_Game_QZPN_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x47, 0x61, 0x6d, 0x65, 0x5f, 0x51, 0x5a, 0x50, 0x4e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x08, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2a, 0xd9, 0x03, 0x0a, 0x17,
	0x51, 0x5a, 0x50, 0x4e, 0x5f, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x0d, 0x51, 0x5a, 0x50, 0x4e, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x44, 0x10, 0x91, 0x4e, 0x12, 0x10, 0x0a, 0x0b, 0x51,
	0x5a, 0x50, 0x4e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x49, 0x44, 0x10, 0x92, 0x4e, 0x12, 0x16, 0x0a,
	0x11, 0x51, 0x5a, 0x50, 0x4e, 0x51, 0x69, 0x61, 0x6e, 0x67, 0x5a, 0x68, 0x75, 0x61, 0x6e, 0x67,
	0x49, 0x44, 0x10, 0x93, 0x4e, 0x12, 0x1a, 0x0a, 0x15, 0x51, 0x5a, 0x50, 0x4e, 0x4f, 0x6e, 0x55,
	0x73, 0x65, 0x72, 0x5a, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x42, 0x65, 0x74, 0x49, 0x44, 0x10, 0x94,
	0x4e, 0x12, 0x1a, 0x0a, 0x15, 0x51, 0x5a, 0x50, 0x4e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61,
	0x73, 0x74, 0x5a, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x10, 0x95, 0x4e, 0x12, 0x15, 0x0a,
	0x10, 0x51, 0x5a, 0x50, 0x4e, 0x58, 0x69, 0x61, 0x6e, 0x6a, 0x69, 0x61, 0x42, 0x65, 0x74, 0x49,
	0x44, 0x10, 0x96, 0x4e, 0x12, 0x18, 0x0a, 0x13, 0x51, 0x5a, 0x50, 0x4e, 0x4f, 0x6e, 0x55, 0x73,
	0x65, 0x72, 0x58, 0x69, 0x61, 0x6e, 0x42, 0x65, 0x74, 0x49, 0x44, 0x10, 0x97, 0x4e, 0x12, 0x1b,
	0x0a, 0x16, 0x51, 0x5a, 0x50, 0x4e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x58,
	0x69, 0x61, 0x6e, 0x42, 0x65, 0x74, 0x49, 0x44, 0x10, 0x98, 0x4e, 0x12, 0x18, 0x0a, 0x13, 0x51,
	0x5a, 0x50, 0x4e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x44, 0x69, 0x63, 0x65,
	0x49, 0x44, 0x10, 0x99, 0x4e, 0x12, 0x15, 0x0a, 0x10, 0x51, 0x5a, 0x50, 0x4e, 0x47, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x49, 0x44, 0x10, 0x9a, 0x4e, 0x12, 0x1f, 0x0a, 0x1a,
	0x51, 0x5a, 0x50, 0x4e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x4e, 0x6f, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x49, 0x44, 0x10, 0x9b, 0x4e, 0x12, 0x21, 0x0a,
	0x1c, 0x51, 0x5a, 0x50, 0x4e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x47, 0x61,
	0x6d, 0x65, 0x45, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x49, 0x44, 0x10, 0x9c, 0x4e,
	0x12, 0x14, 0x0a, 0x0f, 0x51, 0x5a, 0x50, 0x4e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x63, 0x65, 0x6e,
	0x65, 0x49, 0x44, 0x10, 0x9d, 0x4e, 0x12, 0x16, 0x0a, 0x11, 0x51, 0x5a, 0x50, 0x4e, 0x55, 0x73,
	0x65, 0x72, 0x42, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x44, 0x10, 0x9e, 0x4e, 0x12, 0x0f,
	0x0a, 0x0a, 0x51, 0x5a, 0x50, 0x4e, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x10, 0x9f, 0x4e, 0x12,
	0x16, 0x0a, 0x11, 0x51, 0x5a, 0x50, 0x4e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x69, 0x6a, 0x69,
	0x6f, 0x75, 0x49, 0x44, 0x10, 0xa0, 0x4e, 0x12, 0x14, 0x0a, 0x0f, 0x51, 0x5a, 0x50, 0x4e, 0x55,
	0x73, 0x65, 0x72, 0x4d, 0x69, 0x50, 0x61, 0x69, 0x49, 0x64, 0x10, 0xa1, 0x4e, 0x12, 0x18, 0x0a,
	0x13, 0x51, 0x5a, 0x50, 0x4e, 0x4f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x69, 0x6a, 0x69,
	0x6f, 0x75, 0x49, 0x44, 0x10, 0xa2, 0x4e, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x6e, 0x65, 0x74,
	0x70, 0x72, 0x6f, 0x74, 0x6f,
}

var (
	file_Game_QZPN_proto_rawDescOnce sync.Once
	file_Game_QZPN_proto_rawDescData = file_Game_QZPN_proto_rawDesc
)

func file_Game_QZPN_proto_rawDescGZIP() []byte {
	file_Game_QZPN_proto_rawDescOnce.Do(func() {
		file_Game_QZPN_proto_rawDescData = protoimpl.X.CompressGZIP(file_Game_QZPN_proto_rawDescData)
	})
	return file_Game_QZPN_proto_rawDescData
}

var file_Game_QZPN_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_Game_QZPN_proto_goTypes = []interface{}{
	(QZPN_GameMessageClassID)(0), // 0: netproto.QZPN_GameMessageClassID
}
var file_Game_QZPN_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_Game_QZPN_proto_init() }
func file_Game_QZPN_proto_init() {
	if File_Game_QZPN_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Game_QZPN_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Game_QZPN_proto_goTypes,
		DependencyIndexes: file_Game_QZPN_proto_depIdxs,
		EnumInfos:         file_Game_QZPN_proto_enumTypes,
	}.Build()
	File_Game_QZPN_proto = out.File
	file_Game_QZPN_proto_rawDesc = nil
	file_Game_QZPN_proto_goTypes = nil
	file_Game_QZPN_proto_depIdxs = nil
}
