//==================================================================
//文件名： Game_SCMJ.proto
//作者：
//日期：
//说明：   麻将游戏客户服务器通信协议
//修改记录：
//==================================================================

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: Game_SCMJ.proto

package netproto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//
//// Card int32=100*Color+10*Number+index(第几副牌)
//// color=card/100
//// number=card%100/10
//const (
//COLOR_TONG  int32 = 1 //筒子
//COLOR_TIAO  int32 = 2 //条子
//COLOR_WAN   int32 = 3 //万子
//COLOR_FENG  int32 = 4 //风牌
//COLOR_JIAN  int32 = 5 //箭牌
//COLOR_HUA   int32 = 6 //花牌
//COLOR_BAIDA int32 = 7 //百搭牌
//)
//
//const (
////风牌
//NUMBER_EAST  int32 = 1 //东
//NUMBER_WEST  int32 = 2 //西
//NUMBER_SOUTH int32 = 3 //南
//NUMBER_NORTH int32 = 4 //北
////箭牌
//NUMBER_ZHONG int32 = 1 //中
//NUMBER_FA    int32 = 2 //发
//NUMBER_BAI   int32 = 3 //白
////花牌
//NUMBER_CHUN int32 = 1 //春
//NUMBER_XIA  int32 = 2 //夏
//NUMBER_QIU  int32 = 3 //秋
//NUMBER_DONG int32 = 4 //冬
//NUMBER_MEI  int32 = 5 //梅
//NUMBER_LAN  int32 = 6 //兰
//NUMBER_ZHU  int32 = 7 //竹
//NUMBER_JU   int32 = 8 //菊
////序牌1~9
//)
//
////游戏阶段
//int32 = 1 //开始
//int32 = 2 //丢色子
//int32 = 3 //发牌
//int32 = 4 //定缺
//int32 = 5 //战斗
//int32 = 6 //查大叫
//int32 = 7 //查花猪
//int32 = 8 //结算
//int32 = 9 //结束
//
type SCMJ_GameMessageClassID int32

const (
	SCMJ_GameMessageClassID_SCMJErrorId                 SCMJ_GameMessageClassID = 10001 //错误信息，SCMJ_Error
	SCMJ_GameMessageClassID_SCMJThrowDiceId             SCMJ_GameMessageClassID = 10002 //丢色子 MJ_Dice
	SCMJ_GameMessageClassID_SCMJDealId                  SCMJ_GameMessageClassID = 10003 //发牌[摸牌] SCMJ_BroadcastDeal
	SCMJ_GameMessageClassID_SCMJBroadCastChooseId       SCMJ_GameMessageClassID = 10005 //选定缺返回，SCMJ_BroadcastAction
	SCMJ_GameMessageClassID_SCMJBroadCastChooseResultId SCMJ_GameMessageClassID = 10006 //所有玩家定缺信息,SCMJ_BroadcastChooseResult
	SCMJ_GameMessageClassID_SCNJActionId                SCMJ_GameMessageClassID = 10007 //操作[定缺,出牌,吃碰杠胡],SCMJ_Action
	SCMJ_GameMessageClassID_SCMJBroadCastActionId       SCMJ_GameMessageClassID = 10008 //操作返回，SCMJ_BroadcastAction
	SCMJ_GameMessageClassID_SCMJScenceExchangeId        SCMJ_GameMessageClassID = 10009 //吃碰杠胡通知,SCMJ_BroadCastUserOper
	SCMJ_GameMessageClassID_SCMJWaitId                  SCMJ_GameMessageClassID = 10010 //当前操作用户，SCMJ_Wait
	SCMJ_GameMessageClassID_SCMJSettleMentIntimeId      SCMJ_GameMessageClassID = 10011 //即时小结算，SCMJ_InTimeSettle
	SCMJ_GameMessageClassID_SCMJTotalSettleMentId       SCMJ_GameMessageClassID = 10012 //大结算，SCMJ_TotalSettleMent
	SCMJ_GameMessageClassID_SCMJGameSenceId             SCMJ_GameMessageClassID = 10013 //场景恢复,SCMJ_GameScence
	SCMJ_GameMessageClassID_SCMJGameSettingId           SCMJ_GameMessageClassID = 10014 //游戏设置,Mj_GameSetting
	SCMJ_GameMessageClassID_SCMJCanOpEventId            SCMJ_GameMessageClassID = 10015 //提示操作,SCMJ_CanOpEvent
	SCMJ_GameMessageClassID_S2C_SCMJLightId             SCMJ_GameMessageClassID = 10016 //亮牌,S2C_SCMJ_Light
	SCMJ_GameMessageClassID_C2S_SCMJRemindId            SCMJ_GameMessageClassID = 10017 //客户端请求提示信息，C2S_SCMJ_Remind
	SCMJ_GameMessageClassID_S2C_SCMJRemindId            SCMJ_GameMessageClassID = 10018 //服务端返回提示信息，S2C_SCMJ_RemindMsg
	SCMJ_GameMessageClassID_S2C_TuoGuanId               SCMJ_GameMessageClassID = 10019 //托管，S2C_SCMJ_TuoGuan
	SCMJ_GameMessageClassID_C2S_TuoGuanId               SCMJ_GameMessageClassID = 10020 //托管，C2S_SCMJ_TuoGuan
	SCMJ_GameMessageClassID_S2C_BroadCastRateId         SCMJ_GameMessageClassID = 10021 //通知客户端选倍率,SCMJ_BroadcastAction
	SCMJ_GameMessageClassID_S2C_BroadCastRateResultId   SCMJ_GameMessageClassID = 10022 //通知客户端玩家选倍率结果,SCMJ_BroadcastChooseResult
	SCMJ_GameMessageClassID_C2S_EarlyChangeTable        SCMJ_GameMessageClassID = 10023 //提前換桌
	SCMJ_GameMessageClassID_C2S_EarlyLeaveTable         SCMJ_GameMessageClassID = 10024 //提前離桌
)

// Enum value maps for SCMJ_GameMessageClassID.
var (
	SCMJ_GameMessageClassID_name = map[int32]string{
		10001: "SCMJErrorId",
		10002: "SCMJThrowDiceId",
		10003: "SCMJDealId",
		10005: "SCMJBroadCastChooseId",
		10006: "SCMJBroadCastChooseResultId",
		10007: "SCNJActionId",
		10008: "SCMJBroadCastActionId",
		10009: "SCMJScenceExchangeId",
		10010: "SCMJWaitId",
		10011: "SCMJSettleMentIntimeId",
		10012: "SCMJTotalSettleMentId",
		10013: "SCMJGameSenceId",
		10014: "SCMJGameSettingId",
		10015: "SCMJCanOpEventId",
		10016: "S2C_SCMJLightId",
		10017: "C2S_SCMJRemindId",
		10018: "S2C_SCMJRemindId",
		10019: "S2C_TuoGuanId",
		10020: "C2S_TuoGuanId",
		10021: "S2C_BroadCastRateId",
		10022: "S2C_BroadCastRateResultId",
		10023: "C2S_EarlyChangeTable",
		10024: "C2S_EarlyLeaveTable",
	}
	SCMJ_GameMessageClassID_value = map[string]int32{
		"SCMJErrorId":                 10001,
		"SCMJThrowDiceId":             10002,
		"SCMJDealId":                  10003,
		"SCMJBroadCastChooseId":       10005,
		"SCMJBroadCastChooseResultId": 10006,
		"SCNJActionId":                10007,
		"SCMJBroadCastActionId":       10008,
		"SCMJScenceExchangeId":        10009,
		"SCMJWaitId":                  10010,
		"SCMJSettleMentIntimeId":      10011,
		"SCMJTotalSettleMentId":       10012,
		"SCMJGameSenceId":             10013,
		"SCMJGameSettingId":           10014,
		"SCMJCanOpEventId":            10015,
		"S2C_SCMJLightId":             10016,
		"C2S_SCMJRemindId":            10017,
		"S2C_SCMJRemindId":            10018,
		"S2C_TuoGuanId":               10019,
		"C2S_TuoGuanId":               10020,
		"S2C_BroadCastRateId":         10021,
		"S2C_BroadCastRateResultId":   10022,
		"C2S_EarlyChangeTable":        10023,
		"C2S_EarlyLeaveTable":         10024,
	}
)

func (x SCMJ_GameMessageClassID) Enum() *SCMJ_GameMessageClassID {
	p := new(SCMJ_GameMessageClassID)
	*p = x
	return p
}

func (x SCMJ_GameMessageClassID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SCMJ_GameMessageClassID) Descriptor() protoreflect.EnumDescriptor {
	return file_Game_SCMJ_proto_enumTypes[0].Descriptor()
}

func (SCMJ_GameMessageClassID) Type() protoreflect.EnumType {
	return &file_Game_SCMJ_proto_enumTypes[0]
}

func (x SCMJ_GameMessageClassID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *SCMJ_GameMessageClassID) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = SCMJ_GameMessageClassID(num)
	return nil
}

// Deprecated: Use SCMJ_GameMessageClassID.Descriptor instead.
func (SCMJ_GameMessageClassID) EnumDescriptor() ([]byte, []int) {
	return file_Game_SCMJ_proto_rawDescGZIP(), []int{0}
}

var File_Game_SCMJ_proto protoreflect.FileDescriptor

var file_Game_SCMJ_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x47, 0x61, 0x6d, 0x65, 0x5f, 0x53, 0x43, 0x4d, 0x4a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x08, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2a, 0xc4, 0x04, 0x0a, 0x17,
	0x53, 0x43, 0x4d, 0x4a, 0x5f, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x0b, 0x53, 0x43, 0x4d, 0x4a, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x49, 0x64, 0x10, 0x91, 0x4e, 0x12, 0x14, 0x0a, 0x0f, 0x53, 0x43, 0x4d,
	0x4a, 0x54, 0x68, 0x72, 0x6f, 0x77, 0x44, 0x69, 0x63, 0x65, 0x49, 0x64, 0x10, 0x92, 0x4e, 0x12,
	0x0f, 0x0a, 0x0a, 0x53, 0x43, 0x4d, 0x4a, 0x44, 0x65, 0x61, 0x6c, 0x49, 0x64, 0x10, 0x93, 0x4e,
	0x12, 0x1a, 0x0a, 0x15, 0x53, 0x43, 0x4d, 0x4a, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73,
	0x74, 0x43, 0x68, 0x6f, 0x6f, 0x73, 0x65, 0x49, 0x64, 0x10, 0x95, 0x4e, 0x12, 0x20, 0x0a, 0x1b,
	0x53, 0x43, 0x4d, 0x4a, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x43, 0x68, 0x6f,
	0x6f, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x49, 0x64, 0x10, 0x96, 0x4e, 0x12, 0x11,
	0x0a, 0x0c, 0x53, 0x43, 0x4e, 0x4a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x10, 0x97,
	0x4e, 0x12, 0x1a, 0x0a, 0x15, 0x53, 0x43, 0x4d, 0x4a, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61,
	0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x10, 0x98, 0x4e, 0x12, 0x19, 0x0a,
	0x14, 0x53, 0x43, 0x4d, 0x4a, 0x53, 0x63, 0x65, 0x6e, 0x63, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x49, 0x64, 0x10, 0x99, 0x4e, 0x12, 0x0f, 0x0a, 0x0a, 0x53, 0x43, 0x4d, 0x4a,
	0x57, 0x61, 0x69, 0x74, 0x49, 0x64, 0x10, 0x9a, 0x4e, 0x12, 0x1b, 0x0a, 0x16, 0x53, 0x43, 0x4d,
	0x4a, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x49, 0x64, 0x10, 0x9b, 0x4e, 0x12, 0x1a, 0x0a, 0x15, 0x53, 0x43, 0x4d, 0x4a, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x10,
	0x9c, 0x4e, 0x12, 0x14, 0x0a, 0x0f, 0x53, 0x43, 0x4d, 0x4a, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65,
	0x6e, 0x63, 0x65, 0x49, 0x64, 0x10, 0x9d, 0x4e, 0x12, 0x16, 0x0a, 0x11, 0x53, 0x43, 0x4d, 0x4a,
	0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x10, 0x9e, 0x4e,
	0x12, 0x15, 0x0a, 0x10, 0x53, 0x43, 0x4d, 0x4a, 0x43, 0x61, 0x6e, 0x4f, 0x70, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x10, 0x9f, 0x4e, 0x12, 0x14, 0x0a, 0x0f, 0x53, 0x32, 0x43, 0x5f, 0x53,
	0x43, 0x4d, 0x4a, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x64, 0x10, 0xa0, 0x4e, 0x12, 0x15, 0x0a,
	0x10, 0x43, 0x32, 0x53, 0x5f, 0x53, 0x43, 0x4d, 0x4a, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x49,
	0x64, 0x10, 0xa1, 0x4e, 0x12, 0x15, 0x0a, 0x10, 0x53, 0x32, 0x43, 0x5f, 0x53, 0x43, 0x4d, 0x4a,
	0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x49, 0x64, 0x10, 0xa2, 0x4e, 0x12, 0x12, 0x0a, 0x0d, 0x53,
	0x32, 0x43, 0x5f, 0x54, 0x75, 0x6f, 0x47, 0x75, 0x61, 0x6e, 0x49, 0x64, 0x10, 0xa3, 0x4e, 0x12,
	0x12, 0x0a, 0x0d, 0x43, 0x32, 0x53, 0x5f, 0x54, 0x75, 0x6f, 0x47, 0x75, 0x61, 0x6e, 0x49, 0x64,
	0x10, 0xa4, 0x4e, 0x12, 0x18, 0x0a, 0x13, 0x53, 0x32, 0x43, 0x5f, 0x42, 0x72, 0x6f, 0x61, 0x64,
	0x43, 0x61, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x49, 0x64, 0x10, 0xa5, 0x4e, 0x12, 0x1e, 0x0a,
	0x19, 0x53, 0x32, 0x43, 0x5f, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x52, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x49, 0x64, 0x10, 0xa6, 0x4e, 0x12, 0x19, 0x0a,
	0x14, 0x43, 0x32, 0x53, 0x5f, 0x45, 0x61, 0x72, 0x6c, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x10, 0xa7, 0x4e, 0x12, 0x18, 0x0a, 0x13, 0x43, 0x32, 0x53, 0x5f,
	0x45, 0x61, 0x72, 0x6c, 0x79, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x10,
	0xa8, 0x4e, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f,
}

var (
	file_Game_SCMJ_proto_rawDescOnce sync.Once
	file_Game_SCMJ_proto_rawDescData = file_Game_SCMJ_proto_rawDesc
)

func file_Game_SCMJ_proto_rawDescGZIP() []byte {
	file_Game_SCMJ_proto_rawDescOnce.Do(func() {
		file_Game_SCMJ_proto_rawDescData = protoimpl.X.CompressGZIP(file_Game_SCMJ_proto_rawDescData)
	})
	return file_Game_SCMJ_proto_rawDescData
}

var file_Game_SCMJ_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_Game_SCMJ_proto_goTypes = []interface{}{
	(SCMJ_GameMessageClassID)(0), // 0: netproto.SCMJ_GameMessageClassID
}
var file_Game_SCMJ_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_Game_SCMJ_proto_init() }
func file_Game_SCMJ_proto_init() {
	if File_Game_SCMJ_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Game_SCMJ_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Game_SCMJ_proto_goTypes,
		DependencyIndexes: file_Game_SCMJ_proto_depIdxs,
		EnumInfos:         file_Game_SCMJ_proto_enumTypes,
	}.Build()
	File_Game_SCMJ_proto = out.File
	file_Game_SCMJ_proto_rawDesc = nil
	file_Game_SCMJ_proto_goTypes = nil
	file_Game_SCMJ_proto_depIdxs = nil
}
