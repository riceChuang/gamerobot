// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: Game_Slot.proto

package netproto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Slot 共用遊戲訊息 2xxxx
type Slot_GameMessageClassID int32

const (
	// Server to Client 20xxx
	Slot_GameMessageClassID_Slot_SettingID    Slot_GameMessageClassID = 20001 // 設置相關
	Slot_GameMessageClassID_Slot_StatusID     Slot_GameMessageClassID = 20002 // 遊戲狀態 0: 玩家可下注, 1: 開獎, 2: 開獎動畫, 3: 結算動畫, 4: 等待遊戲開始
	Slot_GameMessageClassID_Slot_BetStatusID  Slot_GameMessageClassID = 20003 // 下注狀態 0: 下注成功, -1: 用戶金額不足, -2: 下注的類型未找到, -3: 莊家不能下注, -4: 此類下注已達到上限, -5: 非下注階段, -6: 用戶金額小於下注限制
	Slot_GameMessageClassID_Slot_GameResultID Slot_GameMessageClassID = 20004 // 遊戲結果 (轉出內容，中獎項目，中獎金額)
	// Client to Server 21xxx
	Slot_GameMessageClassID_Slot_ActionSpinID Slot_GameMessageClassID = 21001 // 玩家Spin
	// 會一來一回的資訊 22xxx
	Slot_GameMessageClassID_Slot_LoadHistoryID    Slot_GameMessageClassID = 22001 // 玩家查詢記錄
	Slot_GameMessageClassID_Slot_LoadHistoryRetID Slot_GameMessageClassID = 22002 // 回傳玩家查詢記錄
	Slot_GameMessageClassID_Slot_JackpotPoolID    Slot_GameMessageClassID = 22003 // 查詢獎池資訊
	Slot_GameMessageClassID_Slot_JackpotPoolRetID Slot_GameMessageClassID = 22004 // 回傳獎池資訊
	Slot_GameMessageClassID_Slot_BonusGameID      Slot_GameMessageClassID = 22005 // 查詢BonusGame資訊
	Slot_GameMessageClassID_Slot_BonusGameRetID   Slot_GameMessageClassID = 22006 // 回傳查詢BonusGame資訊
)

// Enum value maps for Slot_GameMessageClassID.
var (
	Slot_GameMessageClassID_name = map[int32]string{
		20001: "Slot_SettingID",
		20002: "Slot_StatusID",
		20003: "Slot_BetStatusID",
		20004: "Slot_GameResultID",
		21001: "Slot_ActionSpinID",
		22001: "Slot_LoadHistoryID",
		22002: "Slot_LoadHistoryRetID",
		22003: "Slot_JackpotPoolID",
		22004: "Slot_JackpotPoolRetID",
		22005: "Slot_BonusGameID",
		22006: "Slot_BonusGameRetID",
	}
	Slot_GameMessageClassID_value = map[string]int32{
		"Slot_SettingID":        20001,
		"Slot_StatusID":         20002,
		"Slot_BetStatusID":      20003,
		"Slot_GameResultID":     20004,
		"Slot_ActionSpinID":     21001,
		"Slot_LoadHistoryID":    22001,
		"Slot_LoadHistoryRetID": 22002,
		"Slot_JackpotPoolID":    22003,
		"Slot_JackpotPoolRetID": 22004,
		"Slot_BonusGameID":      22005,
		"Slot_BonusGameRetID":   22006,
	}
)

func (x Slot_GameMessageClassID) Enum() *Slot_GameMessageClassID {
	p := new(Slot_GameMessageClassID)
	*p = x
	return p
}

func (x Slot_GameMessageClassID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Slot_GameMessageClassID) Descriptor() protoreflect.EnumDescriptor {
	return file_Game_Slot_proto_enumTypes[0].Descriptor()
}

func (Slot_GameMessageClassID) Type() protoreflect.EnumType {
	return &file_Game_Slot_proto_enumTypes[0]
}

func (x Slot_GameMessageClassID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Slot_GameMessageClassID) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Slot_GameMessageClassID(num)
	return nil
}

// Deprecated: Use Slot_GameMessageClassID.Descriptor instead.
func (Slot_GameMessageClassID) EnumDescriptor() ([]byte, []int) {
	return file_Game_Slot_proto_rawDescGZIP(), []int{0}
}

var File_Game_Slot_proto protoreflect.FileDescriptor

var file_Game_Slot_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x47, 0x61, 0x6d, 0x65, 0x5f, 0x53, 0x6c, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x08, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2a, 0xaf, 0x02, 0x0a, 0x17,
	0x53, 0x6c, 0x6f, 0x74, 0x5f, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x0e, 0x53, 0x6c, 0x6f, 0x74, 0x5f,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x44, 0x10, 0xa1, 0x9c, 0x01, 0x12, 0x13, 0x0a,
	0x0d, 0x53, 0x6c, 0x6f, 0x74, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x44, 0x10, 0xa2,
	0x9c, 0x01, 0x12, 0x16, 0x0a, 0x10, 0x53, 0x6c, 0x6f, 0x74, 0x5f, 0x42, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x49, 0x44, 0x10, 0xa3, 0x9c, 0x01, 0x12, 0x17, 0x0a, 0x11, 0x53, 0x6c,
	0x6f, 0x74, 0x5f, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x49, 0x44, 0x10,
	0xa4, 0x9c, 0x01, 0x12, 0x17, 0x0a, 0x11, 0x53, 0x6c, 0x6f, 0x74, 0x5f, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x70, 0x69, 0x6e, 0x49, 0x44, 0x10, 0x89, 0xa4, 0x01, 0x12, 0x18, 0x0a, 0x12,
	0x53, 0x6c, 0x6f, 0x74, 0x5f, 0x4c, 0x6f, 0x61, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x49, 0x44, 0x10, 0xf1, 0xab, 0x01, 0x12, 0x1b, 0x0a, 0x15, 0x53, 0x6c, 0x6f, 0x74, 0x5f, 0x4c,
	0x6f, 0x61, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10,
	0xf2, 0xab, 0x01, 0x12, 0x18, 0x0a, 0x12, 0x53, 0x6c, 0x6f, 0x74, 0x5f, 0x4a, 0x61, 0x63, 0x6b,
	0x70, 0x6f, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x44, 0x10, 0xf3, 0xab, 0x01, 0x12, 0x1b, 0x0a,
	0x15, 0x53, 0x6c, 0x6f, 0x74, 0x5f, 0x4a, 0x61, 0x63, 0x6b, 0x70, 0x6f, 0x74, 0x50, 0x6f, 0x6f,
	0x6c, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10, 0xf4, 0xab, 0x01, 0x12, 0x16, 0x0a, 0x10, 0x53, 0x6c,
	0x6f, 0x74, 0x5f, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x10, 0xf5,
	0xab, 0x01, 0x12, 0x19, 0x0a, 0x13, 0x53, 0x6c, 0x6f, 0x74, 0x5f, 0x42, 0x6f, 0x6e, 0x75, 0x73,
	0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10, 0xf6, 0xab, 0x01, 0x42, 0x0c, 0x5a,
	0x0a, 0x2e, 0x2f, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f,
}

var (
	file_Game_Slot_proto_rawDescOnce sync.Once
	file_Game_Slot_proto_rawDescData = file_Game_Slot_proto_rawDesc
)

func file_Game_Slot_proto_rawDescGZIP() []byte {
	file_Game_Slot_proto_rawDescOnce.Do(func() {
		file_Game_Slot_proto_rawDescData = protoimpl.X.CompressGZIP(file_Game_Slot_proto_rawDescData)
	})
	return file_Game_Slot_proto_rawDescData
}

var file_Game_Slot_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_Game_Slot_proto_goTypes = []interface{}{
	(Slot_GameMessageClassID)(0), // 0: netproto.Slot_GameMessageClassID
}
var file_Game_Slot_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_Game_Slot_proto_init() }
func file_Game_Slot_proto_init() {
	if File_Game_Slot_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Game_Slot_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Game_Slot_proto_goTypes,
		DependencyIndexes: file_Game_Slot_proto_depIdxs,
		EnumInfos:         file_Game_Slot_proto_enumTypes,
	}.Build()
	File_Game_Slot_proto = out.File
	file_Game_Slot_proto_rawDesc = nil
	file_Game_Slot_proto_goTypes = nil
	file_Game_Slot_proto_depIdxs = nil
}
