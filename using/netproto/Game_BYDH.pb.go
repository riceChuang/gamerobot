// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: Game_BYDH.proto

package netproto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type BYDH_GameMessageClassID int32

const (
	BYDH_GameMessageClassID_BYDHGameNo                    BYDH_GameMessageClassID = 10001 //遊戲局號
	BYDH_GameMessageClassID_BYDHGameSceneID               BYDH_GameMessageClassID = 10002 //遊戲場景
	BYDH_GameMessageClassID_BYDHGameSettingID             BYDH_GameMessageClassID = 10003 //遊戲初始化設定
	BYDH_GameMessageClassID_BYDHErrorRetID                BYDH_GameMessageClassID = 10004 //封包錯誤回傳 (StoC)
	BYDH_GameMessageClassID_BYDHFishBroadCastID           BYDH_GameMessageClassID = 10005 //發送魚 (StoC)
	BYDH_GameMessageClassID_BYDHDeleteFishBroadCastID     BYDH_GameMessageClassID = 10006 //刪除魚 (StoC)
	BYDH_GameMessageClassID_BYDHDeleteBulletBroadCastID   BYDH_GameMessageClassID = 10007 //刪除子彈 (StoC)
	BYDH_GameMessageClassID_BYDHSpecialSceneID            BYDH_GameMessageClassID = 10008 //特殊場景廣播 (StoC 燈籠魚,藍鯨...)
	BYDH_GameMessageClassID_BYDHWaveSceneID               BYDH_GameMessageClassID = 10009 //魚潮來襲廣播 (StoC 浪潮)
	BYDH_GameMessageClassID_BYDHShootBulletID             BYDH_GameMessageClassID = 10010 //發送射擊子彈請求 (CtoS)
	BYDH_GameMessageClassID_BYDHShootBulletRetID          BYDH_GameMessageClassID = 10011 //發送射擊子彈回覆 (StoC to user)
	BYDH_GameMessageClassID_BYDHBulletBroadCastID         BYDH_GameMessageClassID = 10012 //廣播子彈 (StoC)
	BYDH_GameMessageClassID_BYDHBoomID                    BYDH_GameMessageClassID = 10013 //子彈擊中魚 (CtoS)
	BYDH_GameMessageClassID_BYDHBoomRetID                 BYDH_GameMessageClassID = 10014 //子彈擊中魚回應 (StoC to user)
	BYDH_GameMessageClassID_BYDHBoomBroadCastID           BYDH_GameMessageClassID = 10015 //子彈擊中魚廣播 (StoC)
	BYDH_GameMessageClassID_BYDHCatchFishBroadCastID      BYDH_GameMessageClassID = 10016 //捕獲魚廣播 (StoC)
	BYDH_GameMessageClassID_BYDHCannonID                  BYDH_GameMessageClassID = 10017 //更換砲台 (CtoS)
	BYDH_GameMessageClassID_BYDHCannonRetID               BYDH_GameMessageClassID = 10018 //更換砲台回覆 (StoC to user)
	BYDH_GameMessageClassID_BYDHCannonBroadcastID         BYDH_GameMessageClassID = 10019 //砲台更換廣播 (StoC)
	BYDH_GameMessageClassID_BYDHRewardZhenZhuID           BYDH_GameMessageClassID = 10020 //特殊獎勵珍珠魚 (StoC to user)
	BYDH_GameMessageClassID_BYDHZhenZhuPickID             BYDH_GameMessageClassID = 10021 //珍珠魚抽獎 (CtoS)
	BYDH_GameMessageClassID_BYDHZhenZhuPickRetID          BYDH_GameMessageClassID = 10022 //珍珠魚得獎資訊 (CtoS to user)
	BYDH_GameMessageClassID_BYDHRewardZhenZhuBroadCastID  BYDH_GameMessageClassID = 10023 //珍珠魚獎勵廣播 (StoC)
	BYDH_GameMessageClassID_BYDHRewardBaoXiangID          BYDH_GameMessageClassID = 10024 //特殊獎勵寶藏箱 (StoC to user)
	BYDH_GameMessageClassID_BYDHBaoXiangPickID            BYDH_GameMessageClassID = 10025 //寶藏箱抽獎 (CtoS)
	BYDH_GameMessageClassID_BYDHBaoXiangPickRetID         BYDH_GameMessageClassID = 10026 //寶藏箱得獎資訊 (StoC to user)
	BYDH_GameMessageClassID_BYDHRewardBaoXiangBroadCastID BYDH_GameMessageClassID = 10027 //寶藏箱獎勵廣播 (StoC)
	BYDH_GameMessageClassID_BYDHRewardFreeBulletID        BYDH_GameMessageClassID = 10028 //特殊獎勵免費子彈 (StoC single)
	BYDH_GameMessageClassID_BYDHSyncServerTimeID          BYDH_GameMessageClassID = 10029 //同步遊戲時間
	BYDH_GameMessageClassID_BYDHSyncServerTimeRetID       BYDH_GameMessageClassID = 10030 //同步遊戲時間回應
	BYDH_GameMessageClassID_BYDHRTPDebugID                BYDH_GameMessageClassID = 10031 //測試rtp數據用封包
	BYDH_GameMessageClassID_BYDHRobotEnterID              BYDH_GameMessageClassID = 10032 //內部機器人進入
	BYDH_GameMessageClassID_BYDHRobotLeaveID              BYDH_GameMessageClassID = 10033 //內部機器人離開
)

// Enum value maps for BYDH_GameMessageClassID.
var (
	BYDH_GameMessageClassID_name = map[int32]string{
		10001: "BYDHGameNo",
		10002: "BYDHGameSceneID",
		10003: "BYDHGameSettingID",
		10004: "BYDHErrorRetID",
		10005: "BYDHFishBroadCastID",
		10006: "BYDHDeleteFishBroadCastID",
		10007: "BYDHDeleteBulletBroadCastID",
		10008: "BYDHSpecialSceneID",
		10009: "BYDHWaveSceneID",
		10010: "BYDHShootBulletID",
		10011: "BYDHShootBulletRetID",
		10012: "BYDHBulletBroadCastID",
		10013: "BYDHBoomID",
		10014: "BYDHBoomRetID",
		10015: "BYDHBoomBroadCastID",
		10016: "BYDHCatchFishBroadCastID",
		10017: "BYDHCannonID",
		10018: "BYDHCannonRetID",
		10019: "BYDHCannonBroadcastID",
		10020: "BYDHRewardZhenZhuID",
		10021: "BYDHZhenZhuPickID",
		10022: "BYDHZhenZhuPickRetID",
		10023: "BYDHRewardZhenZhuBroadCastID",
		10024: "BYDHRewardBaoXiangID",
		10025: "BYDHBaoXiangPickID",
		10026: "BYDHBaoXiangPickRetID",
		10027: "BYDHRewardBaoXiangBroadCastID",
		10028: "BYDHRewardFreeBulletID",
		10029: "BYDHSyncServerTimeID",
		10030: "BYDHSyncServerTimeRetID",
		10031: "BYDHRTPDebugID",
		10032: "BYDHRobotEnterID",
		10033: "BYDHRobotLeaveID",
	}
	BYDH_GameMessageClassID_value = map[string]int32{
		"BYDHGameNo":                    10001,
		"BYDHGameSceneID":               10002,
		"BYDHGameSettingID":             10003,
		"BYDHErrorRetID":                10004,
		"BYDHFishBroadCastID":           10005,
		"BYDHDeleteFishBroadCastID":     10006,
		"BYDHDeleteBulletBroadCastID":   10007,
		"BYDHSpecialSceneID":            10008,
		"BYDHWaveSceneID":               10009,
		"BYDHShootBulletID":             10010,
		"BYDHShootBulletRetID":          10011,
		"BYDHBulletBroadCastID":         10012,
		"BYDHBoomID":                    10013,
		"BYDHBoomRetID":                 10014,
		"BYDHBoomBroadCastID":           10015,
		"BYDHCatchFishBroadCastID":      10016,
		"BYDHCannonID":                  10017,
		"BYDHCannonRetID":               10018,
		"BYDHCannonBroadcastID":         10019,
		"BYDHRewardZhenZhuID":           10020,
		"BYDHZhenZhuPickID":             10021,
		"BYDHZhenZhuPickRetID":          10022,
		"BYDHRewardZhenZhuBroadCastID":  10023,
		"BYDHRewardBaoXiangID":          10024,
		"BYDHBaoXiangPickID":            10025,
		"BYDHBaoXiangPickRetID":         10026,
		"BYDHRewardBaoXiangBroadCastID": 10027,
		"BYDHRewardFreeBulletID":        10028,
		"BYDHSyncServerTimeID":          10029,
		"BYDHSyncServerTimeRetID":       10030,
		"BYDHRTPDebugID":                10031,
		"BYDHRobotEnterID":              10032,
		"BYDHRobotLeaveID":              10033,
	}
)

func (x BYDH_GameMessageClassID) Enum() *BYDH_GameMessageClassID {
	p := new(BYDH_GameMessageClassID)
	*p = x
	return p
}

func (x BYDH_GameMessageClassID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BYDH_GameMessageClassID) Descriptor() protoreflect.EnumDescriptor {
	return file_Game_BYDH_proto_enumTypes[0].Descriptor()
}

func (BYDH_GameMessageClassID) Type() protoreflect.EnumType {
	return &file_Game_BYDH_proto_enumTypes[0]
}

func (x BYDH_GameMessageClassID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *BYDH_GameMessageClassID) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = BYDH_GameMessageClassID(num)
	return nil
}

// Deprecated: Use BYDH_GameMessageClassID.Descriptor instead.
func (BYDH_GameMessageClassID) EnumDescriptor() ([]byte, []int) {
	return file_Game_BYDH_proto_rawDescGZIP(), []int{0}
}

type BYDH_GameStatus int32

const (
	BYDH_GameStatus_BYDHStatus_Wait     BYDH_GameStatus = 1 //等待遊戲開始
	BYDH_GameStatus_BYDHStatus_Gaming   BYDH_GameStatus = 2 //遊戲進行中
	BYDH_GameStatus_BYDHStatus_End      BYDH_GameStatus = 3 //遊戲結束
	BYDH_GameStatus_BYDHStatus_FishWave BYDH_GameStatus = 4 //浪潮來襲
)

// Enum value maps for BYDH_GameStatus.
var (
	BYDH_GameStatus_name = map[int32]string{
		1: "BYDHStatus_Wait",
		2: "BYDHStatus_Gaming",
		3: "BYDHStatus_End",
		4: "BYDHStatus_FishWave",
	}
	BYDH_GameStatus_value = map[string]int32{
		"BYDHStatus_Wait":     1,
		"BYDHStatus_Gaming":   2,
		"BYDHStatus_End":      3,
		"BYDHStatus_FishWave": 4,
	}
)

func (x BYDH_GameStatus) Enum() *BYDH_GameStatus {
	p := new(BYDH_GameStatus)
	*p = x
	return p
}

func (x BYDH_GameStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BYDH_GameStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_Game_BYDH_proto_enumTypes[1].Descriptor()
}

func (BYDH_GameStatus) Type() protoreflect.EnumType {
	return &file_Game_BYDH_proto_enumTypes[1]
}

func (x BYDH_GameStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *BYDH_GameStatus) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = BYDH_GameStatus(num)
	return nil
}

// Deprecated: Use BYDH_GameStatus.Descriptor instead.
func (BYDH_GameStatus) EnumDescriptor() ([]byte, []int) {
	return file_Game_BYDH_proto_rawDescGZIP(), []int{1}
}

//砲台類別
type BYDH_CannonType int32

const (
	BYDH_CannonType_BYDHCannon_Level1 BYDH_CannonType = 1
	BYDH_CannonType_BYDHCannon_Level2 BYDH_CannonType = 2
	BYDH_CannonType_BYDHCannon_Level3 BYDH_CannonType = 3
	BYDH_CannonType_BYDHCannon_Level4 BYDH_CannonType = 4
	BYDH_CannonType_BYDHCannon_Level5 BYDH_CannonType = 5
	BYDH_CannonType_BYDHCannon_Level6 BYDH_CannonType = 6
	BYDH_CannonType_BYDHCannon_Level7 BYDH_CannonType = 7
	BYDH_CannonType_BYDHCannon_Free   BYDH_CannonType = 8 //免費砲台
)

// Enum value maps for BYDH_CannonType.
var (
	BYDH_CannonType_name = map[int32]string{
		1: "BYDHCannon_Level1",
		2: "BYDHCannon_Level2",
		3: "BYDHCannon_Level3",
		4: "BYDHCannon_Level4",
		5: "BYDHCannon_Level5",
		6: "BYDHCannon_Level6",
		7: "BYDHCannon_Level7",
		8: "BYDHCannon_Free",
	}
	BYDH_CannonType_value = map[string]int32{
		"BYDHCannon_Level1": 1,
		"BYDHCannon_Level2": 2,
		"BYDHCannon_Level3": 3,
		"BYDHCannon_Level4": 4,
		"BYDHCannon_Level5": 5,
		"BYDHCannon_Level6": 6,
		"BYDHCannon_Level7": 7,
		"BYDHCannon_Free":   8,
	}
)

func (x BYDH_CannonType) Enum() *BYDH_CannonType {
	p := new(BYDH_CannonType)
	*p = x
	return p
}

func (x BYDH_CannonType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BYDH_CannonType) Descriptor() protoreflect.EnumDescriptor {
	return file_Game_BYDH_proto_enumTypes[2].Descriptor()
}

func (BYDH_CannonType) Type() protoreflect.EnumType {
	return &file_Game_BYDH_proto_enumTypes[2]
}

func (x BYDH_CannonType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *BYDH_CannonType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = BYDH_CannonType(num)
	return nil
}

// Deprecated: Use BYDH_CannonType.Descriptor instead.
func (BYDH_CannonType) EnumDescriptor() ([]byte, []int) {
	return file_Game_BYDH_proto_rawDescGZIP(), []int{2}
}

//子彈類別
type BYDH_BulletType int32

const (
	BYDH_BulletType_BYDHBullet_Level1 BYDH_BulletType = 1
	BYDH_BulletType_BYDHBullet_Level2 BYDH_BulletType = 2
	BYDH_BulletType_BYDHBullet_Level3 BYDH_BulletType = 3
	BYDH_BulletType_BYDHBullet_Level4 BYDH_BulletType = 4
	BYDH_BulletType_BYDHBullet_Level5 BYDH_BulletType = 5
	BYDH_BulletType_BYDHBullet_Level6 BYDH_BulletType = 6
	BYDH_BulletType_BYDHBullet_Level7 BYDH_BulletType = 7
	BYDH_BulletType_BYDHBullet_Free   BYDH_BulletType = 8 //免費子彈
)

// Enum value maps for BYDH_BulletType.
var (
	BYDH_BulletType_name = map[int32]string{
		1: "BYDHBullet_Level1",
		2: "BYDHBullet_Level2",
		3: "BYDHBullet_Level3",
		4: "BYDHBullet_Level4",
		5: "BYDHBullet_Level5",
		6: "BYDHBullet_Level6",
		7: "BYDHBullet_Level7",
		8: "BYDHBullet_Free",
	}
	BYDH_BulletType_value = map[string]int32{
		"BYDHBullet_Level1": 1,
		"BYDHBullet_Level2": 2,
		"BYDHBullet_Level3": 3,
		"BYDHBullet_Level4": 4,
		"BYDHBullet_Level5": 5,
		"BYDHBullet_Level6": 6,
		"BYDHBullet_Level7": 7,
		"BYDHBullet_Free":   8,
	}
)

func (x BYDH_BulletType) Enum() *BYDH_BulletType {
	p := new(BYDH_BulletType)
	*p = x
	return p
}

func (x BYDH_BulletType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BYDH_BulletType) Descriptor() protoreflect.EnumDescriptor {
	return file_Game_BYDH_proto_enumTypes[3].Descriptor()
}

func (BYDH_BulletType) Type() protoreflect.EnumType {
	return &file_Game_BYDH_proto_enumTypes[3]
}

func (x BYDH_BulletType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *BYDH_BulletType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = BYDH_BulletType(num)
	return nil
}

// Deprecated: Use BYDH_BulletType.Descriptor instead.
func (BYDH_BulletType) EnumDescriptor() ([]byte, []int) {
	return file_Game_BYDH_proto_rawDescGZIP(), []int{3}
}

//子彈模式
type BYDH_BulletMode int32

const (
	BYDH_BulletMode_BYDHBoom_Normal BYDH_BulletMode = 1
	BYDH_BulletMode_BYDHBoom_Auto   BYDH_BulletMode = 2
	BYDH_BulletMode_BYDHBoom_Aim    BYDH_BulletMode = 3
)

// Enum value maps for BYDH_BulletMode.
var (
	BYDH_BulletMode_name = map[int32]string{
		1: "BYDHBoom_Normal",
		2: "BYDHBoom_Auto",
		3: "BYDHBoom_Aim",
	}
	BYDH_BulletMode_value = map[string]int32{
		"BYDHBoom_Normal": 1,
		"BYDHBoom_Auto":   2,
		"BYDHBoom_Aim":    3,
	}
)

func (x BYDH_BulletMode) Enum() *BYDH_BulletMode {
	p := new(BYDH_BulletMode)
	*p = x
	return p
}

func (x BYDH_BulletMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BYDH_BulletMode) Descriptor() protoreflect.EnumDescriptor {
	return file_Game_BYDH_proto_enumTypes[4].Descriptor()
}

func (BYDH_BulletMode) Type() protoreflect.EnumType {
	return &file_Game_BYDH_proto_enumTypes[4]
}

func (x BYDH_BulletMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *BYDH_BulletMode) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = BYDH_BulletMode(num)
	return nil
}

// Deprecated: Use BYDH_BulletMode.Descriptor instead.
func (BYDH_BulletMode) EnumDescriptor() ([]byte, []int) {
	return file_Game_BYDH_proto_rawDescGZIP(), []int{4}
}

//魚等級
type BYDH_FishLevel int32

const (
	BYDH_FishLevel_BYDHFishL_Level1     BYDH_FishLevel = 1
	BYDH_FishLevel_BYDHFishL_Level2     BYDH_FishLevel = 2
	BYDH_FishLevel_BYDHFishL_Level3     BYDH_FishLevel = 3
	BYDH_FishLevel_BYDHFishL_Level4     BYDH_FishLevel = 4
	BYDH_FishLevel_BYDHFishL_Lantern    BYDH_FishLevel = 5 //燈籠魚
	BYDH_FishLevel_BYDHFishL_Whale      BYDH_FishLevel = 6 //鯨魚
	BYDH_FishLevel_BYDHFishL_Pearl      BYDH_FishLevel = 7 //珍珠
	BYDH_FishLevel_BYDHFishL_Roulette   BYDH_FishLevel = 8 //輪盤
	BYDH_FishLevel_BYDHFishL_FreeBullet BYDH_FishLevel = 9 //免費子彈
)

// Enum value maps for BYDH_FishLevel.
var (
	BYDH_FishLevel_name = map[int32]string{
		1: "BYDHFishL_Level1",
		2: "BYDHFishL_Level2",
		3: "BYDHFishL_Level3",
		4: "BYDHFishL_Level4",
		5: "BYDHFishL_Lantern",
		6: "BYDHFishL_Whale",
		7: "BYDHFishL_Pearl",
		8: "BYDHFishL_Roulette",
		9: "BYDHFishL_FreeBullet",
	}
	BYDH_FishLevel_value = map[string]int32{
		"BYDHFishL_Level1":     1,
		"BYDHFishL_Level2":     2,
		"BYDHFishL_Level3":     3,
		"BYDHFishL_Level4":     4,
		"BYDHFishL_Lantern":    5,
		"BYDHFishL_Whale":      6,
		"BYDHFishL_Pearl":      7,
		"BYDHFishL_Roulette":   8,
		"BYDHFishL_FreeBullet": 9,
	}
)

func (x BYDH_FishLevel) Enum() *BYDH_FishLevel {
	p := new(BYDH_FishLevel)
	*p = x
	return p
}

func (x BYDH_FishLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BYDH_FishLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_Game_BYDH_proto_enumTypes[5].Descriptor()
}

func (BYDH_FishLevel) Type() protoreflect.EnumType {
	return &file_Game_BYDH_proto_enumTypes[5]
}

func (x BYDH_FishLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *BYDH_FishLevel) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = BYDH_FishLevel(num)
	return nil
}

// Deprecated: Use BYDH_FishLevel.Descriptor instead.
func (BYDH_FishLevel) EnumDescriptor() ([]byte, []int) {
	return file_Game_BYDH_proto_rawDescGZIP(), []int{5}
}

//魚出現方向
type BYDH_Direction int32

const (
	BYDH_Direction_BYDHDirection_Left  BYDH_Direction = 1 //左
	BYDH_Direction_BYDHDirection_Right BYDH_Direction = 2 //右
)

// Enum value maps for BYDH_Direction.
var (
	BYDH_Direction_name = map[int32]string{
		1: "BYDHDirection_Left",
		2: "BYDHDirection_Right",
	}
	BYDH_Direction_value = map[string]int32{
		"BYDHDirection_Left":  1,
		"BYDHDirection_Right": 2,
	}
)

func (x BYDH_Direction) Enum() *BYDH_Direction {
	p := new(BYDH_Direction)
	*p = x
	return p
}

func (x BYDH_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BYDH_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_Game_BYDH_proto_enumTypes[6].Descriptor()
}

func (BYDH_Direction) Type() protoreflect.EnumType {
	return &file_Game_BYDH_proto_enumTypes[6]
}

func (x BYDH_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *BYDH_Direction) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = BYDH_Direction(num)
	return nil
}

// Deprecated: Use BYDH_Direction.Descriptor instead.
func (BYDH_Direction) EnumDescriptor() ([]byte, []int) {
	return file_Game_BYDH_proto_rawDescGZIP(), []int{6}
}

//魚類別
type BYDH_FishType int32

const (
	BYDH_FishType_BYDHFishType_MiniYellowCroaker BYDH_FishType = 1   //小黃魚
	BYDH_FishType_BYDHFishType_YellowLittleFish  BYDH_FishType = 2   //黃魚
	BYDH_FishType_BYDHFishType_GreenLittleFish   BYDH_FishType = 3   //小綠魚
	BYDH_FishType_BYDHFishType_YellowBlueFish    BYDH_FishType = 4   //黃藍魚
	BYDH_FishType_BYDHFishType_SockeyeSalmon     BYDH_FishType = 5   //紅鮭魚
	BYDH_FishType_BYDHFishType_RedLittleFish     BYDH_FishType = 6   //小紅魚
	BYDH_FishType_BYDHFishType_LittleRedfish     BYDH_FishType = 7   //小紅魚-2
	BYDH_FishType_BYDHFishType_Joker             BYDH_FishType = 8   //小丑魚
	BYDH_FishType_BYDHFishType_Star              BYDH_FishType = 9   //海星
	BYDH_FishType_BYDHFishType_Guppy             BYDH_FishType = 10  //孔雀魚
	BYDH_FishType_BYDHFishType_Flounder          BYDH_FishType = 11  //比目魚
	BYDH_FishType_BYDHFishType_Grouper           BYDH_FishType = 12  //石斑魚
	BYDH_FishType_BYDHFishType_Stingray          BYDH_FishType = 13  //黃貂魚
	BYDH_FishType_BYDHFishType_PufferFish        BYDH_FishType = 14  //河豚魚
	BYDH_FishType_BYDHFishType_JellyFish         BYDH_FishType = 15  //海蜇
	BYDH_FishType_BYDHFishType_Turtle            BYDH_FishType = 16  //烏龜
	BYDH_FishType_BYDHFishType_Swordfish         BYDH_FishType = 17  //旗魚
	BYDH_FishType_BYDHFishType_Lionfish          BYDH_FishType = 18  //獅子魚
	BYDH_FishType_BYDHFishType_GrayShark         BYDH_FishType = 19  //灰鯊
	BYDH_FishType_BYDHFishType_GoldShark         BYDH_FishType = 20  //金鯊
	BYDH_FishType_BYDHFishType_Lantern           BYDH_FishType = 21  //燈籠
	BYDH_FishType_BYDHFishType_Whale             BYDH_FishType = 22  //鯨魚
	BYDH_FishType_BYDHFishType_Pearl             BYDH_FishType = 23  //珍珠魚(紅包遊戲)
	BYDH_FishType_BYDHFishType_Roulette          BYDH_FishType = 24  //寶箱魚(輪盤遊戲)
	BYDH_FishType_BYDHFishType_FreeBullet        BYDH_FishType = 25  //免費子彈(魚)
	BYDH_FishType_BYDHFishType_JackPot_Pearl     BYDH_FishType = 100 //jackPot魚種
	BYDH_FishType_BYDHFishType_FreeBullet_Return BYDH_FishType = 101 //免費子彈返還
)

// Enum value maps for BYDH_FishType.
var (
	BYDH_FishType_name = map[int32]string{
		1:   "BYDHFishType_MiniYellowCroaker",
		2:   "BYDHFishType_YellowLittleFish",
		3:   "BYDHFishType_GreenLittleFish",
		4:   "BYDHFishType_YellowBlueFish",
		5:   "BYDHFishType_SockeyeSalmon",
		6:   "BYDHFishType_RedLittleFish",
		7:   "BYDHFishType_LittleRedfish",
		8:   "BYDHFishType_Joker",
		9:   "BYDHFishType_Star",
		10:  "BYDHFishType_Guppy",
		11:  "BYDHFishType_Flounder",
		12:  "BYDHFishType_Grouper",
		13:  "BYDHFishType_Stingray",
		14:  "BYDHFishType_PufferFish",
		15:  "BYDHFishType_JellyFish",
		16:  "BYDHFishType_Turtle",
		17:  "BYDHFishType_Swordfish",
		18:  "BYDHFishType_Lionfish",
		19:  "BYDHFishType_GrayShark",
		20:  "BYDHFishType_GoldShark",
		21:  "BYDHFishType_Lantern",
		22:  "BYDHFishType_Whale",
		23:  "BYDHFishType_Pearl",
		24:  "BYDHFishType_Roulette",
		25:  "BYDHFishType_FreeBullet",
		100: "BYDHFishType_JackPot_Pearl",
		101: "BYDHFishType_FreeBullet_Return",
	}
	BYDH_FishType_value = map[string]int32{
		"BYDHFishType_MiniYellowCroaker": 1,
		"BYDHFishType_YellowLittleFish":  2,
		"BYDHFishType_GreenLittleFish":   3,
		"BYDHFishType_YellowBlueFish":    4,
		"BYDHFishType_SockeyeSalmon":     5,
		"BYDHFishType_RedLittleFish":     6,
		"BYDHFishType_LittleRedfish":     7,
		"BYDHFishType_Joker":             8,
		"BYDHFishType_Star":              9,
		"BYDHFishType_Guppy":             10,
		"BYDHFishType_Flounder":          11,
		"BYDHFishType_Grouper":           12,
		"BYDHFishType_Stingray":          13,
		"BYDHFishType_PufferFish":        14,
		"BYDHFishType_JellyFish":         15,
		"BYDHFishType_Turtle":            16,
		"BYDHFishType_Swordfish":         17,
		"BYDHFishType_Lionfish":          18,
		"BYDHFishType_GrayShark":         19,
		"BYDHFishType_GoldShark":         20,
		"BYDHFishType_Lantern":           21,
		"BYDHFishType_Whale":             22,
		"BYDHFishType_Pearl":             23,
		"BYDHFishType_Roulette":          24,
		"BYDHFishType_FreeBullet":        25,
		"BYDHFishType_JackPot_Pearl":     100,
		"BYDHFishType_FreeBullet_Return": 101,
	}
)

func (x BYDH_FishType) Enum() *BYDH_FishType {
	p := new(BYDH_FishType)
	*p = x
	return p
}

func (x BYDH_FishType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BYDH_FishType) Descriptor() protoreflect.EnumDescriptor {
	return file_Game_BYDH_proto_enumTypes[7].Descriptor()
}

func (BYDH_FishType) Type() protoreflect.EnumType {
	return &file_Game_BYDH_proto_enumTypes[7]
}

func (x BYDH_FishType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *BYDH_FishType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = BYDH_FishType(num)
	return nil
}

// Deprecated: Use BYDH_FishType.Descriptor instead.
func (BYDH_FishType) EnumDescriptor() ([]byte, []int) {
	return file_Game_BYDH_proto_rawDescGZIP(), []int{7}
}

//特別場景提醒
type BYDH_SpecialSceneType int32

const (
	BYDH_SpecialSceneType_BYDH_Special_Lantern    BYDH_SpecialSceneType = 1 //燈籠
	BYDH_SpecialSceneType_BYDH_Special_Whale      BYDH_SpecialSceneType = 2 //鯨魚
	BYDH_SpecialSceneType_BYDH_Special_Pearl      BYDH_SpecialSceneType = 3 //珍珠
	BYDH_SpecialSceneType_BYDH_Special_Roulette   BYDH_SpecialSceneType = 4 //輪盤
	BYDH_SpecialSceneType_BYDH_Special_FreeBullet BYDH_SpecialSceneType = 5 //免費子彈(魚)
)

// Enum value maps for BYDH_SpecialSceneType.
var (
	BYDH_SpecialSceneType_name = map[int32]string{
		1: "BYDH_Special_Lantern",
		2: "BYDH_Special_Whale",
		3: "BYDH_Special_Pearl",
		4: "BYDH_Special_Roulette",
		5: "BYDH_Special_FreeBullet",
	}
	BYDH_SpecialSceneType_value = map[string]int32{
		"BYDH_Special_Lantern":    1,
		"BYDH_Special_Whale":      2,
		"BYDH_Special_Pearl":      3,
		"BYDH_Special_Roulette":   4,
		"BYDH_Special_FreeBullet": 5,
	}
)

func (x BYDH_SpecialSceneType) Enum() *BYDH_SpecialSceneType {
	p := new(BYDH_SpecialSceneType)
	*p = x
	return p
}

func (x BYDH_SpecialSceneType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BYDH_SpecialSceneType) Descriptor() protoreflect.EnumDescriptor {
	return file_Game_BYDH_proto_enumTypes[8].Descriptor()
}

func (BYDH_SpecialSceneType) Type() protoreflect.EnumType {
	return &file_Game_BYDH_proto_enumTypes[8]
}

func (x BYDH_SpecialSceneType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *BYDH_SpecialSceneType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = BYDH_SpecialSceneType(num)
	return nil
}

// Deprecated: Use BYDH_SpecialSceneType.Descriptor instead.
func (BYDH_SpecialSceneType) EnumDescriptor() ([]byte, []int) {
	return file_Game_BYDH_proto_rawDescGZIP(), []int{8}
}

type BYDH_BackgroundType int32

const (
	BYDH_BackgroundType_BYDH_Background_PirateShip BYDH_BackgroundType = 1
	BYDH_BackgroundType_BYDH_Background_Shoal      BYDH_BackgroundType = 2
	BYDH_BackgroundType_BYDH_Background_SeaTemple  BYDH_BackgroundType = 3
)

// Enum value maps for BYDH_BackgroundType.
var (
	BYDH_BackgroundType_name = map[int32]string{
		1: "BYDH_Background_PirateShip",
		2: "BYDH_Background_Shoal",
		3: "BYDH_Background_SeaTemple",
	}
	BYDH_BackgroundType_value = map[string]int32{
		"BYDH_Background_PirateShip": 1,
		"BYDH_Background_Shoal":      2,
		"BYDH_Background_SeaTemple":  3,
	}
)

func (x BYDH_BackgroundType) Enum() *BYDH_BackgroundType {
	p := new(BYDH_BackgroundType)
	*p = x
	return p
}

func (x BYDH_BackgroundType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BYDH_BackgroundType) Descriptor() protoreflect.EnumDescriptor {
	return file_Game_BYDH_proto_enumTypes[9].Descriptor()
}

func (BYDH_BackgroundType) Type() protoreflect.EnumType {
	return &file_Game_BYDH_proto_enumTypes[9]
}

func (x BYDH_BackgroundType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *BYDH_BackgroundType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = BYDH_BackgroundType(num)
	return nil
}

// Deprecated: Use BYDH_BackgroundType.Descriptor instead.
func (BYDH_BackgroundType) EnumDescriptor() ([]byte, []int) {
	return file_Game_BYDH_proto_rawDescGZIP(), []int{9}
}

var File_Game_BYDH_proto protoreflect.FileDescriptor

var file_Game_BYDH_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x47, 0x61, 0x6d, 0x65, 0x5f, 0x42, 0x59, 0x44, 0x48, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x08, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2a, 0xe7, 0x06, 0x0a, 0x17,
	0x42, 0x59, 0x44, 0x48, 0x5f, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x44, 0x12, 0x0f, 0x0a, 0x0a, 0x42, 0x59, 0x44, 0x48, 0x47,
	0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x10, 0x91, 0x4e, 0x12, 0x14, 0x0a, 0x0f, 0x42, 0x59, 0x44, 0x48,
	0x47, 0x61, 0x6d, 0x65, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x44, 0x10, 0x92, 0x4e, 0x12, 0x16,
	0x0a, 0x11, 0x42, 0x59, 0x44, 0x48, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x49, 0x44, 0x10, 0x93, 0x4e, 0x12, 0x13, 0x0a, 0x0e, 0x42, 0x59, 0x44, 0x48, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10, 0x94, 0x4e, 0x12, 0x18, 0x0a, 0x13, 0x42,
	0x59, 0x44, 0x48, 0x46, 0x69, 0x73, 0x68, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74,
	0x49, 0x44, 0x10, 0x95, 0x4e, 0x12, 0x1e, 0x0a, 0x19, 0x42, 0x59, 0x44, 0x48, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x46, 0x69, 0x73, 0x68, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74,
	0x49, 0x44, 0x10, 0x96, 0x4e, 0x12, 0x20, 0x0a, 0x1b, 0x42, 0x59, 0x44, 0x48, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x42, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61,
	0x73, 0x74, 0x49, 0x44, 0x10, 0x97, 0x4e, 0x12, 0x17, 0x0a, 0x12, 0x42, 0x59, 0x44, 0x48, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x44, 0x10, 0x98, 0x4e,
	0x12, 0x14, 0x0a, 0x0f, 0x42, 0x59, 0x44, 0x48, 0x57, 0x61, 0x76, 0x65, 0x53, 0x63, 0x65, 0x6e,
	0x65, 0x49, 0x44, 0x10, 0x99, 0x4e, 0x12, 0x16, 0x0a, 0x11, 0x42, 0x59, 0x44, 0x48, 0x53, 0x68,
	0x6f, 0x6f, 0x74, 0x42, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x44, 0x10, 0x9a, 0x4e, 0x12, 0x19,
	0x0a, 0x14, 0x42, 0x59, 0x44, 0x48, 0x53, 0x68, 0x6f, 0x6f, 0x74, 0x42, 0x75, 0x6c, 0x6c, 0x65,
	0x74, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10, 0x9b, 0x4e, 0x12, 0x1a, 0x0a, 0x15, 0x42, 0x59, 0x44,
	0x48, 0x42, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74,
	0x49, 0x44, 0x10, 0x9c, 0x4e, 0x12, 0x0f, 0x0a, 0x0a, 0x42, 0x59, 0x44, 0x48, 0x42, 0x6f, 0x6f,
	0x6d, 0x49, 0x44, 0x10, 0x9d, 0x4e, 0x12, 0x12, 0x0a, 0x0d, 0x42, 0x59, 0x44, 0x48, 0x42, 0x6f,
	0x6f, 0x6d, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10, 0x9e, 0x4e, 0x12, 0x18, 0x0a, 0x13, 0x42, 0x59,
	0x44, 0x48, 0x42, 0x6f, 0x6f, 0x6d, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x49,
	0x44, 0x10, 0x9f, 0x4e, 0x12, 0x1d, 0x0a, 0x18, 0x42, 0x59, 0x44, 0x48, 0x43, 0x61, 0x74, 0x63,
	0x68, 0x46, 0x69, 0x73, 0x68, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x49, 0x44,
	0x10, 0xa0, 0x4e, 0x12, 0x11, 0x0a, 0x0c, 0x42, 0x59, 0x44, 0x48, 0x43, 0x61, 0x6e, 0x6e, 0x6f,
	0x6e, 0x49, 0x44, 0x10, 0xa1, 0x4e, 0x12, 0x14, 0x0a, 0x0f, 0x42, 0x59, 0x44, 0x48, 0x43, 0x61,
	0x6e, 0x6e, 0x6f, 0x6e, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10, 0xa2, 0x4e, 0x12, 0x1a, 0x0a, 0x15,
	0x42, 0x59, 0x44, 0x48, 0x43, 0x61, 0x6e, 0x6e, 0x6f, 0x6e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63,
	0x61, 0x73, 0x74, 0x49, 0x44, 0x10, 0xa3, 0x4e, 0x12, 0x18, 0x0a, 0x13, 0x42, 0x59, 0x44, 0x48,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5a, 0x68, 0x65, 0x6e, 0x5a, 0x68, 0x75, 0x49, 0x44, 0x10,
	0xa4, 0x4e, 0x12, 0x16, 0x0a, 0x11, 0x42, 0x59, 0x44, 0x48, 0x5a, 0x68, 0x65, 0x6e, 0x5a, 0x68,
	0x75, 0x50, 0x69, 0x63, 0x6b, 0x49, 0x44, 0x10, 0xa5, 0x4e, 0x12, 0x19, 0x0a, 0x14, 0x42, 0x59,
	0x44, 0x48, 0x5a, 0x68, 0x65, 0x6e, 0x5a, 0x68, 0x75, 0x50, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x74,
	0x49, 0x44, 0x10, 0xa6, 0x4e, 0x12, 0x21, 0x0a, 0x1c, 0x42, 0x59, 0x44, 0x48, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x5a, 0x68, 0x65, 0x6e, 0x5a, 0x68, 0x75, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43,
	0x61, 0x73, 0x74, 0x49, 0x44, 0x10, 0xa7, 0x4e, 0x12, 0x19, 0x0a, 0x14, 0x42, 0x59, 0x44, 0x48,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x42, 0x61, 0x6f, 0x58, 0x69, 0x61, 0x6e, 0x67, 0x49, 0x44,
	0x10, 0xa8, 0x4e, 0x12, 0x17, 0x0a, 0x12, 0x42, 0x59, 0x44, 0x48, 0x42, 0x61, 0x6f, 0x58, 0x69,
	0x61, 0x6e, 0x67, 0x50, 0x69, 0x63, 0x6b, 0x49, 0x44, 0x10, 0xa9, 0x4e, 0x12, 0x1a, 0x0a, 0x15,
	0x42, 0x59, 0x44, 0x48, 0x42, 0x61, 0x6f, 0x58, 0x69, 0x61, 0x6e, 0x67, 0x50, 0x69, 0x63, 0x6b,
	0x52, 0x65, 0x74, 0x49, 0x44, 0x10, 0xaa, 0x4e, 0x12, 0x22, 0x0a, 0x1d, 0x42, 0x59, 0x44, 0x48,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x42, 0x61, 0x6f, 0x58, 0x69, 0x61, 0x6e, 0x67, 0x42, 0x72,
	0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x49, 0x44, 0x10, 0xab, 0x4e, 0x12, 0x1b, 0x0a, 0x16,
	0x42, 0x59, 0x44, 0x48, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x46, 0x72, 0x65, 0x65, 0x42, 0x75,
	0x6c, 0x6c, 0x65, 0x74, 0x49, 0x44, 0x10, 0xac, 0x4e, 0x12, 0x19, 0x0a, 0x14, 0x42, 0x59, 0x44,
	0x48, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x49,
	0x44, 0x10, 0xad, 0x4e, 0x12, 0x1c, 0x0a, 0x17, 0x42, 0x59, 0x44, 0x48, 0x53, 0x79, 0x6e, 0x63,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10,
	0xae, 0x4e, 0x12, 0x13, 0x0a, 0x0e, 0x42, 0x59, 0x44, 0x48, 0x52, 0x54, 0x50, 0x44, 0x65, 0x62,
	0x75, 0x67, 0x49, 0x44, 0x10, 0xaf, 0x4e, 0x12, 0x15, 0x0a, 0x10, 0x42, 0x59, 0x44, 0x48, 0x52,
	0x6f, 0x62, 0x6f, 0x74, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x44, 0x10, 0xb0, 0x4e, 0x12, 0x15,
	0x0a, 0x10, 0x42, 0x59, 0x44, 0x48, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x4c, 0x65, 0x61, 0x76, 0x65,
	0x49, 0x44, 0x10, 0xb1, 0x4e, 0x2a, 0x6a, 0x0a, 0x0f, 0x42, 0x59, 0x44, 0x48, 0x5f, 0x47, 0x61,
	0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x13, 0x0a, 0x0f, 0x42, 0x59, 0x44, 0x48,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x57, 0x61, 0x69, 0x74, 0x10, 0x01, 0x12, 0x15, 0x0a,
	0x11, 0x42, 0x59, 0x44, 0x48, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x47, 0x61, 0x6d, 0x69,
	0x6e, 0x67, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x42, 0x59, 0x44, 0x48, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x45, 0x6e, 0x64, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x42, 0x59, 0x44, 0x48,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x46, 0x69, 0x73, 0x68, 0x57, 0x61, 0x76, 0x65, 0x10,
	0x04, 0x2a, 0xc7, 0x01, 0x0a, 0x0f, 0x42, 0x59, 0x44, 0x48, 0x5f, 0x43, 0x61, 0x6e, 0x6e, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x42, 0x59, 0x44, 0x48, 0x43, 0x61, 0x6e,
	0x6e, 0x6f, 0x6e, 0x5f, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11,
	0x42, 0x59, 0x44, 0x48, 0x43, 0x61, 0x6e, 0x6e, 0x6f, 0x6e, 0x5f, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x32, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x42, 0x59, 0x44, 0x48, 0x43, 0x61, 0x6e, 0x6e, 0x6f,
	0x6e, 0x5f, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x33, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x42, 0x59,
	0x44, 0x48, 0x43, 0x61, 0x6e, 0x6e, 0x6f, 0x6e, 0x5f, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x34, 0x10,
	0x04, 0x12, 0x15, 0x0a, 0x11, 0x42, 0x59, 0x44, 0x48, 0x43, 0x61, 0x6e, 0x6e, 0x6f, 0x6e, 0x5f,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x35, 0x10, 0x05, 0x12, 0x15, 0x0a, 0x11, 0x42, 0x59, 0x44, 0x48,
	0x43, 0x61, 0x6e, 0x6e, 0x6f, 0x6e, 0x5f, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x36, 0x10, 0x06, 0x12,
	0x15, 0x0a, 0x11, 0x42, 0x59, 0x44, 0x48, 0x43, 0x61, 0x6e, 0x6e, 0x6f, 0x6e, 0x5f, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x37, 0x10, 0x07, 0x12, 0x13, 0x0a, 0x0f, 0x42, 0x59, 0x44, 0x48, 0x43, 0x61,
	0x6e, 0x6e, 0x6f, 0x6e, 0x5f, 0x46, 0x72, 0x65, 0x65, 0x10, 0x08, 0x2a, 0xc7, 0x01, 0x0a, 0x0f,
	0x42, 0x59, 0x44, 0x48, 0x5f, 0x42, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x15, 0x0a, 0x11, 0x42, 0x59, 0x44, 0x48, 0x42, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x31, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x42, 0x59, 0x44, 0x48, 0x42, 0x75,
	0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x32, 0x10, 0x02, 0x12, 0x15, 0x0a,
	0x11, 0x42, 0x59, 0x44, 0x48, 0x42, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x33, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x42, 0x59, 0x44, 0x48, 0x42, 0x75, 0x6c, 0x6c,
	0x65, 0x74, 0x5f, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x34, 0x10, 0x04, 0x12, 0x15, 0x0a, 0x11, 0x42,
	0x59, 0x44, 0x48, 0x42, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x35,
	0x10, 0x05, 0x12, 0x15, 0x0a, 0x11, 0x42, 0x59, 0x44, 0x48, 0x42, 0x75, 0x6c, 0x6c, 0x65, 0x74,
	0x5f, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x36, 0x10, 0x06, 0x12, 0x15, 0x0a, 0x11, 0x42, 0x59, 0x44,
	0x48, 0x42, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x37, 0x10, 0x07,
	0x12, 0x13, 0x0a, 0x0f, 0x42, 0x59, 0x44, 0x48, 0x42, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x46,
	0x72, 0x65, 0x65, 0x10, 0x08, 0x2a, 0x4b, 0x0a, 0x0f, 0x42, 0x59, 0x44, 0x48, 0x5f, 0x42, 0x75,
	0x6c, 0x6c, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x42, 0x59, 0x44, 0x48,
	0x42, 0x6f, 0x6f, 0x6d, 0x5f, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x10, 0x01, 0x12, 0x11, 0x0a,
	0x0d, 0x42, 0x59, 0x44, 0x48, 0x42, 0x6f, 0x6f, 0x6d, 0x5f, 0x41, 0x75, 0x74, 0x6f, 0x10, 0x02,
	0x12, 0x10, 0x0a, 0x0c, 0x42, 0x59, 0x44, 0x48, 0x42, 0x6f, 0x6f, 0x6d, 0x5f, 0x41, 0x69, 0x6d,
	0x10, 0x03, 0x2a, 0xdb, 0x01, 0x0a, 0x0e, 0x42, 0x59, 0x44, 0x48, 0x5f, 0x46, 0x69, 0x73, 0x68,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x10, 0x42, 0x59, 0x44, 0x48, 0x46, 0x69, 0x73,
	0x68, 0x4c, 0x5f, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x42,
	0x59, 0x44, 0x48, 0x46, 0x69, 0x73, 0x68, 0x4c, 0x5f, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x32, 0x10,
	0x02, 0x12, 0x14, 0x0a, 0x10, 0x42, 0x59, 0x44, 0x48, 0x46, 0x69, 0x73, 0x68, 0x4c, 0x5f, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x33, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x42, 0x59, 0x44, 0x48, 0x46,
	0x69, 0x73, 0x68, 0x4c, 0x5f, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x34, 0x10, 0x04, 0x12, 0x15, 0x0a,
	0x11, 0x42, 0x59, 0x44, 0x48, 0x46, 0x69, 0x73, 0x68, 0x4c, 0x5f, 0x4c, 0x61, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x10, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x42, 0x59, 0x44, 0x48, 0x46, 0x69, 0x73, 0x68,
	0x4c, 0x5f, 0x57, 0x68, 0x61, 0x6c, 0x65, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x42, 0x59, 0x44,
	0x48, 0x46, 0x69, 0x73, 0x68, 0x4c, 0x5f, 0x50, 0x65, 0x61, 0x72, 0x6c, 0x10, 0x07, 0x12, 0x16,
	0x0a, 0x12, 0x42, 0x59, 0x44, 0x48, 0x46, 0x69, 0x73, 0x68, 0x4c, 0x5f, 0x52, 0x6f, 0x75, 0x6c,
	0x65, 0x74, 0x74, 0x65, 0x10, 0x08, 0x12, 0x18, 0x0a, 0x14, 0x42, 0x59, 0x44, 0x48, 0x46, 0x69,
	0x73, 0x68, 0x4c, 0x5f, 0x46, 0x72, 0x65, 0x65, 0x42, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x10, 0x09,
	0x2a, 0x41, 0x0a, 0x0e, 0x42, 0x59, 0x44, 0x48, 0x5f, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x12, 0x42, 0x59, 0x44, 0x48, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x4c, 0x65, 0x66, 0x74, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x42, 0x59,
	0x44, 0x48, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x52, 0x69, 0x67, 0x68,
	0x74, 0x10, 0x02, 0x2a, 0x97, 0x06, 0x0a, 0x0d, 0x42, 0x59, 0x44, 0x48, 0x5f, 0x46, 0x69, 0x73,
	0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x1e, 0x42, 0x59, 0x44, 0x48, 0x46, 0x69, 0x73,
	0x68, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4d, 0x69, 0x6e, 0x69, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77,
	0x43, 0x72, 0x6f, 0x61, 0x6b, 0x65, 0x72, 0x10, 0x01, 0x12, 0x21, 0x0a, 0x1d, 0x42, 0x59, 0x44,
	0x48, 0x46, 0x69, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77,
	0x4c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x46, 0x69, 0x73, 0x68, 0x10, 0x02, 0x12, 0x20, 0x0a, 0x1c,
	0x42, 0x59, 0x44, 0x48, 0x46, 0x69, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x47, 0x72, 0x65,
	0x65, 0x6e, 0x4c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x46, 0x69, 0x73, 0x68, 0x10, 0x03, 0x12, 0x1f,
	0x0a, 0x1b, 0x42, 0x59, 0x44, 0x48, 0x46, 0x69, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x59,
	0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x42, 0x6c, 0x75, 0x65, 0x46, 0x69, 0x73, 0x68, 0x10, 0x04, 0x12,
	0x1e, 0x0a, 0x1a, 0x42, 0x59, 0x44, 0x48, 0x46, 0x69, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x5f,
	0x53, 0x6f, 0x63, 0x6b, 0x65, 0x79, 0x65, 0x53, 0x61, 0x6c, 0x6d, 0x6f, 0x6e, 0x10, 0x05, 0x12,
	0x1e, 0x0a, 0x1a, 0x42, 0x59, 0x44, 0x48, 0x46, 0x69, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x5f,
	0x52, 0x65, 0x64, 0x4c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x46, 0x69, 0x73, 0x68, 0x10, 0x06, 0x12,
	0x1e, 0x0a, 0x1a, 0x42, 0x59, 0x44, 0x48, 0x46, 0x69, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x5f,
	0x4c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x64, 0x66, 0x69, 0x73, 0x68, 0x10, 0x07, 0x12,
	0x16, 0x0a, 0x12, 0x42, 0x59, 0x44, 0x48, 0x46, 0x69, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x5f,
	0x4a, 0x6f, 0x6b, 0x65, 0x72, 0x10, 0x08, 0x12, 0x15, 0x0a, 0x11, 0x42, 0x59, 0x44, 0x48, 0x46,
	0x69, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x53, 0x74, 0x61, 0x72, 0x10, 0x09, 0x12, 0x16,
	0x0a, 0x12, 0x42, 0x59, 0x44, 0x48, 0x46, 0x69, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x47,
	0x75, 0x70, 0x70, 0x79, 0x10, 0x0a, 0x12, 0x19, 0x0a, 0x15, 0x42, 0x59, 0x44, 0x48, 0x46, 0x69,
	0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x46, 0x6c, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x10,
	0x0b, 0x12, 0x18, 0x0a, 0x14, 0x42, 0x59, 0x44, 0x48, 0x46, 0x69, 0x73, 0x68, 0x54, 0x79, 0x70,
	0x65, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x65, 0x72, 0x10, 0x0c, 0x12, 0x19, 0x0a, 0x15, 0x42,
	0x59, 0x44, 0x48, 0x46, 0x69, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x53, 0x74, 0x69, 0x6e,
	0x67, 0x72, 0x61, 0x79, 0x10, 0x0d, 0x12, 0x1b, 0x0a, 0x17, 0x42, 0x59, 0x44, 0x48, 0x46, 0x69,
	0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x50, 0x75, 0x66, 0x66, 0x65, 0x72, 0x46, 0x69, 0x73,
	0x68, 0x10, 0x0e, 0x12, 0x1a, 0x0a, 0x16, 0x42, 0x59, 0x44, 0x48, 0x46, 0x69, 0x73, 0x68, 0x54,
	0x79, 0x70, 0x65, 0x5f, 0x4a, 0x65, 0x6c, 0x6c, 0x79, 0x46, 0x69, 0x73, 0x68, 0x10, 0x0f, 0x12,
	0x17, 0x0a, 0x13, 0x42, 0x59, 0x44, 0x48, 0x46, 0x69, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x5f,
	0x54, 0x75, 0x72, 0x74, 0x6c, 0x65, 0x10, 0x10, 0x12, 0x1a, 0x0a, 0x16, 0x42, 0x59, 0x44, 0x48,
	0x46, 0x69, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x53, 0x77, 0x6f, 0x72, 0x64, 0x66, 0x69,
	0x73, 0x68, 0x10, 0x11, 0x12, 0x19, 0x0a, 0x15, 0x42, 0x59, 0x44, 0x48, 0x46, 0x69, 0x73, 0x68,
	0x54, 0x79, 0x70, 0x65, 0x5f, 0x4c, 0x69, 0x6f, 0x6e, 0x66, 0x69, 0x73, 0x68, 0x10, 0x12, 0x12,
	0x1a, 0x0a, 0x16, 0x42, 0x59, 0x44, 0x48, 0x46, 0x69, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x5f,
	0x47, 0x72, 0x61, 0x79, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x10, 0x13, 0x12, 0x1a, 0x0a, 0x16, 0x42,
	0x59, 0x44, 0x48, 0x46, 0x69, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x47, 0x6f, 0x6c, 0x64,
	0x53, 0x68, 0x61, 0x72, 0x6b, 0x10, 0x14, 0x12, 0x18, 0x0a, 0x14, 0x42, 0x59, 0x44, 0x48, 0x46,
	0x69, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4c, 0x61, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x10,
	0x15, 0x12, 0x16, 0x0a, 0x12, 0x42, 0x59, 0x44, 0x48, 0x46, 0x69, 0x73, 0x68, 0x54, 0x79, 0x70,
	0x65, 0x5f, 0x57, 0x68, 0x61, 0x6c, 0x65, 0x10, 0x16, 0x12, 0x16, 0x0a, 0x12, 0x42, 0x59, 0x44,
	0x48, 0x46, 0x69, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x50, 0x65, 0x61, 0x72, 0x6c, 0x10,
	0x17, 0x12, 0x19, 0x0a, 0x15, 0x42, 0x59, 0x44, 0x48, 0x46, 0x69, 0x73, 0x68, 0x54, 0x79, 0x70,
	0x65, 0x5f, 0x52, 0x6f, 0x75, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x10, 0x18, 0x12, 0x1b, 0x0a, 0x17,
	0x42, 0x59, 0x44, 0x48, 0x46, 0x69, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x46, 0x72, 0x65,
	0x65, 0x42, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x10, 0x19, 0x12, 0x1e, 0x0a, 0x1a, 0x42, 0x59, 0x44,
	0x48, 0x46, 0x69, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4a, 0x61, 0x63, 0x6b, 0x50, 0x6f,
	0x74, 0x5f, 0x50, 0x65, 0x61, 0x72, 0x6c, 0x10, 0x64, 0x12, 0x22, 0x0a, 0x1e, 0x42, 0x59, 0x44,
	0x48, 0x46, 0x69, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x46, 0x72, 0x65, 0x65, 0x42, 0x75,
	0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x10, 0x65, 0x2a, 0x99, 0x01,
	0x0a, 0x15, 0x42, 0x59, 0x44, 0x48, 0x5f, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x53, 0x63,
	0x65, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x42, 0x59, 0x44, 0x48, 0x5f,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x4c, 0x61, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x10,
	0x01, 0x12, 0x16, 0x0a, 0x12, 0x42, 0x59, 0x44, 0x48, 0x5f, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61,
	0x6c, 0x5f, 0x57, 0x68, 0x61, 0x6c, 0x65, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x42, 0x59, 0x44,
	0x48, 0x5f, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x50, 0x65, 0x61, 0x72, 0x6c, 0x10,
	0x03, 0x12, 0x19, 0x0a, 0x15, 0x42, 0x59, 0x44, 0x48, 0x5f, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61,
	0x6c, 0x5f, 0x52, 0x6f, 0x75, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x10, 0x04, 0x12, 0x1b, 0x0a, 0x17,
	0x42, 0x59, 0x44, 0x48, 0x5f, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x46, 0x72, 0x65,
	0x65, 0x42, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x10, 0x05, 0x2a, 0x6f, 0x0a, 0x13, 0x42, 0x59, 0x44,
	0x48, 0x5f, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1e, 0x0a, 0x1a, 0x42, 0x59, 0x44, 0x48, 0x5f, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x5f, 0x50, 0x69, 0x72, 0x61, 0x74, 0x65, 0x53, 0x68, 0x69, 0x70, 0x10, 0x01,
	0x12, 0x19, 0x0a, 0x15, 0x42, 0x59, 0x44, 0x48, 0x5f, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x5f, 0x53, 0x68, 0x6f, 0x61, 0x6c, 0x10, 0x02, 0x12, 0x1d, 0x0a, 0x19, 0x42,
	0x59, 0x44, 0x48, 0x5f, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x53,
	0x65, 0x61, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x65, 0x10, 0x03, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f,
	0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f,
}

var (
	file_Game_BYDH_proto_rawDescOnce sync.Once
	file_Game_BYDH_proto_rawDescData = file_Game_BYDH_proto_rawDesc
)

func file_Game_BYDH_proto_rawDescGZIP() []byte {
	file_Game_BYDH_proto_rawDescOnce.Do(func() {
		file_Game_BYDH_proto_rawDescData = protoimpl.X.CompressGZIP(file_Game_BYDH_proto_rawDescData)
	})
	return file_Game_BYDH_proto_rawDescData
}

var file_Game_BYDH_proto_enumTypes = make([]protoimpl.EnumInfo, 10)
var file_Game_BYDH_proto_goTypes = []interface{}{
	(BYDH_GameMessageClassID)(0), // 0: netproto.BYDH_GameMessageClassID
	(BYDH_GameStatus)(0),         // 1: netproto.BYDH_GameStatus
	(BYDH_CannonType)(0),         // 2: netproto.BYDH_CannonType
	(BYDH_BulletType)(0),         // 3: netproto.BYDH_BulletType
	(BYDH_BulletMode)(0),         // 4: netproto.BYDH_BulletMode
	(BYDH_FishLevel)(0),          // 5: netproto.BYDH_FishLevel
	(BYDH_Direction)(0),          // 6: netproto.BYDH_Direction
	(BYDH_FishType)(0),           // 7: netproto.BYDH_FishType
	(BYDH_SpecialSceneType)(0),   // 8: netproto.BYDH_SpecialSceneType
	(BYDH_BackgroundType)(0),     // 9: netproto.BYDH_BackgroundType
}
var file_Game_BYDH_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_Game_BYDH_proto_init() }
func file_Game_BYDH_proto_init() {
	if File_Game_BYDH_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Game_BYDH_proto_rawDesc,
			NumEnums:      10,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Game_BYDH_proto_goTypes,
		DependencyIndexes: file_Game_BYDH_proto_depIdxs,
		EnumInfos:         file_Game_BYDH_proto_enumTypes,
	}.Build()
	File_Game_BYDH_proto = out.File
	file_Game_BYDH_proto_rawDesc = nil
	file_Game_BYDH_proto_goTypes = nil
	file_Game_BYDH_proto_depIdxs = nil
}
