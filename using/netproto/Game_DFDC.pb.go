// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: Game_DFDC.proto

package netproto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type DFDC_GameMessageClassID int32

const (
	DFDC_GameMessageClassID_DFDCSettingID             DFDC_GameMessageClassID = 10001 //设置相关 S2C (DFDC_Setting)
	DFDC_GameMessageClassID_DFDCGameStartID           DFDC_GameMessageClassID = 10002 //遊戲開始C2S
	DFDC_GameMessageClassID_DFDCGameResult            DFDC_GameMessageClassID = 10003 //遊戲結果S2C (DFDC_GameResultReel)
	DFDC_GameMessageClassID_DFDCStateID               DFDC_GameMessageClassID = 10004 //遊戲狀態S2C (DFDC_GameStatus)
	DFDC_GameMessageClassID_DFDCFreeOrPayID           DFDC_GameMessageClassID = 10005 //遊戲要付費或免費 (DFDC_FreeOrPayMsg)
	DFDC_GameMessageClassID_DFDCGetJackpotPoolID      DFDC_GameMessageClassID = 10006 //取得jackpot pool 水池 (DFDC_GetJackpotMsg)
	DFDC_GameMessageClassID_DFDCGetJackpotPoolRetID   DFDC_GameMessageClassID = 10007 //回傳jackpot pool 水池 X
	DFDC_GameMessageClassID_DFDCUpdateJackpotPoolID   DFDC_GameMessageClassID = 10008 //更新jackpot pool 水池 (DFDC_GetJackpotRet)
	DFDC_GameMessageClassID_DFDCJackpotPoolS2CID      DFDC_GameMessageClassID = 10009 //S2C 更新Client Jackpot 值 (DFDC_JackpotPoolS2CMsg)
	DFDC_GameMessageClassID_DFDCBetRetID              DFDC_GameMessageClassID = 10010 //S2C下注結果 (DFDC_BetRet)
	DFDC_GameMessageClassID_DFDCGoldenSymbolID        DFDC_GameMessageClassID = 10011 //S2C 黃金符號列表 (DFDC_GoldenSymbolList)
	DFDC_GameMessageClassID_DFDCBonusGameID           DFDC_GameMessageClassID = 10012 //S2C 進入Bonus Game (DFDC_BonusGame)
	DFDC_GameMessageClassID_DFDCBonusGameIconID       DFDC_GameMessageClassID = 10013 //C2S 玩家Bonus Game選擇 (DFDC_BonusGameDetail)
	DFDC_GameMessageClassID_DFDCSysPoolID             DFDC_GameMessageClassID = 10014 //多福多財水池載入
	DFDC_GameMessageClassID_DFDCSysPoolRetID          DFDC_GameMessageClassID = 10015 //多福多財水池結果
	DFDC_GameMessageClassID_DFDCJackpotBonusGameID    DFDC_GameMessageClassID = 10016 //多福多財BonusGame紀錄(DFDC_JackpotBonusGameRecord)
	DFDC_GameMessageClassID_DFDCJackpotBonusGameRetID DFDC_GameMessageClassID = 10017 //多福多財讀取BonusGame紀錄(DFDC_JackpotBonusGameRet)
	DFDC_GameMessageClassID_DFDCJackpotBonusDetailID  DFDC_GameMessageClassID = 10018 //多福多財接收BonusGame紀錄(DFDC_JackpotBonusGameDetail)
	DFDC_GameMessageClassID_DFDCUserRecoverID         DFDC_GameMessageClassID = 10019 //S2C 開始遊戲時殘餘資料(DFDC_UserRecover)
	DFDC_GameMessageClassID_DFDCLoadGameHistoryID     DFDC_GameMessageClassID = 10020 //C2S 查詢遊戲歷程紀錄(DFDC_GetGameLog)
	DFDC_GameMessageClassID_DFDCLoadGameHistoryRetID  DFDC_GameMessageClassID = 10021 //S2C 查詢歷程紀錄結果(Slot_SendHistoryData)
)

// Enum value maps for DFDC_GameMessageClassID.
var (
	DFDC_GameMessageClassID_name = map[int32]string{
		10001: "DFDCSettingID",
		10002: "DFDCGameStartID",
		10003: "DFDCGameResult",
		10004: "DFDCStateID",
		10005: "DFDCFreeOrPayID",
		10006: "DFDCGetJackpotPoolID",
		10007: "DFDCGetJackpotPoolRetID",
		10008: "DFDCUpdateJackpotPoolID",
		10009: "DFDCJackpotPoolS2CID",
		10010: "DFDCBetRetID",
		10011: "DFDCGoldenSymbolID",
		10012: "DFDCBonusGameID",
		10013: "DFDCBonusGameIconID",
		10014: "DFDCSysPoolID",
		10015: "DFDCSysPoolRetID",
		10016: "DFDCJackpotBonusGameID",
		10017: "DFDCJackpotBonusGameRetID",
		10018: "DFDCJackpotBonusDetailID",
		10019: "DFDCUserRecoverID",
		10020: "DFDCLoadGameHistoryID",
		10021: "DFDCLoadGameHistoryRetID",
	}
	DFDC_GameMessageClassID_value = map[string]int32{
		"DFDCSettingID":             10001,
		"DFDCGameStartID":           10002,
		"DFDCGameResult":            10003,
		"DFDCStateID":               10004,
		"DFDCFreeOrPayID":           10005,
		"DFDCGetJackpotPoolID":      10006,
		"DFDCGetJackpotPoolRetID":   10007,
		"DFDCUpdateJackpotPoolID":   10008,
		"DFDCJackpotPoolS2CID":      10009,
		"DFDCBetRetID":              10010,
		"DFDCGoldenSymbolID":        10011,
		"DFDCBonusGameID":           10012,
		"DFDCBonusGameIconID":       10013,
		"DFDCSysPoolID":             10014,
		"DFDCSysPoolRetID":          10015,
		"DFDCJackpotBonusGameID":    10016,
		"DFDCJackpotBonusGameRetID": 10017,
		"DFDCJackpotBonusDetailID":  10018,
		"DFDCUserRecoverID":         10019,
		"DFDCLoadGameHistoryID":     10020,
		"DFDCLoadGameHistoryRetID":  10021,
	}
)

func (x DFDC_GameMessageClassID) Enum() *DFDC_GameMessageClassID {
	p := new(DFDC_GameMessageClassID)
	*p = x
	return p
}

func (x DFDC_GameMessageClassID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DFDC_GameMessageClassID) Descriptor() protoreflect.EnumDescriptor {
	return file_Game_DFDC_proto_enumTypes[0].Descriptor()
}

func (DFDC_GameMessageClassID) Type() protoreflect.EnumType {
	return &file_Game_DFDC_proto_enumTypes[0]
}

func (x DFDC_GameMessageClassID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *DFDC_GameMessageClassID) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = DFDC_GameMessageClassID(num)
	return nil
}

// Deprecated: Use DFDC_GameMessageClassID.Descriptor instead.
func (DFDC_GameMessageClassID) EnumDescriptor() ([]byte, []int) {
	return file_Game_DFDC_proto_rawDescGZIP(), []int{0}
}

var File_Game_DFDC_proto protoreflect.FileDescriptor

var file_Game_DFDC_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x47, 0x61, 0x6d, 0x65, 0x5f, 0x44, 0x46, 0x44, 0x43, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x08, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2a, 0xa8, 0x04, 0x0a, 0x17,
	0x44, 0x46, 0x44, 0x43, 0x5f, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x0d, 0x44, 0x46, 0x44, 0x43, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x44, 0x10, 0x91, 0x4e, 0x12, 0x14, 0x0a, 0x0f, 0x44,
	0x46, 0x44, 0x43, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x49, 0x44, 0x10, 0x92,
	0x4e, 0x12, 0x13, 0x0a, 0x0e, 0x44, 0x46, 0x44, 0x43, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x10, 0x93, 0x4e, 0x12, 0x10, 0x0a, 0x0b, 0x44, 0x46, 0x44, 0x43, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x49, 0x44, 0x10, 0x94, 0x4e, 0x12, 0x14, 0x0a, 0x0f, 0x44, 0x46, 0x44, 0x43,
	0x46, 0x72, 0x65, 0x65, 0x4f, 0x72, 0x50, 0x61, 0x79, 0x49, 0x44, 0x10, 0x95, 0x4e, 0x12, 0x19,
	0x0a, 0x14, 0x44, 0x46, 0x44, 0x43, 0x47, 0x65, 0x74, 0x4a, 0x61, 0x63, 0x6b, 0x70, 0x6f, 0x74,
	0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x44, 0x10, 0x96, 0x4e, 0x12, 0x1c, 0x0a, 0x17, 0x44, 0x46, 0x44,
	0x43, 0x47, 0x65, 0x74, 0x4a, 0x61, 0x63, 0x6b, 0x70, 0x6f, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x52,
	0x65, 0x74, 0x49, 0x44, 0x10, 0x97, 0x4e, 0x12, 0x1c, 0x0a, 0x17, 0x44, 0x46, 0x44, 0x43, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4a, 0x61, 0x63, 0x6b, 0x70, 0x6f, 0x74, 0x50, 0x6f, 0x6f, 0x6c,
	0x49, 0x44, 0x10, 0x98, 0x4e, 0x12, 0x19, 0x0a, 0x14, 0x44, 0x46, 0x44, 0x43, 0x4a, 0x61, 0x63,
	0x6b, 0x70, 0x6f, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x32, 0x43, 0x49, 0x44, 0x10, 0x99, 0x4e,
	0x12, 0x11, 0x0a, 0x0c, 0x44, 0x46, 0x44, 0x43, 0x42, 0x65, 0x74, 0x52, 0x65, 0x74, 0x49, 0x44,
	0x10, 0x9a, 0x4e, 0x12, 0x17, 0x0a, 0x12, 0x44, 0x46, 0x44, 0x43, 0x47, 0x6f, 0x6c, 0x64, 0x65,
	0x6e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x44, 0x10, 0x9b, 0x4e, 0x12, 0x14, 0x0a, 0x0f,
	0x44, 0x46, 0x44, 0x43, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x10,
	0x9c, 0x4e, 0x12, 0x18, 0x0a, 0x13, 0x44, 0x46, 0x44, 0x43, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x47,
	0x61, 0x6d, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x49, 0x44, 0x10, 0x9d, 0x4e, 0x12, 0x12, 0x0a, 0x0d,
	0x44, 0x46, 0x44, 0x43, 0x53, 0x79, 0x73, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x44, 0x10, 0x9e, 0x4e,
	0x12, 0x15, 0x0a, 0x10, 0x44, 0x46, 0x44, 0x43, 0x53, 0x79, 0x73, 0x50, 0x6f, 0x6f, 0x6c, 0x52,
	0x65, 0x74, 0x49, 0x44, 0x10, 0x9f, 0x4e, 0x12, 0x1b, 0x0a, 0x16, 0x44, 0x46, 0x44, 0x43, 0x4a,
	0x61, 0x63, 0x6b, 0x70, 0x6f, 0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x49,
	0x44, 0x10, 0xa0, 0x4e, 0x12, 0x1e, 0x0a, 0x19, 0x44, 0x46, 0x44, 0x43, 0x4a, 0x61, 0x63, 0x6b,
	0x70, 0x6f, 0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x74, 0x49,
	0x44, 0x10, 0xa1, 0x4e, 0x12, 0x1d, 0x0a, 0x18, 0x44, 0x46, 0x44, 0x43, 0x4a, 0x61, 0x63, 0x6b,
	0x70, 0x6f, 0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x44,
	0x10, 0xa2, 0x4e, 0x12, 0x16, 0x0a, 0x11, 0x44, 0x46, 0x44, 0x43, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x44, 0x10, 0xa3, 0x4e, 0x12, 0x1a, 0x0a, 0x15, 0x44,
	0x46, 0x44, 0x43, 0x4c, 0x6f, 0x61, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x49, 0x44, 0x10, 0xa4, 0x4e, 0x12, 0x1d, 0x0a, 0x18, 0x44, 0x46, 0x44, 0x43, 0x4c,
	0x6f, 0x61, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x74, 0x49, 0x44, 0x10, 0xa5, 0x4e, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x6e, 0x65, 0x74, 0x70,
	0x72, 0x6f, 0x74, 0x6f,
}

var (
	file_Game_DFDC_proto_rawDescOnce sync.Once
	file_Game_DFDC_proto_rawDescData = file_Game_DFDC_proto_rawDesc
)

func file_Game_DFDC_proto_rawDescGZIP() []byte {
	file_Game_DFDC_proto_rawDescOnce.Do(func() {
		file_Game_DFDC_proto_rawDescData = protoimpl.X.CompressGZIP(file_Game_DFDC_proto_rawDescData)
	})
	return file_Game_DFDC_proto_rawDescData
}

var file_Game_DFDC_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_Game_DFDC_proto_goTypes = []interface{}{
	(DFDC_GameMessageClassID)(0), // 0: netproto.DFDC_GameMessageClassID
}
var file_Game_DFDC_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_Game_DFDC_proto_init() }
func file_Game_DFDC_proto_init() {
	if File_Game_DFDC_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Game_DFDC_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Game_DFDC_proto_goTypes,
		DependencyIndexes: file_Game_DFDC_proto_depIdxs,
		EnumInfos:         file_Game_DFDC_proto_enumTypes,
	}.Build()
	File_Game_DFDC_proto = out.File
	file_Game_DFDC_proto_rawDesc = nil
	file_Game_DFDC_proto_goTypes = nil
	file_Game_DFDC_proto_depIdxs = nil
}
