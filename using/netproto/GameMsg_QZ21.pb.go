// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: GameMsg_QZ21.proto

package netproto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//倍率选择消息
type ChoseOdds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ot   *int32 `protobuf:"varint,1,req,name=ot" json:"ot,omitempty"`     //选择倍率的类型 1 闲家倍率选择 2 庄家倍率选择
	Odds *int32 `protobuf:"varint,2,req,name=Odds" json:"Odds,omitempty"` //玩家选择的倍率索引 0 1 2 3.... 0不抢
}

func (x *ChoseOdds) Reset() {
	*x = ChoseOdds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_QZ21_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChoseOdds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChoseOdds) ProtoMessage() {}

func (x *ChoseOdds) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_QZ21_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChoseOdds.ProtoReflect.Descriptor instead.
func (*ChoseOdds) Descriptor() ([]byte, []int) {
	return file_GameMsg_QZ21_proto_rawDescGZIP(), []int{0}
}

func (x *ChoseOdds) GetOt() int32 {
	if x != nil && x.Ot != nil {
		return *x.Ot
	}
	return 0
}

func (x *ChoseOdds) GetOdds() int32 {
	if x != nil && x.Odds != nil {
		return *x.Odds
	}
	return 0
}

//倍率选择相关响应
type ChoseOddsRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code   *int32  `protobuf:"varint,1,req,name=Code" json:"Code,omitempty"`     //错误码
	Msg    *string `protobuf:"bytes,2,req,name=Msg" json:"Msg,omitempty"`        //错误描述
	UserId *int32  `protobuf:"varint,3,opt,name=UserId" json:"UserId,omitempty"` //玩家id
	SeatNo *int32  `protobuf:"varint,4,opt,name=SeatNo" json:"SeatNo,omitempty"` //座位号
	Ot     *int32  `protobuf:"varint,5,opt,name=Ot" json:"Ot,omitempty"`         //倍率选择类型 1 闲家倍率选择 2 庄家倍率选择
	Odds   *int32  `protobuf:"varint,6,opt,name=Odds" json:"Odds,omitempty"`     //玩家选择的倍率索引
}

func (x *ChoseOddsRet) Reset() {
	*x = ChoseOddsRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_QZ21_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChoseOddsRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChoseOddsRet) ProtoMessage() {}

func (x *ChoseOddsRet) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_QZ21_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChoseOddsRet.ProtoReflect.Descriptor instead.
func (*ChoseOddsRet) Descriptor() ([]byte, []int) {
	return file_GameMsg_QZ21_proto_rawDescGZIP(), []int{1}
}

func (x *ChoseOddsRet) GetCode() int32 {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return 0
}

func (x *ChoseOddsRet) GetMsg() string {
	if x != nil && x.Msg != nil {
		return *x.Msg
	}
	return ""
}

func (x *ChoseOddsRet) GetUserId() int32 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *ChoseOddsRet) GetSeatNo() int32 {
	if x != nil && x.SeatNo != nil {
		return *x.SeatNo
	}
	return 0
}

func (x *ChoseOddsRet) GetOt() int32 {
	if x != nil && x.Ot != nil {
		return *x.Ot
	}
	return 0
}

func (x *ChoseOddsRet) GetOdds() int32 {
	if x != nil && x.Odds != nil {
		return *x.Odds
	}
	return 0
}

//操作相关消息
type RoleOpt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ot *int32 `protobuf:"varint,1,req,name=Ot" json:"Ot,omitempty"` //操作类型  1 玩家叫牌操作 2 玩家完成操作
}

func (x *RoleOpt) Reset() {
	*x = RoleOpt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_QZ21_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleOpt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleOpt) ProtoMessage() {}

func (x *RoleOpt) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_QZ21_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleOpt.ProtoReflect.Descriptor instead.
func (*RoleOpt) Descriptor() ([]byte, []int) {
	return file_GameMsg_QZ21_proto_rawDescGZIP(), []int{2}
}

func (x *RoleOpt) GetOt() int32 {
	if x != nil && x.Ot != nil {
		return *x.Ot
	}
	return 0
}

//操作相关消息响应
type RoleOptRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code   *int32  `protobuf:"varint,1,req,name=Code" json:"Code,omitempty"`     //错误码
	Msg    *string `protobuf:"bytes,2,req,name=Msg" json:"Msg,omitempty"`        //错误描述
	UserId *int32  `protobuf:"varint,3,req,name=UserId" json:"UserId,omitempty"` //玩家id
	SeatNo *int32  `protobuf:"varint,4,req,name=SeatNo" json:"SeatNo,omitempty"` //座位号
	Ot     *int32  `protobuf:"varint,5,req,name=Ot" json:"Ot,omitempty"`         //操作类型 1 玩家叫牌操作 2 玩家完成操作
}

func (x *RoleOptRet) Reset() {
	*x = RoleOptRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_QZ21_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleOptRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleOptRet) ProtoMessage() {}

func (x *RoleOptRet) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_QZ21_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleOptRet.ProtoReflect.Descriptor instead.
func (*RoleOptRet) Descriptor() ([]byte, []int) {
	return file_GameMsg_QZ21_proto_rawDescGZIP(), []int{3}
}

func (x *RoleOptRet) GetCode() int32 {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return 0
}

func (x *RoleOptRet) GetMsg() string {
	if x != nil && x.Msg != nil {
		return *x.Msg
	}
	return ""
}

func (x *RoleOptRet) GetUserId() int32 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *RoleOptRet) GetSeatNo() int32 {
	if x != nil && x.SeatNo != nil {
		return *x.SeatNo
	}
	return 0
}

func (x *RoleOptRet) GetOt() int32 {
	if x != nil && x.Ot != nil {
		return *x.Ot
	}
	return 0
}

//广播倍率相关信息
type QZ21NotifyOdds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Odds []int32 `protobuf:"varint,1,rep,name=Odds" json:"Odds,omitempty"` //倍率信息
	Oce  *int32  `protobuf:"varint,2,req,name=Oce" json:"Oce,omitempty"`   //倍率类型 1 闲家倍率选择 2 庄家倍率选择
}

func (x *QZ21NotifyOdds) Reset() {
	*x = QZ21NotifyOdds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_QZ21_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QZ21NotifyOdds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QZ21NotifyOdds) ProtoMessage() {}

func (x *QZ21NotifyOdds) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_QZ21_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QZ21NotifyOdds.ProtoReflect.Descriptor instead.
func (*QZ21NotifyOdds) Descriptor() ([]byte, []int) {
	return file_GameMsg_QZ21_proto_rawDescGZIP(), []int{4}
}

func (x *QZ21NotifyOdds) GetOdds() []int32 {
	if x != nil {
		return x.Odds
	}
	return nil
}

func (x *QZ21NotifyOdds) GetOce() int32 {
	if x != nil && x.Oce != nil {
		return *x.Oce
	}
	return 0
}

//广播超时相关信息
type QZ21NotifyTimeOutOpt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeOut *int32 `protobuf:"varint,1,req,name=TimeOut" json:"TimeOut,omitempty"` //超时时间
	Step    *int32 `protobuf:"varint,2,req,name=Step" json:"Step,omitempty"`       //当前游戏进度
}

func (x *QZ21NotifyTimeOutOpt) Reset() {
	*x = QZ21NotifyTimeOutOpt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_QZ21_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QZ21NotifyTimeOutOpt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QZ21NotifyTimeOutOpt) ProtoMessage() {}

func (x *QZ21NotifyTimeOutOpt) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_QZ21_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QZ21NotifyTimeOutOpt.ProtoReflect.Descriptor instead.
func (*QZ21NotifyTimeOutOpt) Descriptor() ([]byte, []int) {
	return file_GameMsg_QZ21_proto_rawDescGZIP(), []int{5}
}

func (x *QZ21NotifyTimeOutOpt) GetTimeOut() int32 {
	if x != nil && x.TimeOut != nil {
		return *x.TimeOut
	}
	return 0
}

func (x *QZ21NotifyTimeOutOpt) GetStep() int32 {
	if x != nil && x.Step != nil {
		return *x.Step
	}
	return 0
}

//广播玩家倍率选择相关信息
type QZ21NotifyChoseOdds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat   *int32 `protobuf:"varint,1,req,name=Seat" json:"Seat,omitempty"`     //座位号
	Odds   *int32 `protobuf:"varint,2,req,name=Odds" json:"Odds,omitempty"`     //玩家选择的倍率
	UserId *int32 `protobuf:"varint,3,req,name=UserId" json:"UserId,omitempty"` //玩家id
	Ot     *int32 `protobuf:"varint,4,req,name=Ot" json:"Ot,omitempty"`         //1 闲家倍率选择 2 庄家倍率选择
}

func (x *QZ21NotifyChoseOdds) Reset() {
	*x = QZ21NotifyChoseOdds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_QZ21_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QZ21NotifyChoseOdds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QZ21NotifyChoseOdds) ProtoMessage() {}

func (x *QZ21NotifyChoseOdds) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_QZ21_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QZ21NotifyChoseOdds.ProtoReflect.Descriptor instead.
func (*QZ21NotifyChoseOdds) Descriptor() ([]byte, []int) {
	return file_GameMsg_QZ21_proto_rawDescGZIP(), []int{6}
}

func (x *QZ21NotifyChoseOdds) GetSeat() int32 {
	if x != nil && x.Seat != nil {
		return *x.Seat
	}
	return 0
}

func (x *QZ21NotifyChoseOdds) GetOdds() int32 {
	if x != nil && x.Odds != nil {
		return *x.Odds
	}
	return 0
}

func (x *QZ21NotifyChoseOdds) GetUserId() int32 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *QZ21NotifyChoseOdds) GetOt() int32 {
	if x != nil && x.Ot != nil {
		return *x.Ot
	}
	return 0
}

//广播玩家操作状态
type QZ21NotifyRoleStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat   *int32 `protobuf:"varint,1,req,name=Seat" json:"Seat,omitempty"`     //座位号
	Roe    *int32 `protobuf:"varint,2,req,name=Roe" json:"Roe,omitempty"`       //玩家操作状态 1 玩家叫牌操作 2 玩家完成操作
	UserId *int32 `protobuf:"varint,3,req,name=UserId" json:"UserId,omitempty"` //玩家id
}

func (x *QZ21NotifyRoleStatus) Reset() {
	*x = QZ21NotifyRoleStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_QZ21_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QZ21NotifyRoleStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QZ21NotifyRoleStatus) ProtoMessage() {}

func (x *QZ21NotifyRoleStatus) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_QZ21_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QZ21NotifyRoleStatus.ProtoReflect.Descriptor instead.
func (*QZ21NotifyRoleStatus) Descriptor() ([]byte, []int) {
	return file_GameMsg_QZ21_proto_rawDescGZIP(), []int{7}
}

func (x *QZ21NotifyRoleStatus) GetSeat() int32 {
	if x != nil && x.Seat != nil {
		return *x.Seat
	}
	return 0
}

func (x *QZ21NotifyRoleStatus) GetRoe() int32 {
	if x != nil && x.Roe != nil {
		return *x.Roe
	}
	return 0
}

func (x *QZ21NotifyRoleStatus) GetUserId() int32 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

//牌定义
type Qz21Card struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number *int32 `protobuf:"varint,1,req,name=Number" json:"Number,omitempty"` //牌点数
	Color  *int32 `protobuf:"varint,2,req,name=Color" json:"Color,omitempty"`   //花色
}

func (x *Qz21Card) Reset() {
	*x = Qz21Card{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_QZ21_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qz21Card) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qz21Card) ProtoMessage() {}

func (x *Qz21Card) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_QZ21_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qz21Card.ProtoReflect.Descriptor instead.
func (*Qz21Card) Descriptor() ([]byte, []int) {
	return file_GameMsg_QZ21_proto_rawDescGZIP(), []int{8}
}

func (x *Qz21Card) GetNumber() int32 {
	if x != nil && x.Number != nil {
		return *x.Number
	}
	return 0
}

func (x *Qz21Card) GetColor() int32 {
	if x != nil && x.Color != nil {
		return *x.Color
	}
	return 0
}

type Qz21Js struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId *int32 `protobuf:"varint,1,req,name=UserId" json:"UserId,omitempty"` //用户id
	Money  *int64 `protobuf:"varint,2,req,name=Money" json:"Money,omitempty"`   //用户输赢情况
}

func (x *Qz21Js) Reset() {
	*x = Qz21Js{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_QZ21_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qz21Js) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qz21Js) ProtoMessage() {}

func (x *Qz21Js) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_QZ21_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qz21Js.ProtoReflect.Descriptor instead.
func (*Qz21Js) Descriptor() ([]byte, []int) {
	return file_GameMsg_QZ21_proto_rawDescGZIP(), []int{9}
}

func (x *Qz21Js) GetUserId() int32 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *Qz21Js) GetMoney() int64 {
	if x != nil && x.Money != nil {
		return *x.Money
	}
	return 0
}

//亮牌数组
type QZ21NotifyShowArr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShowArr []*QZ21NotifyShow `protobuf:"bytes,1,rep,name=ShowArr" json:"ShowArr,omitempty"` //亮牌数组
}

func (x *QZ21NotifyShowArr) Reset() {
	*x = QZ21NotifyShowArr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_QZ21_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QZ21NotifyShowArr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QZ21NotifyShowArr) ProtoMessage() {}

func (x *QZ21NotifyShowArr) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_QZ21_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QZ21NotifyShowArr.ProtoReflect.Descriptor instead.
func (*QZ21NotifyShowArr) Descriptor() ([]byte, []int) {
	return file_GameMsg_QZ21_proto_rawDescGZIP(), []int{10}
}

func (x *QZ21NotifyShowArr) GetShowArr() []*QZ21NotifyShow {
	if x != nil {
		return x.ShowArr
	}
	return nil
}

//亮牌
type QZ21NotifyShow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat   *int32      `protobuf:"varint,1,req,name=Seat" json:"Seat,omitempty"`     //座位号
	UserId *int32      `protobuf:"varint,2,req,name=UserId" json:"UserId,omitempty"` //玩家id
	Point  *int32      `protobuf:"varint,3,req,name=Point" json:"Point,omitempty"`   //点数
	Js     []*Qz21Js   `protobuf:"bytes,4,rep,name=Js" json:"Js,omitempty"`          //输赢情况
	Cards  []*Qz21Card `protobuf:"bytes,5,rep,name=Cards" json:"Cards,omitempty"`    //牌
}

func (x *QZ21NotifyShow) Reset() {
	*x = QZ21NotifyShow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_QZ21_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QZ21NotifyShow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QZ21NotifyShow) ProtoMessage() {}

func (x *QZ21NotifyShow) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_QZ21_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QZ21NotifyShow.ProtoReflect.Descriptor instead.
func (*QZ21NotifyShow) Descriptor() ([]byte, []int) {
	return file_GameMsg_QZ21_proto_rawDescGZIP(), []int{11}
}

func (x *QZ21NotifyShow) GetSeat() int32 {
	if x != nil && x.Seat != nil {
		return *x.Seat
	}
	return 0
}

func (x *QZ21NotifyShow) GetUserId() int32 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *QZ21NotifyShow) GetPoint() int32 {
	if x != nil && x.Point != nil {
		return *x.Point
	}
	return 0
}

func (x *QZ21NotifyShow) GetJs() []*Qz21Js {
	if x != nil {
		return x.Js
	}
	return nil
}

func (x *QZ21NotifyShow) GetCards() []*Qz21Card {
	if x != nil {
		return x.Cards
	}
	return nil
}

//结算项
type SettlementItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       *int32  `protobuf:"varint,1,req,name=Id" json:"Id,omitempty"`            //玩家id
	Seat     *int32  `protobuf:"varint,2,req,name=Seat" json:"Seat,omitempty"`        //座位号
	NickName *string `protobuf:"bytes,3,req,name=NickName" json:"NickName,omitempty"` //玩家昵称
	Point    *int32  `protobuf:"varint,4,req,name=Point" json:"Point,omitempty"`      //点数
	Money    *int64  `protobuf:"varint,5,req,name=Money" json:"Money,omitempty"`      //金币
}

func (x *SettlementItem) Reset() {
	*x = SettlementItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_QZ21_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettlementItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettlementItem) ProtoMessage() {}

func (x *SettlementItem) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_QZ21_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettlementItem.ProtoReflect.Descriptor instead.
func (*SettlementItem) Descriptor() ([]byte, []int) {
	return file_GameMsg_QZ21_proto_rawDescGZIP(), []int{12}
}

func (x *SettlementItem) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *SettlementItem) GetSeat() int32 {
	if x != nil && x.Seat != nil {
		return *x.Seat
	}
	return 0
}

func (x *SettlementItem) GetNickName() string {
	if x != nil && x.NickName != nil {
		return *x.NickName
	}
	return ""
}

func (x *SettlementItem) GetPoint() int32 {
	if x != nil && x.Point != nil {
		return *x.Point
	}
	return 0
}

func (x *SettlementItem) GetMoney() int64 {
	if x != nil && x.Money != nil {
		return *x.Money
	}
	return 0
}

//广播游戏结算信息
type QZ21NotifySettlement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sli      []*SettlementItem `protobuf:"bytes,1,rep,name=Sli" json:"Sli,omitempty"`            //结算信息
	BankerId *int32            `protobuf:"varint,2,req,name=BankerId" json:"BankerId,omitempty"` //庄家id
}

func (x *QZ21NotifySettlement) Reset() {
	*x = QZ21NotifySettlement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_QZ21_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QZ21NotifySettlement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QZ21NotifySettlement) ProtoMessage() {}

func (x *QZ21NotifySettlement) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_QZ21_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QZ21NotifySettlement.ProtoReflect.Descriptor instead.
func (*QZ21NotifySettlement) Descriptor() ([]byte, []int) {
	return file_GameMsg_QZ21_proto_rawDescGZIP(), []int{13}
}

func (x *QZ21NotifySettlement) GetSli() []*SettlementItem {
	if x != nil {
		return x.Sli
	}
	return nil
}

func (x *QZ21NotifySettlement) GetBankerId() int32 {
	if x != nil && x.BankerId != nil {
		return *x.BankerId
	}
	return 0
}

type RobItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId *int32 `protobuf:"varint,1,req,name=UserId" json:"UserId,omitempty"` //用户id
	Odds   *int32 `protobuf:"varint,2,req,name=Odds" json:"Odds,omitempty"`     //玩家选择的倍率
}

func (x *RobItem) Reset() {
	*x = RobItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_QZ21_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RobItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RobItem) ProtoMessage() {}

func (x *RobItem) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_QZ21_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RobItem.ProtoReflect.Descriptor instead.
func (*RobItem) Descriptor() ([]byte, []int) {
	return file_GameMsg_QZ21_proto_rawDescGZIP(), []int{14}
}

func (x *RobItem) GetUserId() int32 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *RobItem) GetOdds() int32 {
	if x != nil && x.Odds != nil {
		return *x.Odds
	}
	return 0
}

type RobBankerPlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rbs []*RobItem `protobuf:"bytes,1,rep,name=rbs" json:"rbs,omitempty"` //用户之间出现抢庄的信息
}

func (x *RobBankerPlayer) Reset() {
	*x = RobBankerPlayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_QZ21_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RobBankerPlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RobBankerPlayer) ProtoMessage() {}

func (x *RobBankerPlayer) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_QZ21_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RobBankerPlayer.ProtoReflect.Descriptor instead.
func (*RobBankerPlayer) Descriptor() ([]byte, []int) {
	return file_GameMsg_QZ21_proto_rawDescGZIP(), []int{15}
}

func (x *RobBankerPlayer) GetRbs() []*RobItem {
	if x != nil {
		return x.Rbs
	}
	return nil
}

//广播庄家信息
type QZ21NotifyBanker struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat   *int32           `protobuf:"varint,1,req,name=Seat" json:"Seat,omitempty"`     //庄家座位号
	UserId *int32           `protobuf:"varint,2,req,name=UserId" json:"UserId,omitempty"` //玩家id
	Odds   *int32           `protobuf:"varint,3,req,name=Odds" json:"Odds,omitempty"`     //庄家选择的倍率
	Rbp    *RobBankerPlayer `protobuf:"bytes,4,opt,name=Rbp" json:"Rbp,omitempty"`        //抢庄动画信息
}

func (x *QZ21NotifyBanker) Reset() {
	*x = QZ21NotifyBanker{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_QZ21_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QZ21NotifyBanker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QZ21NotifyBanker) ProtoMessage() {}

func (x *QZ21NotifyBanker) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_QZ21_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QZ21NotifyBanker.ProtoReflect.Descriptor instead.
func (*QZ21NotifyBanker) Descriptor() ([]byte, []int) {
	return file_GameMsg_QZ21_proto_rawDescGZIP(), []int{16}
}

func (x *QZ21NotifyBanker) GetSeat() int32 {
	if x != nil && x.Seat != nil {
		return *x.Seat
	}
	return 0
}

func (x *QZ21NotifyBanker) GetUserId() int32 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *QZ21NotifyBanker) GetOdds() int32 {
	if x != nil && x.Odds != nil {
		return *x.Odds
	}
	return 0
}

func (x *QZ21NotifyBanker) GetRbp() *RobBankerPlayer {
	if x != nil {
		return x.Rbp
	}
	return nil
}

//玩家信息
type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat     *int32      `protobuf:"varint,1,req,name=Seat" json:"Seat,omitempty"`        //玩家座位
	XjBet    *int32      `protobuf:"varint,2,req,name=XjBet" json:"XjBet,omitempty"`      //闲家倍率选择
	ZjBet    *int32      `protobuf:"varint,3,req,name=ZjBet" json:"ZjBet,omitempty"`      //庄家倍率选择
	Point    *int32      `protobuf:"varint,4,req,name=Point" json:"Point,omitempty"`      //玩家点数
	Cards    []*Qz21Card `protobuf:"bytes,5,rep,name=Cards" json:"Cards,omitempty"`       //玩家手牌
	Status   *int32      `protobuf:"varint,6,req,name=Status" json:"Status,omitempty"`    //玩家状态 1叫牌 2完成
	Money    *int64      `protobuf:"varint,7,req,name=Money" json:"Money,omitempty"`      //本局金币数
	UserId   *int32      `protobuf:"varint,8,req,name=UserId" json:"UserId,omitempty"`    //玩家id
	NickName *string     `protobuf:"bytes,9,req,name=NickName" json:"NickName,omitempty"` //玩家昵称
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_QZ21_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_QZ21_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_GameMsg_QZ21_proto_rawDescGZIP(), []int{17}
}

func (x *UserInfo) GetSeat() int32 {
	if x != nil && x.Seat != nil {
		return *x.Seat
	}
	return 0
}

func (x *UserInfo) GetXjBet() int32 {
	if x != nil && x.XjBet != nil {
		return *x.XjBet
	}
	return 0
}

func (x *UserInfo) GetZjBet() int32 {
	if x != nil && x.ZjBet != nil {
		return *x.ZjBet
	}
	return 0
}

func (x *UserInfo) GetPoint() int32 {
	if x != nil && x.Point != nil {
		return *x.Point
	}
	return 0
}

func (x *UserInfo) GetCards() []*Qz21Card {
	if x != nil {
		return x.Cards
	}
	return nil
}

func (x *UserInfo) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *UserInfo) GetMoney() int64 {
	if x != nil && x.Money != nil {
		return *x.Money
	}
	return 0
}

func (x *UserInfo) GetUserId() int32 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *UserInfo) GetNickName() string {
	if x != nil && x.NickName != nil {
		return *x.NickName
	}
	return ""
}

//游戏信息推送
type QZ21GameInfoPush struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ui           []*UserInfo `protobuf:"bytes,1,rep,name=Ui" json:"Ui,omitempty"`                      //玩家信息
	BankerSeat   *int32      `protobuf:"varint,2,req,name=BankerSeat" json:"BankerSeat,omitempty"`     //庄家座位信息
	Step         *int32      `protobuf:"varint,3,req,name=Step" json:"Step,omitempty"`                 //游戏进度
	TimeOut      *int32      `protobuf:"varint,4,req,name=TimeOut" json:"TimeOut,omitempty"`           //超时剩余时间
	BankerId     *int32      `protobuf:"varint,5,req,name=BankerId" json:"BankerId,omitempty"`         //庄家id
	ZjOdds       []int32     `protobuf:"varint,6,rep,name=ZjOdds" json:"ZjOdds,omitempty"`             //庄家倍率配置信息
	XjOdds       []int32     `protobuf:"varint,7,rep,name=XjOdds" json:"XjOdds,omitempty"`             //闲家倍率配置信息
	TotalTimeOut *int32      `protobuf:"varint,8,req,name=TotalTimeOut" json:"TotalTimeOut,omitempty"` //总超时时间
}

func (x *QZ21GameInfoPush) Reset() {
	*x = QZ21GameInfoPush{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_QZ21_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QZ21GameInfoPush) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QZ21GameInfoPush) ProtoMessage() {}

func (x *QZ21GameInfoPush) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_QZ21_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QZ21GameInfoPush.ProtoReflect.Descriptor instead.
func (*QZ21GameInfoPush) Descriptor() ([]byte, []int) {
	return file_GameMsg_QZ21_proto_rawDescGZIP(), []int{18}
}

func (x *QZ21GameInfoPush) GetUi() []*UserInfo {
	if x != nil {
		return x.Ui
	}
	return nil
}

func (x *QZ21GameInfoPush) GetBankerSeat() int32 {
	if x != nil && x.BankerSeat != nil {
		return *x.BankerSeat
	}
	return 0
}

func (x *QZ21GameInfoPush) GetStep() int32 {
	if x != nil && x.Step != nil {
		return *x.Step
	}
	return 0
}

func (x *QZ21GameInfoPush) GetTimeOut() int32 {
	if x != nil && x.TimeOut != nil {
		return *x.TimeOut
	}
	return 0
}

func (x *QZ21GameInfoPush) GetBankerId() int32 {
	if x != nil && x.BankerId != nil {
		return *x.BankerId
	}
	return 0
}

func (x *QZ21GameInfoPush) GetZjOdds() []int32 {
	if x != nil {
		return x.ZjOdds
	}
	return nil
}

func (x *QZ21GameInfoPush) GetXjOdds() []int32 {
	if x != nil {
		return x.XjOdds
	}
	return nil
}

func (x *QZ21GameInfoPush) GetTotalTimeOut() int32 {
	if x != nil && x.TotalTimeOut != nil {
		return *x.TotalTimeOut
	}
	return 0
}

//游戏配置推送
type QZ21GameDeskCfg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Difen   *int32 `protobuf:"varint,1,req,name=Difen" json:"Difen,omitempty"`     //底分
	TimeOut *int32 `protobuf:"varint,2,req,name=TimeOut" json:"TimeOut,omitempty"` //完成一局后的超时时间
}

func (x *QZ21GameDeskCfg) Reset() {
	*x = QZ21GameDeskCfg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_QZ21_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QZ21GameDeskCfg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QZ21GameDeskCfg) ProtoMessage() {}

func (x *QZ21GameDeskCfg) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_QZ21_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QZ21GameDeskCfg.ProtoReflect.Descriptor instead.
func (*QZ21GameDeskCfg) Descriptor() ([]byte, []int) {
	return file_GameMsg_QZ21_proto_rawDescGZIP(), []int{19}
}

func (x *QZ21GameDeskCfg) GetDifen() int32 {
	if x != nil && x.Difen != nil {
		return *x.Difen
	}
	return 0
}

func (x *QZ21GameDeskCfg) GetTimeOut() int32 {
	if x != nil && x.TimeOut != nil {
		return *x.TimeOut
	}
	return 0
}

var File_GameMsg_QZ21_proto protoreflect.FileDescriptor

var file_GameMsg_QZ21_proto_rawDesc = []byte{
	0x0a, 0x12, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x5f, 0x51, 0x5a, 0x32, 0x31, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2f,
	0x0a, 0x09, 0x43, 0x68, 0x6f, 0x73, 0x65, 0x4f, 0x64, 0x64, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x6f,
	0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x02, 0x6f, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4f,
	0x64, 0x64, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x4f, 0x64, 0x64, 0x73, 0x22,
	0x88, 0x01, 0x0a, 0x0c, 0x43, 0x68, 0x6f, 0x73, 0x65, 0x4f, 0x64, 0x64, 0x73, 0x52, 0x65, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x4f, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x4f, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4f, 0x64, 0x64, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x4f, 0x64, 0x64, 0x73, 0x22, 0x19, 0x0a, 0x07, 0x52, 0x6f,
	0x6c, 0x65, 0x4f, 0x70, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x4f, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x02, 0x4f, 0x74, 0x22, 0x72, 0x0a, 0x0a, 0x52, 0x6f, 0x6c, 0x65, 0x4f, 0x70, 0x74,
	0x52, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x18, 0x04, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x06, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x4f, 0x74, 0x18,
	0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x02, 0x4f, 0x74, 0x22, 0x36, 0x0a, 0x0e, 0x51, 0x5a, 0x32,
	0x31, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4f, 0x64, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x4f,
	0x64, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x04, 0x4f, 0x64, 0x64, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x4f, 0x63, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x4f, 0x63,
	0x65, 0x22, 0x44, 0x0a, 0x14, 0x51, 0x5a, 0x32, 0x31, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54,
	0x69, 0x6d, 0x65, 0x4f, 0x75, 0x74, 0x4f, 0x70, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x69, 0x6d,
	0x65, 0x4f, 0x75, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x54, 0x69, 0x6d, 0x65,
	0x4f, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x74, 0x65, 0x70, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x04, 0x53, 0x74, 0x65, 0x70, 0x22, 0x65, 0x0a, 0x13, 0x51, 0x5a, 0x32, 0x31, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x68, 0x6f, 0x73, 0x65, 0x4f, 0x64, 0x64, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x53, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x53, 0x65,
	0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4f, 0x64, 0x64, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x04, 0x4f, 0x64, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x4f, 0x74, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x02, 0x4f, 0x74, 0x22, 0x54,
	0x0a, 0x14, 0x51, 0x5a, 0x32, 0x31, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x6f, 0x6c, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x65, 0x61, 0x74, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x53, 0x65, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x6f,
	0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x52, 0x6f, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x08, 0x51, 0x7a, 0x32, 0x31, 0x43, 0x61, 0x72, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x06, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x36,
	0x0a, 0x06, 0x51, 0x7a, 0x32, 0x31, 0x4a, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52,
	0x05, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x22, 0x47, 0x0a, 0x11, 0x51, 0x5a, 0x32, 0x31, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x53, 0x68, 0x6f, 0x77, 0x41, 0x72, 0x72, 0x12, 0x32, 0x0a, 0x07, 0x53,
	0x68, 0x6f, 0x77, 0x41, 0x72, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6e,
	0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x5a, 0x32, 0x31, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x07, 0x53, 0x68, 0x6f, 0x77, 0x41, 0x72, 0x72, 0x22,
	0x9e, 0x01, 0x0a, 0x0e, 0x51, 0x5a, 0x32, 0x31, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x53, 0x68,
	0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x04, 0x53, 0x65, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x02, 0x4a, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x7a, 0x32, 0x31,
	0x4a, 0x73, 0x52, 0x02, 0x4a, 0x73, 0x12, 0x28, 0x0a, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x51, 0x7a, 0x32, 0x31, 0x43, 0x61, 0x72, 0x64, 0x52, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73,
	0x22, 0x7c, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x02,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x65, 0x61, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x04, 0x53, 0x65, 0x61, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x05, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x6f, 0x6e, 0x65,
	0x79, 0x18, 0x05, 0x20, 0x02, 0x28, 0x03, 0x52, 0x05, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x22, 0x5e,
	0x0a, 0x14, 0x51, 0x5a, 0x32, 0x31, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x53, 0x65, 0x74, 0x74,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x03, 0x53, 0x6c, 0x69, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x03, 0x53,
	0x6c, 0x69, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x22, 0x35,
	0x0a, 0x07, 0x52, 0x6f, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x4f, 0x64, 0x64, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x04, 0x4f, 0x64, 0x64, 0x73, 0x22, 0x36, 0x0a, 0x0f, 0x52, 0x6f, 0x62, 0x42, 0x61, 0x6e, 0x6b,
	0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x03, 0x72, 0x62, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x6f, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x03, 0x72, 0x62, 0x73, 0x22, 0x7f, 0x0a,
	0x10, 0x51, 0x5a, 0x32, 0x31, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x42, 0x61, 0x6e, 0x6b, 0x65,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x04, 0x53, 0x65, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x4f, 0x64, 0x64, 0x73, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x4f, 0x64, 0x64,
	0x73, 0x12, 0x2b, 0x0a, 0x03, 0x52, 0x62, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x62, 0x42, 0x61, 0x6e,
	0x6b, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x03, 0x52, 0x62, 0x70, 0x22, 0xec,
	0x01, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x53,
	0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x53, 0x65, 0x61, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x58, 0x6a, 0x42, 0x65, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05,
	0x58, 0x6a, 0x42, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x5a, 0x6a, 0x42, 0x65, 0x74, 0x18, 0x03,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x5a, 0x6a, 0x42, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x12, 0x28, 0x0a, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x7a, 0x32, 0x31,
	0x43, 0x61, 0x72, 0x64, 0x52, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x07, 0x20, 0x02,
	0x28, 0x03, 0x52, 0x05, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x08, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20,
	0x02, 0x28, 0x09, 0x52, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xf4, 0x01,
	0x0a, 0x10, 0x51, 0x5a, 0x32, 0x31, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x75,
	0x73, 0x68, 0x12, 0x22, 0x0a, 0x02, 0x55, 0x69, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x02, 0x55, 0x69, 0x12, 0x1e, 0x0a, 0x0a, 0x42, 0x61, 0x6e, 0x6b, 0x65, 0x72,
	0x53, 0x65, 0x61, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x42, 0x61, 0x6e, 0x6b,
	0x65, 0x72, 0x53, 0x65, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x74, 0x65, 0x70, 0x18, 0x03,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x53, 0x74, 0x65, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x69,
	0x6d, 0x65, 0x4f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x54, 0x69, 0x6d,
	0x65, 0x4f, 0x75, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x5a, 0x6a, 0x4f, 0x64, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x06, 0x5a, 0x6a, 0x4f, 0x64, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x58, 0x6a, 0x4f, 0x64,
	0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x58, 0x6a, 0x4f, 0x64, 0x64, 0x73,
	0x12, 0x22, 0x0a, 0x0c, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x75, 0x74,
	0x18, 0x08, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0c, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x69, 0x6d,
	0x65, 0x4f, 0x75, 0x74, 0x22, 0x41, 0x0a, 0x0f, 0x51, 0x5a, 0x32, 0x31, 0x47, 0x61, 0x6d, 0x65,
	0x44, 0x65, 0x73, 0x6b, 0x43, 0x66, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x44, 0x69, 0x66, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x44, 0x69, 0x66, 0x65, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07,
	0x54, 0x69, 0x6d, 0x65, 0x4f, 0x75, 0x74, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x6e, 0x65, 0x74,
	0x70, 0x72, 0x6f, 0x74, 0x6f,
}

var (
	file_GameMsg_QZ21_proto_rawDescOnce sync.Once
	file_GameMsg_QZ21_proto_rawDescData = file_GameMsg_QZ21_proto_rawDesc
)

func file_GameMsg_QZ21_proto_rawDescGZIP() []byte {
	file_GameMsg_QZ21_proto_rawDescOnce.Do(func() {
		file_GameMsg_QZ21_proto_rawDescData = protoimpl.X.CompressGZIP(file_GameMsg_QZ21_proto_rawDescData)
	})
	return file_GameMsg_QZ21_proto_rawDescData
}

var file_GameMsg_QZ21_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_GameMsg_QZ21_proto_goTypes = []interface{}{
	(*ChoseOdds)(nil),            // 0: netproto.ChoseOdds
	(*ChoseOddsRet)(nil),         // 1: netproto.ChoseOddsRet
	(*RoleOpt)(nil),              // 2: netproto.RoleOpt
	(*RoleOptRet)(nil),           // 3: netproto.RoleOptRet
	(*QZ21NotifyOdds)(nil),       // 4: netproto.QZ21NotifyOdds
	(*QZ21NotifyTimeOutOpt)(nil), // 5: netproto.QZ21NotifyTimeOutOpt
	(*QZ21NotifyChoseOdds)(nil),  // 6: netproto.QZ21NotifyChoseOdds
	(*QZ21NotifyRoleStatus)(nil), // 7: netproto.QZ21NotifyRoleStatus
	(*Qz21Card)(nil),             // 8: netproto.Qz21Card
	(*Qz21Js)(nil),               // 9: netproto.Qz21Js
	(*QZ21NotifyShowArr)(nil),    // 10: netproto.QZ21NotifyShowArr
	(*QZ21NotifyShow)(nil),       // 11: netproto.QZ21NotifyShow
	(*SettlementItem)(nil),       // 12: netproto.SettlementItem
	(*QZ21NotifySettlement)(nil), // 13: netproto.QZ21NotifySettlement
	(*RobItem)(nil),              // 14: netproto.RobItem
	(*RobBankerPlayer)(nil),      // 15: netproto.RobBankerPlayer
	(*QZ21NotifyBanker)(nil),     // 16: netproto.QZ21NotifyBanker
	(*UserInfo)(nil),             // 17: netproto.UserInfo
	(*QZ21GameInfoPush)(nil),     // 18: netproto.QZ21GameInfoPush
	(*QZ21GameDeskCfg)(nil),      // 19: netproto.QZ21GameDeskCfg
}
var file_GameMsg_QZ21_proto_depIdxs = []int32{
	11, // 0: netproto.QZ21NotifyShowArr.ShowArr:type_name -> netproto.QZ21NotifyShow
	9,  // 1: netproto.QZ21NotifyShow.Js:type_name -> netproto.Qz21Js
	8,  // 2: netproto.QZ21NotifyShow.Cards:type_name -> netproto.Qz21Card
	12, // 3: netproto.QZ21NotifySettlement.Sli:type_name -> netproto.SettlementItem
	14, // 4: netproto.RobBankerPlayer.rbs:type_name -> netproto.RobItem
	15, // 5: netproto.QZ21NotifyBanker.Rbp:type_name -> netproto.RobBankerPlayer
	8,  // 6: netproto.UserInfo.Cards:type_name -> netproto.Qz21Card
	17, // 7: netproto.QZ21GameInfoPush.Ui:type_name -> netproto.UserInfo
	8,  // [8:8] is the sub-list for method output_type
	8,  // [8:8] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_GameMsg_QZ21_proto_init() }
func file_GameMsg_QZ21_proto_init() {
	if File_GameMsg_QZ21_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_GameMsg_QZ21_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChoseOdds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_QZ21_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChoseOddsRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_QZ21_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleOpt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_QZ21_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleOptRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_QZ21_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QZ21NotifyOdds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_QZ21_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QZ21NotifyTimeOutOpt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_QZ21_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QZ21NotifyChoseOdds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_QZ21_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QZ21NotifyRoleStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_QZ21_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qz21Card); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_QZ21_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qz21Js); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_QZ21_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QZ21NotifyShowArr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_QZ21_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QZ21NotifyShow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_QZ21_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SettlementItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_QZ21_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QZ21NotifySettlement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_QZ21_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RobItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_QZ21_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RobBankerPlayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_QZ21_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QZ21NotifyBanker); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_QZ21_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_QZ21_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QZ21GameInfoPush); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_QZ21_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QZ21GameDeskCfg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_GameMsg_QZ21_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_GameMsg_QZ21_proto_goTypes,
		DependencyIndexes: file_GameMsg_QZ21_proto_depIdxs,
		MessageInfos:      file_GameMsg_QZ21_proto_msgTypes,
	}.Build()
	File_GameMsg_QZ21_proto = out.File
	file_GameMsg_QZ21_proto_rawDesc = nil
	file_GameMsg_QZ21_proto_goTypes = nil
	file_GameMsg_QZ21_proto_depIdxs = nil
}
