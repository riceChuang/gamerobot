// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: GameMsg_DFDC.proto

package netproto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//设置
type DFDC_Setting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BetCount       []int32                `protobuf:"varint,1,rep,name=BetCount" json:"BetCount,omitempty"`            //一次下注的数量
	ReelSetting    []*DFDC_ReelSetting    `protobuf:"bytes,2,rep,name=ReelSetting" json:"ReelSetting,omitempty"`       //動態輪軸
	RowCounts      *int32                 `protobuf:"varint,3,opt,name=RowCounts" json:"RowCounts,omitempty"`          //顯示結算的行數
	TotalPayLine   *int32                 `protobuf:"varint,4,req,name=TotalPayLine" json:"TotalPayLine,omitempty"`    //總共多少賠付線(非全線讀SlotPayLine表，全線賠付為定值)
	BigWinStep     []int32                `protobuf:"varint,5,rep,name=BigWinStep" json:"BigWinStep,omitempty"`        //BigWin各階段演出條件
	PayLineMode    *int32                 `protobuf:"varint,6,req,name=PayLineMode" json:"PayLineMode,omitempty"`      //賠付線類型 (0.非全線, 1.全線)
	SymbolPayTable []*DFDC_SymbolPayTable `protobuf:"bytes,7,rep,name=SymbolPayTable" json:"SymbolPayTable,omitempty"` //符號倍率設定
}

func (x *DFDC_Setting) Reset() {
	*x = DFDC_Setting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_DFDC_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DFDC_Setting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DFDC_Setting) ProtoMessage() {}

func (x *DFDC_Setting) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_DFDC_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DFDC_Setting.ProtoReflect.Descriptor instead.
func (*DFDC_Setting) Descriptor() ([]byte, []int) {
	return file_GameMsg_DFDC_proto_rawDescGZIP(), []int{0}
}

func (x *DFDC_Setting) GetBetCount() []int32 {
	if x != nil {
		return x.BetCount
	}
	return nil
}

func (x *DFDC_Setting) GetReelSetting() []*DFDC_ReelSetting {
	if x != nil {
		return x.ReelSetting
	}
	return nil
}

func (x *DFDC_Setting) GetRowCounts() int32 {
	if x != nil && x.RowCounts != nil {
		return *x.RowCounts
	}
	return 0
}

func (x *DFDC_Setting) GetTotalPayLine() int32 {
	if x != nil && x.TotalPayLine != nil {
		return *x.TotalPayLine
	}
	return 0
}

func (x *DFDC_Setting) GetBigWinStep() []int32 {
	if x != nil {
		return x.BigWinStep
	}
	return nil
}

func (x *DFDC_Setting) GetPayLineMode() int32 {
	if x != nil && x.PayLineMode != nil {
		return *x.PayLineMode
	}
	return 0
}

func (x *DFDC_Setting) GetSymbolPayTable() []*DFDC_SymbolPayTable {
	if x != nil {
		return x.SymbolPayTable
	}
	return nil
}

//遊戲要付費或免費
type DFDC_FreeOrPayMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FreeCount   *int32              `protobuf:"varint,1,req,name=FreeCount" json:"FreeCount,omitempty"`    //免費次數(0.付費)
	ReelSetting []*DFDC_ReelSetting `protobuf:"bytes,2,rep,name=ReelSetting" json:"ReelSetting,omitempty"` //動態輪軸
}

func (x *DFDC_FreeOrPayMsg) Reset() {
	*x = DFDC_FreeOrPayMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_DFDC_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DFDC_FreeOrPayMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DFDC_FreeOrPayMsg) ProtoMessage() {}

func (x *DFDC_FreeOrPayMsg) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_DFDC_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DFDC_FreeOrPayMsg.ProtoReflect.Descriptor instead.
func (*DFDC_FreeOrPayMsg) Descriptor() ([]byte, []int) {
	return file_GameMsg_DFDC_proto_rawDescGZIP(), []int{1}
}

func (x *DFDC_FreeOrPayMsg) GetFreeCount() int32 {
	if x != nil && x.FreeCount != nil {
		return *x.FreeCount
	}
	return 0
}

func (x *DFDC_FreeOrPayMsg) GetReelSetting() []*DFDC_ReelSetting {
	if x != nil {
		return x.ReelSetting
	}
	return nil
}

//輪軸的圖片順序設置
type DFDC_ReelSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RealID      *int32              `protobuf:"varint,1,req,name=RealID" json:"RealID,omitempty"`          //輪軸編號
	RowIndex    *int32              `protobuf:"varint,2,opt,name=RowIndex" json:"RowIndex,omitempty"`      //行數
	SymbolGroup []*DFDC_SymbolGroup `protobuf:"bytes,3,rep,name=SymbolGroup" json:"SymbolGroup,omitempty"` //該輪軸群組的符號
}

func (x *DFDC_ReelSetting) Reset() {
	*x = DFDC_ReelSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_DFDC_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DFDC_ReelSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DFDC_ReelSetting) ProtoMessage() {}

func (x *DFDC_ReelSetting) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_DFDC_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DFDC_ReelSetting.ProtoReflect.Descriptor instead.
func (*DFDC_ReelSetting) Descriptor() ([]byte, []int) {
	return file_GameMsg_DFDC_proto_rawDescGZIP(), []int{2}
}

func (x *DFDC_ReelSetting) GetRealID() int32 {
	if x != nil && x.RealID != nil {
		return *x.RealID
	}
	return 0
}

func (x *DFDC_ReelSetting) GetRowIndex() int32 {
	if x != nil && x.RowIndex != nil {
		return *x.RowIndex
	}
	return 0
}

func (x *DFDC_ReelSetting) GetSymbolGroup() []*DFDC_SymbolGroup {
	if x != nil {
		return x.SymbolGroup
	}
	return nil
}

//該輪軸群組的符號
type DFDC_SymbolGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SymbolID   *int32  `protobuf:"varint,1,req,name=SymbolID" json:"SymbolID,omitempty"`    //符號
	SymbolName *string `protobuf:"bytes,2,req,name=SymbolName" json:"SymbolName,omitempty"` //符號Name(client圖片使用) 符號類型(符號可組合，e.g. w1,w2,w3代表w1+w2+w3的組合，並以w1為主要辨識符號),s = scatter,w1~wN = wild (wj = 普通=> e.g. 女王 ; w2 = 特殊=> e.g. 法老),p1~pN 一般的符號,b1~bN bonus的符號
}

func (x *DFDC_SymbolGroup) Reset() {
	*x = DFDC_SymbolGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_DFDC_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DFDC_SymbolGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DFDC_SymbolGroup) ProtoMessage() {}

func (x *DFDC_SymbolGroup) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_DFDC_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DFDC_SymbolGroup.ProtoReflect.Descriptor instead.
func (*DFDC_SymbolGroup) Descriptor() ([]byte, []int) {
	return file_GameMsg_DFDC_proto_rawDescGZIP(), []int{3}
}

func (x *DFDC_SymbolGroup) GetSymbolID() int32 {
	if x != nil && x.SymbolID != nil {
		return *x.SymbolID
	}
	return 0
}

func (x *DFDC_SymbolGroup) GetSymbolName() string {
	if x != nil && x.SymbolName != nil {
		return *x.SymbolName
	}
	return ""
}

//游戏輪軸结果
type DFDC_GameResultReel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SymbolID         []int32              `protobuf:"varint,1,rep,name=SymbolID" json:"SymbolID,omitempty"`                 //結果起始符號
	ReelSetting      []*DFDC_ReelSetting  `protobuf:"bytes,2,rep,name=ReelSetting" json:"ReelSetting,omitempty"`            //各輪軸資訊
	PayLineGroup     []*DFDC_PayLineGroup `protobuf:"bytes,3,rep,name=PayLineGroup" json:"PayLineGroup,omitempty"`          //	賠付線
	PayAllGroup      []*DFDC_PayAllGroup  `protobuf:"bytes,4,rep,name=PayAllGroup" json:"PayAllGroup,omitempty"`            //	全線賠付內容
	WinMoney         *int64               `protobuf:"varint,5,opt,name=WinMoney" json:"WinMoney,omitempty"`                 //結算金額
	FreeGameWinMoney *int64               `protobuf:"varint,6,opt,name=FreeGameWinMoney" json:"FreeGameWinMoney,omitempty"` //免費遊戲總結算金額
}

func (x *DFDC_GameResultReel) Reset() {
	*x = DFDC_GameResultReel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_DFDC_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DFDC_GameResultReel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DFDC_GameResultReel) ProtoMessage() {}

func (x *DFDC_GameResultReel) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_DFDC_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DFDC_GameResultReel.ProtoReflect.Descriptor instead.
func (*DFDC_GameResultReel) Descriptor() ([]byte, []int) {
	return file_GameMsg_DFDC_proto_rawDescGZIP(), []int{4}
}

func (x *DFDC_GameResultReel) GetSymbolID() []int32 {
	if x != nil {
		return x.SymbolID
	}
	return nil
}

func (x *DFDC_GameResultReel) GetReelSetting() []*DFDC_ReelSetting {
	if x != nil {
		return x.ReelSetting
	}
	return nil
}

func (x *DFDC_GameResultReel) GetPayLineGroup() []*DFDC_PayLineGroup {
	if x != nil {
		return x.PayLineGroup
	}
	return nil
}

func (x *DFDC_GameResultReel) GetPayAllGroup() []*DFDC_PayAllGroup {
	if x != nil {
		return x.PayAllGroup
	}
	return nil
}

func (x *DFDC_GameResultReel) GetWinMoney() int64 {
	if x != nil && x.WinMoney != nil {
		return *x.WinMoney
	}
	return 0
}

func (x *DFDC_GameResultReel) GetFreeGameWinMoney() int64 {
	if x != nil && x.FreeGameWinMoney != nil {
		return *x.FreeGameWinMoney
	}
	return 0
}

//全線賠付內容
type DFDC_PayAllGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayLineDetail []*DFDC_PayLineDetail `protobuf:"bytes,1,rep,name=PayLineDetail" json:"PayLineDetail,omitempty"` //連線與得獎符號
	PayAllDetail  []*DFDC_PayAllDetail  `protobuf:"bytes,2,rep,name=PayAllDetail" json:"PayAllDetail,omitempty"`   //全線賠付細節
}

func (x *DFDC_PayAllGroup) Reset() {
	*x = DFDC_PayAllGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_DFDC_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DFDC_PayAllGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DFDC_PayAllGroup) ProtoMessage() {}

func (x *DFDC_PayAllGroup) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_DFDC_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DFDC_PayAllGroup.ProtoReflect.Descriptor instead.
func (*DFDC_PayAllGroup) Descriptor() ([]byte, []int) {
	return file_GameMsg_DFDC_proto_rawDescGZIP(), []int{5}
}

func (x *DFDC_PayAllGroup) GetPayLineDetail() []*DFDC_PayLineDetail {
	if x != nil {
		return x.PayLineDetail
	}
	return nil
}

func (x *DFDC_PayAllGroup) GetPayAllDetail() []*DFDC_PayAllDetail {
	if x != nil {
		return x.PayAllDetail
	}
	return nil
}

//全線賠付細節
type DFDC_PayAllDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SymbolName   *string `protobuf:"bytes,1,req,name=SymbolName" json:"SymbolName,omitempty"`      //符號名稱
	PayRate      *int32  `protobuf:"varint,2,req,name=PayRate" json:"PayRate,omitempty"`           //該符號賠率
	PayCount     *int32  `protobuf:"varint,3,req,name=PayCount" json:"PayCount,omitempty"`         //符號連線個數
	WayCount     *int32  `protobuf:"varint,4,req,name=WayCount" json:"WayCount,omitempty"`         //符號連線總和
	SymbolIDList []int32 `protobuf:"varint,5,rep,name=SymbolIDList" json:"SymbolIDList,omitempty"` //該連線符號ID列表
	FeaturePays  *bool   `protobuf:"varint,6,req,name=FeaturePays" json:"FeaturePays,omitempty"`   //是否觸發特殊事件(Jackpot、freeSpin)
}

func (x *DFDC_PayAllDetail) Reset() {
	*x = DFDC_PayAllDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_DFDC_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DFDC_PayAllDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DFDC_PayAllDetail) ProtoMessage() {}

func (x *DFDC_PayAllDetail) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_DFDC_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DFDC_PayAllDetail.ProtoReflect.Descriptor instead.
func (*DFDC_PayAllDetail) Descriptor() ([]byte, []int) {
	return file_GameMsg_DFDC_proto_rawDescGZIP(), []int{6}
}

func (x *DFDC_PayAllDetail) GetSymbolName() string {
	if x != nil && x.SymbolName != nil {
		return *x.SymbolName
	}
	return ""
}

func (x *DFDC_PayAllDetail) GetPayRate() int32 {
	if x != nil && x.PayRate != nil {
		return *x.PayRate
	}
	return 0
}

func (x *DFDC_PayAllDetail) GetPayCount() int32 {
	if x != nil && x.PayCount != nil {
		return *x.PayCount
	}
	return 0
}

func (x *DFDC_PayAllDetail) GetWayCount() int32 {
	if x != nil && x.WayCount != nil {
		return *x.WayCount
	}
	return 0
}

func (x *DFDC_PayAllDetail) GetSymbolIDList() []int32 {
	if x != nil {
		return x.SymbolIDList
	}
	return nil
}

func (x *DFDC_PayAllDetail) GetFeaturePays() bool {
	if x != nil && x.FeaturePays != nil {
		return *x.FeaturePays
	}
	return false
}

//賠付線結果(派彩線)
type DFDC_PayLineGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayLineID     *int32                `protobuf:"varint,1,req,name=PayLineID" json:"PayLineID,omitempty"`        //賠付線號碼
	PayLineDetail []*DFDC_PayLineDetail `protobuf:"bytes,2,rep,name=PayLineDetail" json:"PayLineDetail,omitempty"` //連線與得獎符號
	WinMoney      *int32                `protobuf:"varint,3,opt,name=WinMoney" json:"WinMoney,omitempty"`          //賠付線金額
}

func (x *DFDC_PayLineGroup) Reset() {
	*x = DFDC_PayLineGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_DFDC_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DFDC_PayLineGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DFDC_PayLineGroup) ProtoMessage() {}

func (x *DFDC_PayLineGroup) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_DFDC_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DFDC_PayLineGroup.ProtoReflect.Descriptor instead.
func (*DFDC_PayLineGroup) Descriptor() ([]byte, []int) {
	return file_GameMsg_DFDC_proto_rawDescGZIP(), []int{7}
}

func (x *DFDC_PayLineGroup) GetPayLineID() int32 {
	if x != nil && x.PayLineID != nil {
		return *x.PayLineID
	}
	return 0
}

func (x *DFDC_PayLineGroup) GetPayLineDetail() []*DFDC_PayLineDetail {
	if x != nil {
		return x.PayLineDetail
	}
	return nil
}

func (x *DFDC_PayLineGroup) GetWinMoney() int32 {
	if x != nil && x.WinMoney != nil {
		return *x.WinMoney
	}
	return 0
}

//連線與得獎符號
type DFDC_PayLineDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReelID    *int32 `protobuf:"varint,1,req,name=ReelID" json:"ReelID,omitempty"` //第幾個輪軸
	SymbolID  *int32 `protobuf:"varint,2,req,name=SymbolID" json:"SymbolID,omitempty"`
	Blink     *bool  `protobuf:"varint,3,req,name=Blink" json:"Blink,omitempty"`         //是否亮符號	//開獎符號需亮
	Line      *bool  `protobuf:"varint,4,req,name=Line" json:"Line,omitempty"`           //是否畫線		//*
	BetNumber *int32 `protobuf:"varint,5,opt,name=BetNumber" json:"BetNumber,omitempty"` //是否乘倍數目		//*
	BetMoney  *int64 `protobuf:"varint,6,opt,name=BetMoney" json:"BetMoney,omitempty"`   //是否乘倍金額		//*
}

func (x *DFDC_PayLineDetail) Reset() {
	*x = DFDC_PayLineDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_DFDC_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DFDC_PayLineDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DFDC_PayLineDetail) ProtoMessage() {}

func (x *DFDC_PayLineDetail) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_DFDC_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DFDC_PayLineDetail.ProtoReflect.Descriptor instead.
func (*DFDC_PayLineDetail) Descriptor() ([]byte, []int) {
	return file_GameMsg_DFDC_proto_rawDescGZIP(), []int{8}
}

func (x *DFDC_PayLineDetail) GetReelID() int32 {
	if x != nil && x.ReelID != nil {
		return *x.ReelID
	}
	return 0
}

func (x *DFDC_PayLineDetail) GetSymbolID() int32 {
	if x != nil && x.SymbolID != nil {
		return *x.SymbolID
	}
	return 0
}

func (x *DFDC_PayLineDetail) GetBlink() bool {
	if x != nil && x.Blink != nil {
		return *x.Blink
	}
	return false
}

func (x *DFDC_PayLineDetail) GetLine() bool {
	if x != nil && x.Line != nil {
		return *x.Line
	}
	return false
}

func (x *DFDC_PayLineDetail) GetBetNumber() int32 {
	if x != nil && x.BetNumber != nil {
		return *x.BetNumber
	}
	return 0
}

func (x *DFDC_PayLineDetail) GetBetMoney() int64 {
	if x != nil && x.BetMoney != nil {
		return *x.BetMoney
	}
	return 0
}

//遊戲狀態
type DFDC_GameStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State *int32 `protobuf:"varint,1,req,name=State" json:"State,omitempty"` //状态
}

func (x *DFDC_GameStatus) Reset() {
	*x = DFDC_GameStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_DFDC_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DFDC_GameStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DFDC_GameStatus) ProtoMessage() {}

func (x *DFDC_GameStatus) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_DFDC_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DFDC_GameStatus.ProtoReflect.Descriptor instead.
func (*DFDC_GameStatus) Descriptor() ([]byte, []int) {
	return file_GameMsg_DFDC_proto_rawDescGZIP(), []int{9}
}

func (x *DFDC_GameStatus) GetState() int32 {
	if x != nil && x.State != nil {
		return *x.State
	}
	return 0
}

//下注金額
type DFDC_StartBet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Money        *int64 `protobuf:"varint,1,req,name=Money" json:"Money,omitempty"`
	GoldenSymbol *int32 `protobuf:"varint,2,req,name=GoldenSymbol" json:"GoldenSymbol,omitempty"`
}

func (x *DFDC_StartBet) Reset() {
	*x = DFDC_StartBet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_DFDC_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DFDC_StartBet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DFDC_StartBet) ProtoMessage() {}

func (x *DFDC_StartBet) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_DFDC_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DFDC_StartBet.ProtoReflect.Descriptor instead.
func (*DFDC_StartBet) Descriptor() ([]byte, []int) {
	return file_GameMsg_DFDC_proto_rawDescGZIP(), []int{10}
}

func (x *DFDC_StartBet) GetMoney() int64 {
	if x != nil && x.Money != nil {
		return *x.Money
	}
	return 0
}

func (x *DFDC_StartBet) GetGoldenSymbol() int32 {
	if x != nil && x.GoldenSymbol != nil {
		return *x.GoldenSymbol
	}
	return 0
}

//下注回覆
type DFDC_BetRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret   *int32 `protobuf:"varint,1,req,name=Ret" json:"Ret,omitempty"`     //0下注成功，-1用户金额不足，-2下注的类型未找到，-3庄家不能下注，-4此类下注已达到上限，-5非下注階段，-6用户金额小於下注限制
	Money *int64 `protobuf:"varint,2,req,name=Money" json:"Money,omitempty"` //用户的下注金額
}

func (x *DFDC_BetRet) Reset() {
	*x = DFDC_BetRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_DFDC_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DFDC_BetRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DFDC_BetRet) ProtoMessage() {}

func (x *DFDC_BetRet) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_DFDC_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DFDC_BetRet.ProtoReflect.Descriptor instead.
func (*DFDC_BetRet) Descriptor() ([]byte, []int) {
	return file_GameMsg_DFDC_proto_rawDescGZIP(), []int{11}
}

func (x *DFDC_BetRet) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *DFDC_BetRet) GetMoney() int64 {
	if x != nil && x.Money != nil {
		return *x.Money
	}
	return 0
}

//查詢slot jackpot
type DFDC_GetJackpotMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerID  *int32 `protobuf:"varint,1,req,name=ServerID" json:"ServerID,omitempty"`
	FlagID    *int32 `protobuf:"varint,2,req,name=FlagID" json:"FlagID,omitempty"`
	TableNo   *int32 `protobuf:"varint,3,req,name=TableNo" json:"TableNo,omitempty"`
	JackpotID *int32 `protobuf:"varint,4,req,name=JackpotID" json:"JackpotID,omitempty"`
}

func (x *DFDC_GetJackpotMsg) Reset() {
	*x = DFDC_GetJackpotMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_DFDC_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DFDC_GetJackpotMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DFDC_GetJackpotMsg) ProtoMessage() {}

func (x *DFDC_GetJackpotMsg) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_DFDC_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DFDC_GetJackpotMsg.ProtoReflect.Descriptor instead.
func (*DFDC_GetJackpotMsg) Descriptor() ([]byte, []int) {
	return file_GameMsg_DFDC_proto_rawDescGZIP(), []int{12}
}

func (x *DFDC_GetJackpotMsg) GetServerID() int32 {
	if x != nil && x.ServerID != nil {
		return *x.ServerID
	}
	return 0
}

func (x *DFDC_GetJackpotMsg) GetFlagID() int32 {
	if x != nil && x.FlagID != nil {
		return *x.FlagID
	}
	return 0
}

func (x *DFDC_GetJackpotMsg) GetTableNo() int32 {
	if x != nil && x.TableNo != nil {
		return *x.TableNo
	}
	return 0
}

func (x *DFDC_GetJackpotMsg) GetJackpotID() int32 {
	if x != nil && x.JackpotID != nil {
		return *x.JackpotID
	}
	return 0
}

//回傳slot jackpot
type DFDC_GetJackpotRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerID    *int32 `protobuf:"varint,1,req,name=ServerID" json:"ServerID,omitempty"`
	FlagID      *int32 `protobuf:"varint,2,req,name=FlagID" json:"FlagID,omitempty"`
	TableNo     *int32 `protobuf:"varint,3,req,name=TableNo" json:"TableNo,omitempty"`
	JackpotID   *int32 `protobuf:"varint,4,req,name=JackpotID" json:"JackpotID,omitempty"`
	SpinStack   *int64 `protobuf:"varint,5,req,name=SpinStack" json:"SpinStack,omitempty"`
	PoolAmount  *int64 `protobuf:"varint,6,req,name=PoolAmount" json:"PoolAmount,omitempty"`
	JPAmountOut *int64 `protobuf:"varint,7,req,name=JPAmountOut" json:"JPAmountOut,omitempty"`
}

func (x *DFDC_GetJackpotRet) Reset() {
	*x = DFDC_GetJackpotRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_DFDC_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DFDC_GetJackpotRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DFDC_GetJackpotRet) ProtoMessage() {}

func (x *DFDC_GetJackpotRet) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_DFDC_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DFDC_GetJackpotRet.ProtoReflect.Descriptor instead.
func (*DFDC_GetJackpotRet) Descriptor() ([]byte, []int) {
	return file_GameMsg_DFDC_proto_rawDescGZIP(), []int{13}
}

func (x *DFDC_GetJackpotRet) GetServerID() int32 {
	if x != nil && x.ServerID != nil {
		return *x.ServerID
	}
	return 0
}

func (x *DFDC_GetJackpotRet) GetFlagID() int32 {
	if x != nil && x.FlagID != nil {
		return *x.FlagID
	}
	return 0
}

func (x *DFDC_GetJackpotRet) GetTableNo() int32 {
	if x != nil && x.TableNo != nil {
		return *x.TableNo
	}
	return 0
}

func (x *DFDC_GetJackpotRet) GetJackpotID() int32 {
	if x != nil && x.JackpotID != nil {
		return *x.JackpotID
	}
	return 0
}

func (x *DFDC_GetJackpotRet) GetSpinStack() int64 {
	if x != nil && x.SpinStack != nil {
		return *x.SpinStack
	}
	return 0
}

func (x *DFDC_GetJackpotRet) GetPoolAmount() int64 {
	if x != nil && x.PoolAmount != nil {
		return *x.PoolAmount
	}
	return 0
}

func (x *DFDC_GetJackpotRet) GetJPAmountOut() int64 {
	if x != nil && x.JPAmountOut != nil {
		return *x.JPAmountOut
	}
	return 0
}

//S2C更新Jackpot值
type DFDC_JackpotPoolS2CMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JackpotPoolID []*DFDC_JackpotPoolDetail `protobuf:"bytes,1,rep,name=JackpotPoolID" json:"JackpotPoolID,omitempty"`
}

func (x *DFDC_JackpotPoolS2CMsg) Reset() {
	*x = DFDC_JackpotPoolS2CMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_DFDC_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DFDC_JackpotPoolS2CMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DFDC_JackpotPoolS2CMsg) ProtoMessage() {}

func (x *DFDC_JackpotPoolS2CMsg) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_DFDC_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DFDC_JackpotPoolS2CMsg.ProtoReflect.Descriptor instead.
func (*DFDC_JackpotPoolS2CMsg) Descriptor() ([]byte, []int) {
	return file_GameMsg_DFDC_proto_rawDescGZIP(), []int{14}
}

func (x *DFDC_JackpotPoolS2CMsg) GetJackpotPoolID() []*DFDC_JackpotPoolDetail {
	if x != nil {
		return x.JackpotPoolID
	}
	return nil
}

//Jackpot水池內容
type DFDC_JackpotPoolDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JackpotID *int32  `protobuf:"varint,1,req,name=JackpotID" json:"JackpotID,omitempty"` // 1:巨獎 2:大獎 3:中獎 4:小獎
	Syspool   *int64  `protobuf:"varint,2,req,name=Syspool" json:"Syspool,omitempty"`     // 水池值
	Level     *string `protobuf:"bytes,3,opt,name=Level" json:"Level,omitempty"`          // 獎項名稱:Grand/Major/Minor/Mini
}

func (x *DFDC_JackpotPoolDetail) Reset() {
	*x = DFDC_JackpotPoolDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_DFDC_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DFDC_JackpotPoolDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DFDC_JackpotPoolDetail) ProtoMessage() {}

func (x *DFDC_JackpotPoolDetail) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_DFDC_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DFDC_JackpotPoolDetail.ProtoReflect.Descriptor instead.
func (*DFDC_JackpotPoolDetail) Descriptor() ([]byte, []int) {
	return file_GameMsg_DFDC_proto_rawDescGZIP(), []int{15}
}

func (x *DFDC_JackpotPoolDetail) GetJackpotID() int32 {
	if x != nil && x.JackpotID != nil {
		return *x.JackpotID
	}
	return 0
}

func (x *DFDC_JackpotPoolDetail) GetSyspool() int64 {
	if x != nil && x.Syspool != nil {
		return *x.Syspool
	}
	return 0
}

func (x *DFDC_JackpotPoolDetail) GetLevel() string {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return ""
}

//多財多福黃金符號
type DFDC_GoldenSymbolList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoldenDetail []*DFDC_GoldenSymbolDetail `protobuf:"bytes,1,rep,name=GoldenDetail" json:"GoldenDetail,omitempty"`
}

func (x *DFDC_GoldenSymbolList) Reset() {
	*x = DFDC_GoldenSymbolList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_DFDC_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DFDC_GoldenSymbolList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DFDC_GoldenSymbolList) ProtoMessage() {}

func (x *DFDC_GoldenSymbolList) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_DFDC_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DFDC_GoldenSymbolList.ProtoReflect.Descriptor instead.
func (*DFDC_GoldenSymbolList) Descriptor() ([]byte, []int) {
	return file_GameMsg_DFDC_proto_rawDescGZIP(), []int{16}
}

func (x *DFDC_GoldenSymbolList) GetGoldenDetail() []*DFDC_GoldenSymbolDetail {
	if x != nil {
		return x.GoldenDetail
	}
	return nil
}

//多財多福黃金符號內容
type DFDC_GoldenSymbolDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbols *int32 `protobuf:"varint,1,req,name=Symbols" json:"Symbols,omitempty"`
	Credits *int32 `protobuf:"varint,2,req,name=Credits" json:"Credits,omitempty"`
}

func (x *DFDC_GoldenSymbolDetail) Reset() {
	*x = DFDC_GoldenSymbolDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_DFDC_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DFDC_GoldenSymbolDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DFDC_GoldenSymbolDetail) ProtoMessage() {}

func (x *DFDC_GoldenSymbolDetail) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_DFDC_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DFDC_GoldenSymbolDetail.ProtoReflect.Descriptor instead.
func (*DFDC_GoldenSymbolDetail) Descriptor() ([]byte, []int) {
	return file_GameMsg_DFDC_proto_rawDescGZIP(), []int{17}
}

func (x *DFDC_GoldenSymbolDetail) GetSymbols() int32 {
	if x != nil && x.Symbols != nil {
		return *x.Symbols
	}
	return 0
}

func (x *DFDC_GoldenSymbolDetail) GetCredits() int32 {
	if x != nil && x.Credits != nil {
		return *x.Credits
	}
	return 0
}

//多財多福 Bonus Game
type DFDC_BonusGame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BonusDetail []*DFDC_BonusGameDetail `protobuf:"bytes,1,rep,name=BonusDetail" json:"BonusDetail,omitempty"` //此組數為最終總共開幾組
	Money       *int64                  `protobuf:"varint,2,req,name=Money" json:"Money,omitempty"`            //Bonus Game結果總金額
}

func (x *DFDC_BonusGame) Reset() {
	*x = DFDC_BonusGame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_DFDC_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DFDC_BonusGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DFDC_BonusGame) ProtoMessage() {}

func (x *DFDC_BonusGame) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_DFDC_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DFDC_BonusGame.ProtoReflect.Descriptor instead.
func (*DFDC_BonusGame) Descriptor() ([]byte, []int) {
	return file_GameMsg_DFDC_proto_rawDescGZIP(), []int{18}
}

func (x *DFDC_BonusGame) GetBonusDetail() []*DFDC_BonusGameDetail {
	if x != nil {
		return x.BonusDetail
	}
	return nil
}

func (x *DFDC_BonusGame) GetMoney() int64 {
	if x != nil && x.Money != nil {
		return *x.Money
	}
	return 0
}

//多財多福 Bonus Game內容
type DFDC_BonusGameDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    *int32 `protobuf:"varint,1,req,name=Id" json:"Id,omitempty"`       //流水號
	Place *int32 `protobuf:"varint,2,req,name=Place" json:"Place,omitempty"` //在哪個位置(起始值1 未開啟0)
	Icon  *int32 `protobuf:"varint,3,req,name=Icon" json:"Icon,omitempty"`   //圖片名稱
}

func (x *DFDC_BonusGameDetail) Reset() {
	*x = DFDC_BonusGameDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_DFDC_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DFDC_BonusGameDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DFDC_BonusGameDetail) ProtoMessage() {}

func (x *DFDC_BonusGameDetail) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_DFDC_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DFDC_BonusGameDetail.ProtoReflect.Descriptor instead.
func (*DFDC_BonusGameDetail) Descriptor() ([]byte, []int) {
	return file_GameMsg_DFDC_proto_rawDescGZIP(), []int{19}
}

func (x *DFDC_BonusGameDetail) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *DFDC_BonusGameDetail) GetPlace() int32 {
	if x != nil && x.Place != nil {
		return *x.Place
	}
	return 0
}

func (x *DFDC_BonusGameDetail) GetIcon() int32 {
	if x != nil && x.Icon != nil {
		return *x.Icon
	}
	return 0
}

//多財多福 符號倍率設定
type DFDC_SymbolPayTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SymbolName *string `protobuf:"bytes,1,req,name=SymbolName" json:"SymbolName,omitempty"` //Symbol圖片名稱
	Count      *int32  `protobuf:"varint,2,req,name=Count" json:"Count,omitempty"`          //連續幾個Symbol
	Rate       *int32  `protobuf:"varint,3,req,name=Rate" json:"Rate,omitempty"`            //該項Symbol倍率
}

func (x *DFDC_SymbolPayTable) Reset() {
	*x = DFDC_SymbolPayTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_DFDC_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DFDC_SymbolPayTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DFDC_SymbolPayTable) ProtoMessage() {}

func (x *DFDC_SymbolPayTable) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_DFDC_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DFDC_SymbolPayTable.ProtoReflect.Descriptor instead.
func (*DFDC_SymbolPayTable) Descriptor() ([]byte, []int) {
	return file_GameMsg_DFDC_proto_rawDescGZIP(), []int{20}
}

func (x *DFDC_SymbolPayTable) GetSymbolName() string {
	if x != nil && x.SymbolName != nil {
		return *x.SymbolName
	}
	return ""
}

func (x *DFDC_SymbolPayTable) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *DFDC_SymbolPayTable) GetRate() int32 {
	if x != nil && x.Rate != nil {
		return *x.Rate
	}
	return 0
}

//多財多福 讀取額外遊戲Detail
type DFDC_JackpotBonusGameDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID *int32 `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"` //玩家ID
	TurnID *int32 `protobuf:"varint,2,req,name=TurnID" json:"TurnID,omitempty"` //順序ID
	Place  *int32 `protobuf:"varint,3,req,name=Place" json:"Place,omitempty"`   //哪個位置
	Icon   *int32 `protobuf:"varint,4,req,name=Icon" json:"Icon,omitempty"`     //圖片名稱
}

func (x *DFDC_JackpotBonusGameDetail) Reset() {
	*x = DFDC_JackpotBonusGameDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_DFDC_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DFDC_JackpotBonusGameDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DFDC_JackpotBonusGameDetail) ProtoMessage() {}

func (x *DFDC_JackpotBonusGameDetail) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_DFDC_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DFDC_JackpotBonusGameDetail.ProtoReflect.Descriptor instead.
func (*DFDC_JackpotBonusGameDetail) Descriptor() ([]byte, []int) {
	return file_GameMsg_DFDC_proto_rawDescGZIP(), []int{21}
}

func (x *DFDC_JackpotBonusGameDetail) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *DFDC_JackpotBonusGameDetail) GetTurnID() int32 {
	if x != nil && x.TurnID != nil {
		return *x.TurnID
	}
	return 0
}

func (x *DFDC_JackpotBonusGameDetail) GetPlace() int32 {
	if x != nil && x.Place != nil {
		return *x.Place
	}
	return 0
}

func (x *DFDC_JackpotBonusGameDetail) GetIcon() int32 {
	if x != nil && x.Icon != nil {
		return *x.Icon
	}
	return 0
}

//多財多福 額外遊戲寫入
type DFDC_JackpotBonusGameRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID       *int32  `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`            //玩家ID
	ChvRecordStr *string `protobuf:"bytes,2,req,name=chvRecordStr" json:"chvRecordStr,omitempty"` //9筆小遊戲內容 ("1,0,1|2,0,1|3,0,2|4,0,3|5,0,3|6,0,1|7,0,0|8,0,0|9,0,0")
	Winmoney     *int64  `protobuf:"varint,3,req,name=winmoney" json:"winmoney,omitempty"`        //jackpot贏錢
}

func (x *DFDC_JackpotBonusGameRecord) Reset() {
	*x = DFDC_JackpotBonusGameRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_DFDC_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DFDC_JackpotBonusGameRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DFDC_JackpotBonusGameRecord) ProtoMessage() {}

func (x *DFDC_JackpotBonusGameRecord) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_DFDC_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DFDC_JackpotBonusGameRecord.ProtoReflect.Descriptor instead.
func (*DFDC_JackpotBonusGameRecord) Descriptor() ([]byte, []int) {
	return file_GameMsg_DFDC_proto_rawDescGZIP(), []int{22}
}

func (x *DFDC_JackpotBonusGameRecord) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *DFDC_JackpotBonusGameRecord) GetChvRecordStr() string {
	if x != nil && x.ChvRecordStr != nil {
		return *x.ChvRecordStr
	}
	return ""
}

func (x *DFDC_JackpotBonusGameRecord) GetWinmoney() int64 {
	if x != nil && x.Winmoney != nil {
		return *x.Winmoney
	}
	return 0
}

//多財多福 JackpotBonusGame
type DFDC_JackpotBonusGame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BonusDetail []*DFDC_JackpotBonusGameDetail `protobuf:"bytes,1,rep,name=BonusDetail" json:"BonusDetail,omitempty"` //此組數為最終總共開幾組
	Money       *int64                         `protobuf:"varint,2,req,name=Money" json:"Money,omitempty"`            //Bonus Game結果總金額
}

func (x *DFDC_JackpotBonusGame) Reset() {
	*x = DFDC_JackpotBonusGame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_DFDC_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DFDC_JackpotBonusGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DFDC_JackpotBonusGame) ProtoMessage() {}

func (x *DFDC_JackpotBonusGame) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_DFDC_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DFDC_JackpotBonusGame.ProtoReflect.Descriptor instead.
func (*DFDC_JackpotBonusGame) Descriptor() ([]byte, []int) {
	return file_GameMsg_DFDC_proto_rawDescGZIP(), []int{23}
}

func (x *DFDC_JackpotBonusGame) GetBonusDetail() []*DFDC_JackpotBonusGameDetail {
	if x != nil {
		return x.BonusDetail
	}
	return nil
}

func (x *DFDC_JackpotBonusGame) GetMoney() int64 {
	if x != nil && x.Money != nil {
		return *x.Money
	}
	return 0
}

//多財多福 額外遊戲寫入
type DFDC_JackpotBonusGameRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID *int32 `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"` //玩家ID
}

func (x *DFDC_JackpotBonusGameRet) Reset() {
	*x = DFDC_JackpotBonusGameRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_DFDC_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DFDC_JackpotBonusGameRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DFDC_JackpotBonusGameRet) ProtoMessage() {}

func (x *DFDC_JackpotBonusGameRet) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_DFDC_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DFDC_JackpotBonusGameRet.ProtoReflect.Descriptor instead.
func (*DFDC_JackpotBonusGameRet) Descriptor() ([]byte, []int) {
	return file_GameMsg_DFDC_proto_rawDescGZIP(), []int{24}
}

func (x *DFDC_JackpotBonusGameRet) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

//多財多福 玩家殘餘資料
type DFDC_UserRecover struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WinMoey      *int64 `protobuf:"varint,1,req,name=WinMoey" json:"WinMoey,omitempty"`           //贏多少錢
	BetMoney     *int64 `protobuf:"varint,2,req,name=BetMoney" json:"BetMoney,omitempty"`         //玩家下注金額
	GoldenSymbol *int32 `protobuf:"varint,3,req,name=GoldenSymbol" json:"GoldenSymbol,omitempty"` //下注黃金符號
}

func (x *DFDC_UserRecover) Reset() {
	*x = DFDC_UserRecover{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_DFDC_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DFDC_UserRecover) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DFDC_UserRecover) ProtoMessage() {}

func (x *DFDC_UserRecover) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_DFDC_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DFDC_UserRecover.ProtoReflect.Descriptor instead.
func (*DFDC_UserRecover) Descriptor() ([]byte, []int) {
	return file_GameMsg_DFDC_proto_rawDescGZIP(), []int{25}
}

func (x *DFDC_UserRecover) GetWinMoey() int64 {
	if x != nil && x.WinMoey != nil {
		return *x.WinMoey
	}
	return 0
}

func (x *DFDC_UserRecover) GetBetMoney() int64 {
	if x != nil && x.BetMoney != nil {
		return *x.BetMoney
	}
	return 0
}

func (x *DFDC_UserRecover) GetGoldenSymbol() int32 {
	if x != nil && x.GoldenSymbol != nil {
		return *x.GoldenSymbol
	}
	return 0
}

//多財多福 索取遊戲歷程
type DFDC_GetGameLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime *string `protobuf:"bytes,1,req,name=StartTime" json:"StartTime,omitempty"`  //開始時間
	EndTime   *string `protobuf:"bytes,2,req,name=EndTime" json:"EndTime,omitempty"`      //結束時間
	PageIndex *int32  `protobuf:"varint,3,req,name=PageIndex" json:"PageIndex,omitempty"` //第幾頁
	PageSize  *int32  `protobuf:"varint,4,req,name=PageSize" json:"PageSize,omitempty"`   //一頁幾筆
}

func (x *DFDC_GetGameLog) Reset() {
	*x = DFDC_GetGameLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_DFDC_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DFDC_GetGameLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DFDC_GetGameLog) ProtoMessage() {}

func (x *DFDC_GetGameLog) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_DFDC_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DFDC_GetGameLog.ProtoReflect.Descriptor instead.
func (*DFDC_GetGameLog) Descriptor() ([]byte, []int) {
	return file_GameMsg_DFDC_proto_rawDescGZIP(), []int{26}
}

func (x *DFDC_GetGameLog) GetStartTime() string {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return ""
}

func (x *DFDC_GetGameLog) GetEndTime() string {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return ""
}

func (x *DFDC_GetGameLog) GetPageIndex() int32 {
	if x != nil && x.PageIndex != nil {
		return *x.PageIndex
	}
	return 0
}

func (x *DFDC_GetGameLog) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

var File_GameMsg_DFDC_proto protoreflect.FileDescriptor

var file_GameMsg_DFDC_proto_rawDesc = []byte{
	0x0a, 0x12, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x5f, 0x44, 0x46, 0x44, 0x43, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb3,
	0x02, 0x0a, 0x0c, 0x44, 0x46, 0x44, 0x43, 0x5f, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12,
	0x1a, 0x0a, 0x08, 0x42, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x08, 0x42, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x0b, 0x52,
	0x65, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x46, 0x44, 0x43,
	0x5f, 0x52, 0x65, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x0b, 0x52, 0x65,
	0x65, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x6f, 0x77,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x6f,
	0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x50, 0x61, 0x79, 0x4c, 0x69, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0c, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x79, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x42,
	0x69, 0x67, 0x57, 0x69, 0x6e, 0x53, 0x74, 0x65, 0x70, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x0a, 0x42, 0x69, 0x67, 0x57, 0x69, 0x6e, 0x53, 0x74, 0x65, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x50,
	0x61, 0x79, 0x4c, 0x69, 0x6e, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x0b, 0x50, 0x61, 0x79, 0x4c, 0x69, 0x6e, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x45, 0x0a,
	0x0e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x50, 0x61, 0x79, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x44, 0x46, 0x44, 0x43, 0x5f, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x50, 0x61, 0x79, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x0e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x50, 0x61, 0x79, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x22, 0x6f, 0x0a, 0x11, 0x44, 0x46, 0x44, 0x43, 0x5f, 0x46, 0x72, 0x65,
	0x65, 0x4f, 0x72, 0x50, 0x61, 0x79, 0x4d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x72, 0x65,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x46, 0x72,
	0x65, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x0b, 0x52, 0x65, 0x65, 0x6c, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6e,
	0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x46, 0x44, 0x43, 0x5f, 0x52, 0x65, 0x65,
	0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x0b, 0x52, 0x65, 0x65, 0x6c, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x84, 0x01, 0x0a, 0x10, 0x44, 0x46, 0x44, 0x43, 0x5f, 0x52,
	0x65, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65,
	0x61, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x52, 0x65, 0x61, 0x6c,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x6f, 0x77, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x52, 0x6f, 0x77, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x3c,
	0x0a, 0x0b, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44,
	0x46, 0x44, 0x43, 0x5f, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x0b, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x4e, 0x0a, 0x10,
	0x44, 0x46, 0x44, 0x43, 0x5f, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x1a, 0x0a, 0x08, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x08, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a,
	0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x0a, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xb6, 0x02, 0x0a,
	0x13, 0x44, 0x46, 0x44, 0x43, 0x5f, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x65, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x44,
	0x12, 0x3c, 0x0a, 0x0b, 0x52, 0x65, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x44, 0x46, 0x44, 0x43, 0x5f, 0x52, 0x65, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x0b, 0x52, 0x65, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x3f,
	0x0a, 0x0c, 0x50, 0x61, 0x79, 0x4c, 0x69, 0x6e, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x44, 0x46, 0x44, 0x43, 0x5f, 0x50, 0x61, 0x79, 0x4c, 0x69, 0x6e, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x0c, 0x50, 0x61, 0x79, 0x4c, 0x69, 0x6e, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x3c, 0x0a, 0x0b, 0x50, 0x61, 0x79, 0x41, 0x6c, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x44, 0x46, 0x44, 0x43, 0x5f, 0x50, 0x61, 0x79, 0x41, 0x6c, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x0b, 0x50, 0x61, 0x79, 0x41, 0x6c, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1a, 0x0a,
	0x08, 0x57, 0x69, 0x6e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x57, 0x69, 0x6e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x10, 0x46, 0x72, 0x65,
	0x65, 0x47, 0x61, 0x6d, 0x65, 0x57, 0x69, 0x6e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x10, 0x46, 0x72, 0x65, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x57, 0x69, 0x6e,
	0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x22, 0x97, 0x01, 0x0a, 0x10, 0x44, 0x46, 0x44, 0x43, 0x5f, 0x50,
	0x61, 0x79, 0x41, 0x6c, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x42, 0x0a, 0x0d, 0x50, 0x61,
	0x79, 0x4c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x46, 0x44,
	0x43, 0x5f, 0x50, 0x61, 0x79, 0x4c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x0d, 0x50, 0x61, 0x79, 0x4c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x3f,
	0x0a, 0x0c, 0x50, 0x61, 0x79, 0x41, 0x6c, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x44, 0x46, 0x44, 0x43, 0x5f, 0x50, 0x61, 0x79, 0x41, 0x6c, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x0c, 0x50, 0x61, 0x79, 0x41, 0x6c, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22,
	0xcb, 0x01, 0x0a, 0x11, 0x44, 0x46, 0x44, 0x43, 0x5f, 0x50, 0x61, 0x79, 0x41, 0x6c, 0x6c, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x52, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x50, 0x61, 0x79, 0x52, 0x61, 0x74, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x50, 0x61, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x08, 0x50, 0x61, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x57,
	0x61, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x57,
	0x61, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0c, 0x53,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x46,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x50, 0x61, 0x79, 0x73, 0x18, 0x06, 0x20, 0x02, 0x28, 0x08,
	0x52, 0x0b, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x50, 0x61, 0x79, 0x73, 0x22, 0x91, 0x01,
	0x0a, 0x11, 0x44, 0x46, 0x44, 0x43, 0x5f, 0x50, 0x61, 0x79, 0x4c, 0x69, 0x6e, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x61, 0x79, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x50, 0x61, 0x79, 0x4c, 0x69, 0x6e, 0x65, 0x49,
	0x44, 0x12, 0x42, 0x0a, 0x0d, 0x50, 0x61, 0x79, 0x4c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x46, 0x44, 0x43, 0x5f, 0x50, 0x61, 0x79, 0x4c, 0x69, 0x6e, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0d, 0x50, 0x61, 0x79, 0x4c, 0x69, 0x6e, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x57, 0x69, 0x6e, 0x4d, 0x6f, 0x6e, 0x65,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x57, 0x69, 0x6e, 0x4d, 0x6f, 0x6e, 0x65,
	0x79, 0x22, 0xac, 0x01, 0x0a, 0x12, 0x44, 0x46, 0x44, 0x43, 0x5f, 0x50, 0x61, 0x79, 0x4c, 0x69,
	0x6e, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x65, 0x6c,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x52, 0x65, 0x65, 0x6c, 0x49, 0x44,
	0x12, 0x1a, 0x0a, 0x08, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x08, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05,
	0x42, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x02, 0x28, 0x08, 0x52, 0x05, 0x42, 0x6c, 0x69,
	0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x08,
	0x52, 0x04, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x65, 0x74, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x42, 0x65, 0x74, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x42, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79,
	0x22, 0x27, 0x0a, 0x0f, 0x44, 0x46, 0x44, 0x43, 0x5f, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x49, 0x0a, 0x0d, 0x44, 0x46, 0x44,
	0x43, 0x5f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x6f,
	0x6e, 0x65, 0x79, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x05, 0x4d, 0x6f, 0x6e, 0x65, 0x79,
	0x12, 0x22, 0x0a, 0x0c, 0x47, 0x6f, 0x6c, 0x64, 0x65, 0x6e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0c, 0x47, 0x6f, 0x6c, 0x64, 0x65, 0x6e, 0x53, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x22, 0x35, 0x0a, 0x0b, 0x44, 0x46, 0x44, 0x43, 0x5f, 0x42, 0x65, 0x74,
	0x52, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x03, 0x52, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x03, 0x52, 0x05, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x22, 0x80, 0x01, 0x0a, 0x12,
	0x44, 0x46, 0x44, 0x43, 0x5f, 0x47, 0x65, 0x74, 0x4a, 0x61, 0x63, 0x6b, 0x70, 0x6f, 0x74, 0x4d,
	0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x46, 0x6c, 0x61, 0x67, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06,
	0x46, 0x6c, 0x61, 0x67, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e,
	0x6f, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x6f,
	0x12, 0x1c, 0x0a, 0x09, 0x4a, 0x61, 0x63, 0x6b, 0x70, 0x6f, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x09, 0x4a, 0x61, 0x63, 0x6b, 0x70, 0x6f, 0x74, 0x49, 0x44, 0x22, 0xe0,
	0x01, 0x0a, 0x12, 0x44, 0x46, 0x44, 0x43, 0x5f, 0x47, 0x65, 0x74, 0x4a, 0x61, 0x63, 0x6b, 0x70,
	0x6f, 0x74, 0x52, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x6c, 0x61, 0x67, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x06, 0x46, 0x6c, 0x61, 0x67, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x4e, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x4a, 0x61, 0x63, 0x6b, 0x70, 0x6f, 0x74, 0x49, 0x44,
	0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x4a, 0x61, 0x63, 0x6b, 0x70, 0x6f, 0x74, 0x49,
	0x44, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x70, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x18, 0x05,
	0x20, 0x02, 0x28, 0x03, 0x52, 0x09, 0x53, 0x70, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x12,
	0x1e, 0x0a, 0x0a, 0x50, 0x6f, 0x6f, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20,
	0x02, 0x28, 0x03, 0x52, 0x0a, 0x50, 0x6f, 0x6f, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x4a, 0x50, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x18, 0x07,
	0x20, 0x02, 0x28, 0x03, 0x52, 0x0b, 0x4a, 0x50, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x75,
	0x74, 0x22, 0x60, 0x0a, 0x16, 0x44, 0x46, 0x44, 0x43, 0x5f, 0x4a, 0x61, 0x63, 0x6b, 0x70, 0x6f,
	0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x32, 0x43, 0x4d, 0x73, 0x67, 0x12, 0x46, 0x0a, 0x0d, 0x4a,
	0x61, 0x63, 0x6b, 0x70, 0x6f, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x46,
	0x44, 0x43, 0x5f, 0x4a, 0x61, 0x63, 0x6b, 0x70, 0x6f, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x0d, 0x4a, 0x61, 0x63, 0x6b, 0x70, 0x6f, 0x74, 0x50, 0x6f, 0x6f,
	0x6c, 0x49, 0x44, 0x22, 0x66, 0x0a, 0x16, 0x44, 0x46, 0x44, 0x43, 0x5f, 0x4a, 0x61, 0x63, 0x6b,
	0x70, 0x6f, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a,
	0x09, 0x4a, 0x61, 0x63, 0x6b, 0x70, 0x6f, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x09, 0x4a, 0x61, 0x63, 0x6b, 0x70, 0x6f, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x53,
	0x79, 0x73, 0x70, 0x6f, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x07, 0x53, 0x79,
	0x73, 0x70, 0x6f, 0x6f, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x5e, 0x0a, 0x15, 0x44,
	0x46, 0x44, 0x43, 0x5f, 0x47, 0x6f, 0x6c, 0x64, 0x65, 0x6e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x0c, 0x47, 0x6f, 0x6c, 0x64, 0x65, 0x6e, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6e, 0x65, 0x74,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x46, 0x44, 0x43, 0x5f, 0x47, 0x6f, 0x6c, 0x64, 0x65,
	0x6e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0c, 0x47,
	0x6f, 0x6c, 0x64, 0x65, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x4d, 0x0a, 0x17, 0x44,
	0x46, 0x44, 0x43, 0x5f, 0x47, 0x6f, 0x6c, 0x64, 0x65, 0x6e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x07, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x22, 0x68, 0x0a, 0x0e, 0x44, 0x46,
	0x44, 0x43, 0x5f, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x0b,
	0x42, 0x6f, 0x6e, 0x75, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x46, 0x44,
	0x43, 0x5f, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x0b, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x14,
	0x0a, 0x05, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x05, 0x4d,
	0x6f, 0x6e, 0x65, 0x79, 0x22, 0x50, 0x0a, 0x14, 0x44, 0x46, 0x44, 0x43, 0x5f, 0x42, 0x6f, 0x6e,
	0x75, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x50, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x50, 0x6c, 0x61,
	0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x04, 0x49, 0x63, 0x6f, 0x6e, 0x22, 0x5f, 0x0a, 0x13, 0x44, 0x46, 0x44, 0x43, 0x5f, 0x53,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x50, 0x61, 0x79, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x0a, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x04, 0x52, 0x61, 0x74, 0x65, 0x22, 0x77, 0x0a, 0x1b, 0x44, 0x46, 0x44, 0x43, 0x5f,
	0x4a, 0x61, 0x63, 0x6b, 0x70, 0x6f, 0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x47, 0x61, 0x6d, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x54, 0x75, 0x72, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06,
	0x54, 0x75, 0x72, 0x6e, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x49, 0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x49, 0x63, 0x6f, 0x6e,
	0x22, 0x75, 0x0a, 0x1b, 0x44, 0x46, 0x44, 0x43, 0x5f, 0x4a, 0x61, 0x63, 0x6b, 0x70, 0x6f, 0x74,
	0x42, 0x6f, 0x6e, 0x75, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x68, 0x76, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x72, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x68, 0x76, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x77,
	0x69, 0x6e, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x52, 0x08, 0x77,
	0x69, 0x6e, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x22, 0x76, 0x0a, 0x15, 0x44, 0x46, 0x44, 0x43, 0x5f,
	0x4a, 0x61, 0x63, 0x6b, 0x70, 0x6f, 0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x47, 0x61, 0x6d, 0x65,
	0x12, 0x47, 0x0a, 0x0b, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x44, 0x46, 0x44, 0x43, 0x5f, 0x4a, 0x61, 0x63, 0x6b, 0x70, 0x6f, 0x74, 0x42, 0x6f, 0x6e,
	0x75, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0b, 0x42, 0x6f,
	0x6e, 0x75, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x6f, 0x6e,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x05, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x22,
	0x32, 0x0a, 0x18, 0x44, 0x46, 0x44, 0x43, 0x5f, 0x4a, 0x61, 0x63, 0x6b, 0x70, 0x6f, 0x74, 0x42,
	0x6f, 0x6e, 0x75, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x22, 0x6c, 0x0a, 0x10, 0x44, 0x46, 0x44, 0x43, 0x5f, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x57, 0x69, 0x6e, 0x4d, 0x6f,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x07, 0x57, 0x69, 0x6e, 0x4d, 0x6f, 0x65,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x03, 0x52, 0x08, 0x42, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x22, 0x0a,
	0x0c, 0x47, 0x6f, 0x6c, 0x64, 0x65, 0x6e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x0c, 0x47, 0x6f, 0x6c, 0x64, 0x65, 0x6e, 0x53, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x22, 0x83, 0x01, 0x0a, 0x0f, 0x44, 0x46, 0x44, 0x43, 0x5f, 0x47, 0x65, 0x74, 0x47, 0x61,
	0x6d, 0x65, 0x4c, 0x6f, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x09, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x50,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x50,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x6e, 0x65, 0x74,
	0x70, 0x72, 0x6f, 0x74, 0x6f,
}

var (
	file_GameMsg_DFDC_proto_rawDescOnce sync.Once
	file_GameMsg_DFDC_proto_rawDescData = file_GameMsg_DFDC_proto_rawDesc
)

func file_GameMsg_DFDC_proto_rawDescGZIP() []byte {
	file_GameMsg_DFDC_proto_rawDescOnce.Do(func() {
		file_GameMsg_DFDC_proto_rawDescData = protoimpl.X.CompressGZIP(file_GameMsg_DFDC_proto_rawDescData)
	})
	return file_GameMsg_DFDC_proto_rawDescData
}

var file_GameMsg_DFDC_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_GameMsg_DFDC_proto_goTypes = []interface{}{
	(*DFDC_Setting)(nil),                // 0: netproto.DFDC_Setting
	(*DFDC_FreeOrPayMsg)(nil),           // 1: netproto.DFDC_FreeOrPayMsg
	(*DFDC_ReelSetting)(nil),            // 2: netproto.DFDC_ReelSetting
	(*DFDC_SymbolGroup)(nil),            // 3: netproto.DFDC_SymbolGroup
	(*DFDC_GameResultReel)(nil),         // 4: netproto.DFDC_GameResultReel
	(*DFDC_PayAllGroup)(nil),            // 5: netproto.DFDC_PayAllGroup
	(*DFDC_PayAllDetail)(nil),           // 6: netproto.DFDC_PayAllDetail
	(*DFDC_PayLineGroup)(nil),           // 7: netproto.DFDC_PayLineGroup
	(*DFDC_PayLineDetail)(nil),          // 8: netproto.DFDC_PayLineDetail
	(*DFDC_GameStatus)(nil),             // 9: netproto.DFDC_GameStatus
	(*DFDC_StartBet)(nil),               // 10: netproto.DFDC_StartBet
	(*DFDC_BetRet)(nil),                 // 11: netproto.DFDC_BetRet
	(*DFDC_GetJackpotMsg)(nil),          // 12: netproto.DFDC_GetJackpotMsg
	(*DFDC_GetJackpotRet)(nil),          // 13: netproto.DFDC_GetJackpotRet
	(*DFDC_JackpotPoolS2CMsg)(nil),      // 14: netproto.DFDC_JackpotPoolS2CMsg
	(*DFDC_JackpotPoolDetail)(nil),      // 15: netproto.DFDC_JackpotPoolDetail
	(*DFDC_GoldenSymbolList)(nil),       // 16: netproto.DFDC_GoldenSymbolList
	(*DFDC_GoldenSymbolDetail)(nil),     // 17: netproto.DFDC_GoldenSymbolDetail
	(*DFDC_BonusGame)(nil),              // 18: netproto.DFDC_BonusGame
	(*DFDC_BonusGameDetail)(nil),        // 19: netproto.DFDC_BonusGameDetail
	(*DFDC_SymbolPayTable)(nil),         // 20: netproto.DFDC_SymbolPayTable
	(*DFDC_JackpotBonusGameDetail)(nil), // 21: netproto.DFDC_JackpotBonusGameDetail
	(*DFDC_JackpotBonusGameRecord)(nil), // 22: netproto.DFDC_JackpotBonusGameRecord
	(*DFDC_JackpotBonusGame)(nil),       // 23: netproto.DFDC_JackpotBonusGame
	(*DFDC_JackpotBonusGameRet)(nil),    // 24: netproto.DFDC_JackpotBonusGameRet
	(*DFDC_UserRecover)(nil),            // 25: netproto.DFDC_UserRecover
	(*DFDC_GetGameLog)(nil),             // 26: netproto.DFDC_GetGameLog
}
var file_GameMsg_DFDC_proto_depIdxs = []int32{
	2,  // 0: netproto.DFDC_Setting.ReelSetting:type_name -> netproto.DFDC_ReelSetting
	20, // 1: netproto.DFDC_Setting.SymbolPayTable:type_name -> netproto.DFDC_SymbolPayTable
	2,  // 2: netproto.DFDC_FreeOrPayMsg.ReelSetting:type_name -> netproto.DFDC_ReelSetting
	3,  // 3: netproto.DFDC_ReelSetting.SymbolGroup:type_name -> netproto.DFDC_SymbolGroup
	2,  // 4: netproto.DFDC_GameResultReel.ReelSetting:type_name -> netproto.DFDC_ReelSetting
	7,  // 5: netproto.DFDC_GameResultReel.PayLineGroup:type_name -> netproto.DFDC_PayLineGroup
	5,  // 6: netproto.DFDC_GameResultReel.PayAllGroup:type_name -> netproto.DFDC_PayAllGroup
	8,  // 7: netproto.DFDC_PayAllGroup.PayLineDetail:type_name -> netproto.DFDC_PayLineDetail
	6,  // 8: netproto.DFDC_PayAllGroup.PayAllDetail:type_name -> netproto.DFDC_PayAllDetail
	8,  // 9: netproto.DFDC_PayLineGroup.PayLineDetail:type_name -> netproto.DFDC_PayLineDetail
	15, // 10: netproto.DFDC_JackpotPoolS2CMsg.JackpotPoolID:type_name -> netproto.DFDC_JackpotPoolDetail
	17, // 11: netproto.DFDC_GoldenSymbolList.GoldenDetail:type_name -> netproto.DFDC_GoldenSymbolDetail
	19, // 12: netproto.DFDC_BonusGame.BonusDetail:type_name -> netproto.DFDC_BonusGameDetail
	21, // 13: netproto.DFDC_JackpotBonusGame.BonusDetail:type_name -> netproto.DFDC_JackpotBonusGameDetail
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_GameMsg_DFDC_proto_init() }
func file_GameMsg_DFDC_proto_init() {
	if File_GameMsg_DFDC_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_GameMsg_DFDC_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DFDC_Setting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_DFDC_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DFDC_FreeOrPayMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_DFDC_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DFDC_ReelSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_DFDC_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DFDC_SymbolGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_DFDC_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DFDC_GameResultReel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_DFDC_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DFDC_PayAllGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_DFDC_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DFDC_PayAllDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_DFDC_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DFDC_PayLineGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_DFDC_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DFDC_PayLineDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_DFDC_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DFDC_GameStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_DFDC_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DFDC_StartBet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_DFDC_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DFDC_BetRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_DFDC_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DFDC_GetJackpotMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_DFDC_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DFDC_GetJackpotRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_DFDC_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DFDC_JackpotPoolS2CMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_DFDC_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DFDC_JackpotPoolDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_DFDC_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DFDC_GoldenSymbolList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_DFDC_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DFDC_GoldenSymbolDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_DFDC_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DFDC_BonusGame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_DFDC_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DFDC_BonusGameDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_DFDC_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DFDC_SymbolPayTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_DFDC_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DFDC_JackpotBonusGameDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_DFDC_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DFDC_JackpotBonusGameRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_DFDC_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DFDC_JackpotBonusGame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_DFDC_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DFDC_JackpotBonusGameRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_DFDC_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DFDC_UserRecover); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_DFDC_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DFDC_GetGameLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_GameMsg_DFDC_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_GameMsg_DFDC_proto_goTypes,
		DependencyIndexes: file_GameMsg_DFDC_proto_depIdxs,
		MessageInfos:      file_GameMsg_DFDC_proto_msgTypes,
	}.Build()
	File_GameMsg_DFDC_proto = out.File
	file_GameMsg_DFDC_proto_rawDesc = nil
	file_GameMsg_DFDC_proto_goTypes = nil
	file_GameMsg_DFDC_proto_depIdxs = nil
}
