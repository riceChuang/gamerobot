// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: GameMsg_HBSL.proto

package netproto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//下注设置
type HBSL_Setting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HongbaoCount  *int32  `protobuf:"varint,1,req,name=HongbaoCount" json:"HongbaoCount,omitempty"`   //红包数量
	Odds          *int32  `protobuf:"varint,2,req,name=Odds" json:"Odds,omitempty"`                   //房间倍数，被除数。最终房间倍率等于 Odds/OddsDivide，例如3/2 = 1.5倍
	HongbaoAmount []int32 `protobuf:"varint,3,rep,name=HongbaoAmount" json:"HongbaoAmount,omitempty"` //可发红包金额,单位分,例如[2000, 4000, 10000, 20000]代表可选20、40、100、200元
	OddsDivide    *int32  `protobuf:"varint,4,opt,name=OddsDivide" json:"OddsDivide,omitempty"`       //房间倍数除数，默认为1，最终房间倍率等于 Odds/OddsDivide，例如3/2 = 1.5倍
}

func (x *HBSL_Setting) Reset() {
	*x = HBSL_Setting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_HBSL_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HBSL_Setting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HBSL_Setting) ProtoMessage() {}

func (x *HBSL_Setting) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_HBSL_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HBSL_Setting.ProtoReflect.Descriptor instead.
func (*HBSL_Setting) Descriptor() ([]byte, []int) {
	return file_GameMsg_HBSL_proto_rawDescGZIP(), []int{0}
}

func (x *HBSL_Setting) GetHongbaoCount() int32 {
	if x != nil && x.HongbaoCount != nil {
		return *x.HongbaoCount
	}
	return 0
}

func (x *HBSL_Setting) GetOdds() int32 {
	if x != nil && x.Odds != nil {
		return *x.Odds
	}
	return 0
}

func (x *HBSL_Setting) GetHongbaoAmount() []int32 {
	if x != nil {
		return x.HongbaoAmount
	}
	return nil
}

func (x *HBSL_Setting) GetOddsDivide() int32 {
	if x != nil && x.OddsDivide != nil {
		return *x.OddsDivide
	}
	return 0
}

//状态消息
type HBSL_Sate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State *int32 `protobuf:"varint,1,req,name=State" json:"State,omitempty"` //状态，0发红包，1抢红包，2结算动画，3等待游戏开始
	Time  *int32 `protobuf:"varint,2,req,name=Time" json:"Time,omitempty"`   //此状态的剩余时间
}

func (x *HBSL_Sate) Reset() {
	*x = HBSL_Sate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_HBSL_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HBSL_Sate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HBSL_Sate) ProtoMessage() {}

func (x *HBSL_Sate) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_HBSL_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HBSL_Sate.ProtoReflect.Descriptor instead.
func (*HBSL_Sate) Descriptor() ([]byte, []int) {
	return file_GameMsg_HBSL_proto_rawDescGZIP(), []int{1}
}

func (x *HBSL_Sate) GetState() int32 {
	if x != nil && x.State != nil {
		return *x.State
	}
	return 0
}

func (x *HBSL_Sate) GetTime() int32 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

//庄家信息
type HBSL_ZhuangInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID           *int32                 `protobuf:"varint,1,opt,name=UserID" json:"UserID,omitempty"` //还没有人发红包的时候庄家信息为空,UserID为0
	NickName         *string                `protobuf:"bytes,2,opt,name=NickName" json:"NickName,omitempty"`
	UserHeadId       *int32                 `protobuf:"varint,3,opt,name=UserHeadId" json:"UserHeadId,omitempty"`
	HongbaoAmount    *int32                 `protobuf:"varint,4,opt,name=HongbaoAmount" json:"HongbaoAmount,omitempty"`       //当前庄家发的红包金额，单位：分
	CurrHongbaoCount *int32                 `protobuf:"varint,5,opt,name=CurrHongbaoCount" json:"CurrHongbaoCount,omitempty"` //当前在抢红包的剩余包数
	ThunderNum       *int32                 `protobuf:"varint,6,opt,name=ThunderNum" json:"ThunderNum,omitempty"`             //雷号
	SaoLeiUserInfo   []*HBSL_SaoLeiUserInfo `protobuf:"bytes,7,rep,name=SaoLeiUserInfo" json:"SaoLeiUserInfo,omitempty"`      //当前扫雷玩家列表
}

func (x *HBSL_ZhuangInfo) Reset() {
	*x = HBSL_ZhuangInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_HBSL_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HBSL_ZhuangInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HBSL_ZhuangInfo) ProtoMessage() {}

func (x *HBSL_ZhuangInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_HBSL_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HBSL_ZhuangInfo.ProtoReflect.Descriptor instead.
func (*HBSL_ZhuangInfo) Descriptor() ([]byte, []int) {
	return file_GameMsg_HBSL_proto_rawDescGZIP(), []int{2}
}

func (x *HBSL_ZhuangInfo) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *HBSL_ZhuangInfo) GetNickName() string {
	if x != nil && x.NickName != nil {
		return *x.NickName
	}
	return ""
}

func (x *HBSL_ZhuangInfo) GetUserHeadId() int32 {
	if x != nil && x.UserHeadId != nil {
		return *x.UserHeadId
	}
	return 0
}

func (x *HBSL_ZhuangInfo) GetHongbaoAmount() int32 {
	if x != nil && x.HongbaoAmount != nil {
		return *x.HongbaoAmount
	}
	return 0
}

func (x *HBSL_ZhuangInfo) GetCurrHongbaoCount() int32 {
	if x != nil && x.CurrHongbaoCount != nil {
		return *x.CurrHongbaoCount
	}
	return 0
}

func (x *HBSL_ZhuangInfo) GetThunderNum() int32 {
	if x != nil && x.ThunderNum != nil {
		return *x.ThunderNum
	}
	return 0
}

func (x *HBSL_ZhuangInfo) GetSaoLeiUserInfo() []*HBSL_SaoLeiUserInfo {
	if x != nil {
		return x.SaoLeiUserInfo
	}
	return nil
}

type HBSL_SaoLeiUserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID            *int32  `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`
	NickName          *string `protobuf:"bytes,2,req,name=NickName" json:"NickName,omitempty"`
	UserHeadId        *int32  `protobuf:"varint,3,req,name=UserHeadId" json:"UserHeadId,omitempty"`               //用户头像ID
	GrabHongbaoAmount *int32  `protobuf:"varint,4,req,name=GrabHongbaoAmount" json:"GrabHongbaoAmount,omitempty"` //抢红包金额，单位：分
	SettleAmount      *int32  `protobuf:"varint,5,req,name=settleAmount" json:"settleAmount,omitempty"`           //结算金额，税前
}

func (x *HBSL_SaoLeiUserInfo) Reset() {
	*x = HBSL_SaoLeiUserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_HBSL_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HBSL_SaoLeiUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HBSL_SaoLeiUserInfo) ProtoMessage() {}

func (x *HBSL_SaoLeiUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_HBSL_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HBSL_SaoLeiUserInfo.ProtoReflect.Descriptor instead.
func (*HBSL_SaoLeiUserInfo) Descriptor() ([]byte, []int) {
	return file_GameMsg_HBSL_proto_rawDescGZIP(), []int{3}
}

func (x *HBSL_SaoLeiUserInfo) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *HBSL_SaoLeiUserInfo) GetNickName() string {
	if x != nil && x.NickName != nil {
		return *x.NickName
	}
	return ""
}

func (x *HBSL_SaoLeiUserInfo) GetUserHeadId() int32 {
	if x != nil && x.UserHeadId != nil {
		return *x.UserHeadId
	}
	return 0
}

func (x *HBSL_SaoLeiUserInfo) GetGrabHongbaoAmount() int32 {
	if x != nil && x.GrabHongbaoAmount != nil {
		return *x.GrabHongbaoAmount
	}
	return 0
}

func (x *HBSL_SaoLeiUserInfo) GetSettleAmount() int32 {
	if x != nil && x.SettleAmount != nil {
		return *x.SettleAmount
	}
	return 0
}

//发红包
type HBSL_FaHongbao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HongbaoAmount *int32 `protobuf:"varint,1,req,name=HongbaoAmount" json:"HongbaoAmount,omitempty"` //红包金额，单位：分
	ThunderNum    *int32 `protobuf:"varint,2,req,name=ThunderNum" json:"ThunderNum,omitempty"`       //雷号
}

func (x *HBSL_FaHongbao) Reset() {
	*x = HBSL_FaHongbao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_HBSL_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HBSL_FaHongbao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HBSL_FaHongbao) ProtoMessage() {}

func (x *HBSL_FaHongbao) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_HBSL_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HBSL_FaHongbao.ProtoReflect.Descriptor instead.
func (*HBSL_FaHongbao) Descriptor() ([]byte, []int) {
	return file_GameMsg_HBSL_proto_rawDescGZIP(), []int{4}
}

func (x *HBSL_FaHongbao) GetHongbaoAmount() int32 {
	if x != nil && x.HongbaoAmount != nil {
		return *x.HongbaoAmount
	}
	return 0
}

func (x *HBSL_FaHongbao) GetThunderNum() int32 {
	if x != nil && x.ThunderNum != nil {
		return *x.ThunderNum
	}
	return 0
}

//发红包结果
type HBSL_FaHongbaoRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret         *int32          `protobuf:"varint,1,req,name=Ret" json:"Ret,omitempty"`                //操作结果，1成功，0失败
	ErrMsg      *string         `protobuf:"bytes,2,opt,name=ErrMsg" json:"ErrMsg,omitempty"`           //失败原因
	HongbaoInfo *HBSL_FaHongbao `protobuf:"bytes,3,opt,name=HongbaoInfo" json:"HongbaoInfo,omitempty"` //红包信息
}

func (x *HBSL_FaHongbaoRet) Reset() {
	*x = HBSL_FaHongbaoRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_HBSL_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HBSL_FaHongbaoRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HBSL_FaHongbaoRet) ProtoMessage() {}

func (x *HBSL_FaHongbaoRet) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_HBSL_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HBSL_FaHongbaoRet.ProtoReflect.Descriptor instead.
func (*HBSL_FaHongbaoRet) Descriptor() ([]byte, []int) {
	return file_GameMsg_HBSL_proto_rawDescGZIP(), []int{5}
}

func (x *HBSL_FaHongbaoRet) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *HBSL_FaHongbaoRet) GetErrMsg() string {
	if x != nil && x.ErrMsg != nil {
		return *x.ErrMsg
	}
	return ""
}

func (x *HBSL_FaHongbaoRet) GetHongbaoInfo() *HBSL_FaHongbao {
	if x != nil {
		return x.HongbaoInfo
	}
	return nil
}

//抢红包结果
type HBSL_QiangHongbaoRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret               *int32  `protobuf:"varint,1,req,name=Ret" json:"Ret,omitempty"`                             //操作结果，1成功，0失败
	ErrMsg            *string `protobuf:"bytes,2,opt,name=ErrMsg" json:"ErrMsg,omitempty"`                        //失败原因
	GrabHongbaoAmount *int32  `protobuf:"varint,3,opt,name=GrabHongbaoAmount" json:"GrabHongbaoAmount,omitempty"` //抢红包金额，单位：分
	SettleAmount      *int32  `protobuf:"varint,4,opt,name=settleAmount" json:"settleAmount,omitempty"`           //结算金额，税后
}

func (x *HBSL_QiangHongbaoRet) Reset() {
	*x = HBSL_QiangHongbaoRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_HBSL_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HBSL_QiangHongbaoRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HBSL_QiangHongbaoRet) ProtoMessage() {}

func (x *HBSL_QiangHongbaoRet) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_HBSL_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HBSL_QiangHongbaoRet.ProtoReflect.Descriptor instead.
func (*HBSL_QiangHongbaoRet) Descriptor() ([]byte, []int) {
	return file_GameMsg_HBSL_proto_rawDescGZIP(), []int{6}
}

func (x *HBSL_QiangHongbaoRet) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *HBSL_QiangHongbaoRet) GetErrMsg() string {
	if x != nil && x.ErrMsg != nil {
		return *x.ErrMsg
	}
	return ""
}

func (x *HBSL_QiangHongbaoRet) GetGrabHongbaoAmount() int32 {
	if x != nil && x.GrabHongbaoAmount != nil {
		return *x.GrabHongbaoAmount
	}
	return 0
}

func (x *HBSL_QiangHongbaoRet) GetSettleAmount() int32 {
	if x != nil && x.SettleAmount != nil {
		return *x.SettleAmount
	}
	return 0
}

//历史开奖结果
type HBSL_LastGameResultType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastThunderNum  []*HBSL_LastThunderNum `protobuf:"bytes,1,rep,name=LastThunderNum" json:"LastThunderNum,omitempty"`    //雷号走势,最后最近开出的雷号放在最后面,最多54局
	ThunderNumTotal []int32                `protobuf:"varint,2,rep,name=ThunderNumTotal" json:"ThunderNumTotal,omitempty"` //雷区分布，长度固定为10，按顺序依次代表0-9号雷出现的次数，统计范围是当天00:00:00到23:59:59
}

func (x *HBSL_LastGameResultType) Reset() {
	*x = HBSL_LastGameResultType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_HBSL_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HBSL_LastGameResultType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HBSL_LastGameResultType) ProtoMessage() {}

func (x *HBSL_LastGameResultType) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_HBSL_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HBSL_LastGameResultType.ProtoReflect.Descriptor instead.
func (*HBSL_LastGameResultType) Descriptor() ([]byte, []int) {
	return file_GameMsg_HBSL_proto_rawDescGZIP(), []int{7}
}

func (x *HBSL_LastGameResultType) GetLastThunderNum() []*HBSL_LastThunderNum {
	if x != nil {
		return x.LastThunderNum
	}
	return nil
}

func (x *HBSL_LastGameResultType) GetThunderNumTotal() []int32 {
	if x != nil {
		return x.ThunderNumTotal
	}
	return nil
}

type HBSL_LastFaHongbao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID        *int32  `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`
	NickName      *string `protobuf:"bytes,2,req,name=NickName" json:"NickName,omitempty"`            //用户昵称
	UserHeadId    *int32  `protobuf:"varint,3,req,name=UserHeadId" json:"UserHeadId,omitempty"`       //用户头像ID
	HongbaoAmount *int32  `protobuf:"varint,4,req,name=HongbaoAmount" json:"HongbaoAmount,omitempty"` //红包金额，单位：分
	ThunderNum    *int32  `protobuf:"varint,5,req,name=ThunderNum" json:"ThunderNum,omitempty"`       //雷号
}

func (x *HBSL_LastFaHongbao) Reset() {
	*x = HBSL_LastFaHongbao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_HBSL_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HBSL_LastFaHongbao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HBSL_LastFaHongbao) ProtoMessage() {}

func (x *HBSL_LastFaHongbao) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_HBSL_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HBSL_LastFaHongbao.ProtoReflect.Descriptor instead.
func (*HBSL_LastFaHongbao) Descriptor() ([]byte, []int) {
	return file_GameMsg_HBSL_proto_rawDescGZIP(), []int{8}
}

func (x *HBSL_LastFaHongbao) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *HBSL_LastFaHongbao) GetNickName() string {
	if x != nil && x.NickName != nil {
		return *x.NickName
	}
	return ""
}

func (x *HBSL_LastFaHongbao) GetUserHeadId() int32 {
	if x != nil && x.UserHeadId != nil {
		return *x.UserHeadId
	}
	return 0
}

func (x *HBSL_LastFaHongbao) GetHongbaoAmount() int32 {
	if x != nil && x.HongbaoAmount != nil {
		return *x.HongbaoAmount
	}
	return 0
}

func (x *HBSL_LastFaHongbao) GetThunderNum() int32 {
	if x != nil && x.ThunderNum != nil {
		return *x.ThunderNum
	}
	return 0
}

type HBSL_LastThunderNum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ThunderNum    *int32 `protobuf:"varint,1,req,name=ThunderNum" json:"ThunderNum,omitempty"`       //雷号
	ThunderUserCT *int32 `protobuf:"varint,2,req,name=ThunderUserCT" json:"ThunderUserCT,omitempty"` //中雷的人数
}

func (x *HBSL_LastThunderNum) Reset() {
	*x = HBSL_LastThunderNum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_HBSL_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HBSL_LastThunderNum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HBSL_LastThunderNum) ProtoMessage() {}

func (x *HBSL_LastThunderNum) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_HBSL_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HBSL_LastThunderNum.ProtoReflect.Descriptor instead.
func (*HBSL_LastThunderNum) Descriptor() ([]byte, []int) {
	return file_GameMsg_HBSL_proto_rawDescGZIP(), []int{9}
}

func (x *HBSL_LastThunderNum) GetThunderNum() int32 {
	if x != nil && x.ThunderNum != nil {
		return *x.ThunderNum
	}
	return 0
}

func (x *HBSL_LastThunderNum) GetThunderUserCT() int32 {
	if x != nil && x.ThunderUserCT != nil {
		return *x.ThunderUserCT
	}
	return 0
}

//庄家结算结果
type HBSL_ZhuangWin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZhuangUserID *int32 `protobuf:"varint,1,req,name=ZhuangUserID" json:"ZhuangUserID,omitempty"`
	ZhuangWin    *int32 `protobuf:"varint,2,req,name=ZhuangWin" json:"ZhuangWin,omitempty"`
}

func (x *HBSL_ZhuangWin) Reset() {
	*x = HBSL_ZhuangWin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_HBSL_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HBSL_ZhuangWin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HBSL_ZhuangWin) ProtoMessage() {}

func (x *HBSL_ZhuangWin) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_HBSL_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HBSL_ZhuangWin.ProtoReflect.Descriptor instead.
func (*HBSL_ZhuangWin) Descriptor() ([]byte, []int) {
	return file_GameMsg_HBSL_proto_rawDescGZIP(), []int{10}
}

func (x *HBSL_ZhuangWin) GetZhuangUserID() int32 {
	if x != nil && x.ZhuangUserID != nil {
		return *x.ZhuangUserID
	}
	return 0
}

func (x *HBSL_ZhuangWin) GetZhuangWin() int32 {
	if x != nil && x.ZhuangWin != nil {
		return *x.ZhuangWin
	}
	return 0
}

//待抢红包列表，最多10个
type HBSL_HongbaoList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastFaHongbao []*HBSL_LastFaHongbao `protobuf:"bytes,1,rep,name=LastFaHongbao" json:"LastFaHongbao,omitempty"`
}

func (x *HBSL_HongbaoList) Reset() {
	*x = HBSL_HongbaoList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_HBSL_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HBSL_HongbaoList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HBSL_HongbaoList) ProtoMessage() {}

func (x *HBSL_HongbaoList) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_HBSL_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HBSL_HongbaoList.ProtoReflect.Descriptor instead.
func (*HBSL_HongbaoList) Descriptor() ([]byte, []int) {
	return file_GameMsg_HBSL_proto_rawDescGZIP(), []int{11}
}

func (x *HBSL_HongbaoList) GetLastFaHongbao() []*HBSL_LastFaHongbao {
	if x != nil {
		return x.LastFaHongbao
	}
	return nil
}

var File_GameMsg_HBSL_proto protoreflect.FileDescriptor

var file_GameMsg_HBSL_proto_rawDesc = []byte{
	0x0a, 0x12, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x5f, 0x48, 0x42, 0x53, 0x4c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8c,
	0x01, 0x0a, 0x0c, 0x48, 0x42, 0x53, 0x4c, 0x5f, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12,
	0x22, 0x0a, 0x0c, 0x48, 0x6f, 0x6e, 0x67, 0x62, 0x61, 0x6f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0c, 0x48, 0x6f, 0x6e, 0x67, 0x62, 0x61, 0x6f, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4f, 0x64, 0x64, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x04, 0x4f, 0x64, 0x64, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x48, 0x6f, 0x6e, 0x67, 0x62,
	0x61, 0x6f, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0d,
	0x48, 0x6f, 0x6e, 0x67, 0x62, 0x61, 0x6f, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x4f, 0x64, 0x64, 0x73, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x4f, 0x64, 0x64, 0x73, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x22, 0x35, 0x0a,
	0x09, 0x48, 0x42, 0x53, 0x4c, 0x5f, 0x53, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x9e, 0x02, 0x0a, 0x0f, 0x48, 0x42, 0x53, 0x4c, 0x5f, 0x5a, 0x68,
	0x75, 0x61, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x55, 0x73, 0x65, 0x72, 0x48, 0x65, 0x61, 0x64, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x48, 0x65, 0x61, 0x64, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d,
	0x48, 0x6f, 0x6e, 0x67, 0x62, 0x61, 0x6f, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x48, 0x6f, 0x6e, 0x67, 0x62, 0x61, 0x6f, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x43, 0x75, 0x72, 0x72, 0x48, 0x6f, 0x6e, 0x67, 0x62, 0x61,
	0x6f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x43, 0x75,
	0x72, 0x72, 0x48, 0x6f, 0x6e, 0x67, 0x62, 0x61, 0x6f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x54, 0x68, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x54, 0x68, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x45,
	0x0a, 0x0e, 0x53, 0x61, 0x6f, 0x4c, 0x65, 0x69, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x48, 0x42, 0x53, 0x4c, 0x5f, 0x53, 0x61, 0x6f, 0x4c, 0x65, 0x69, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x53, 0x61, 0x6f, 0x4c, 0x65, 0x69, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xbb, 0x01, 0x0a, 0x13, 0x48, 0x42, 0x53, 0x4c, 0x5f, 0x53,
	0x61, 0x6f, 0x4c, 0x65, 0x69, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x48, 0x65, 0x61, 0x64, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x48, 0x65, 0x61, 0x64, 0x49,
	0x64, 0x12, 0x2c, 0x0a, 0x11, 0x47, 0x72, 0x61, 0x62, 0x48, 0x6f, 0x6e, 0x67, 0x62, 0x61, 0x6f,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x11, 0x47, 0x72,
	0x61, 0x62, 0x48, 0x6f, 0x6e, 0x67, 0x62, 0x61, 0x6f, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x56, 0x0a, 0x0e, 0x48, 0x42, 0x53, 0x4c, 0x5f, 0x46, 0x61, 0x48, 0x6f,
	0x6e, 0x67, 0x62, 0x61, 0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x48, 0x6f, 0x6e, 0x67, 0x62, 0x61, 0x6f,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0d, 0x48, 0x6f,
	0x6e, 0x67, 0x62, 0x61, 0x6f, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x54,
	0x68, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x0a, 0x54, 0x68, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x22, 0x79, 0x0a, 0x11, 0x48,
	0x42, 0x53, 0x4c, 0x5f, 0x46, 0x61, 0x48, 0x6f, 0x6e, 0x67, 0x62, 0x61, 0x6f, 0x52, 0x65, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x52, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x52,
	0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x3a, 0x0a, 0x0b, 0x48, 0x6f,
	0x6e, 0x67, 0x62, 0x61, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x42, 0x53, 0x4c, 0x5f,
	0x46, 0x61, 0x48, 0x6f, 0x6e, 0x67, 0x62, 0x61, 0x6f, 0x52, 0x0b, 0x48, 0x6f, 0x6e, 0x67, 0x62,
	0x61, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x92, 0x01, 0x0a, 0x14, 0x48, 0x42, 0x53, 0x4c, 0x5f,
	0x51, 0x69, 0x61, 0x6e, 0x67, 0x48, 0x6f, 0x6e, 0x67, 0x62, 0x61, 0x6f, 0x52, 0x65, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x52, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x52, 0x65,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x2c, 0x0a, 0x11, 0x47, 0x72, 0x61,
	0x62, 0x48, 0x6f, 0x6e, 0x67, 0x62, 0x61, 0x6f, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x47, 0x72, 0x61, 0x62, 0x48, 0x6f, 0x6e, 0x67, 0x62, 0x61,
	0x6f, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x74, 0x74, 0x6c,
	0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x8a, 0x01, 0x0a, 0x17,
	0x48, 0x42, 0x53, 0x4c, 0x5f, 0x4c, 0x61, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x45, 0x0a, 0x0e, 0x4c, 0x61, 0x73, 0x74, 0x54,
	0x68, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x42, 0x53, 0x4c, 0x5f,
	0x4c, 0x61, 0x73, 0x74, 0x54, 0x68, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x52, 0x0e,
	0x4c, 0x61, 0x73, 0x74, 0x54, 0x68, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x28,
	0x0a, 0x0f, 0x54, 0x68, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0f, 0x54, 0x68, 0x75, 0x6e, 0x64, 0x65, 0x72,
	0x4e, 0x75, 0x6d, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xae, 0x01, 0x0a, 0x12, 0x48, 0x42, 0x53,
	0x4c, 0x5f, 0x4c, 0x61, 0x73, 0x74, 0x46, 0x61, 0x48, 0x6f, 0x6e, 0x67, 0x62, 0x61, 0x6f, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x48, 0x65, 0x61, 0x64, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x48, 0x65, 0x61,
	0x64, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x48, 0x6f, 0x6e, 0x67, 0x62, 0x61, 0x6f, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0d, 0x48, 0x6f, 0x6e, 0x67,
	0x62, 0x61, 0x6f, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x68, 0x75,
	0x6e, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x54,
	0x68, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x22, 0x5b, 0x0a, 0x13, 0x48, 0x42, 0x53,
	0x4c, 0x5f, 0x4c, 0x61, 0x73, 0x74, 0x54, 0x68, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d,
	0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x68, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x54, 0x68, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d,
	0x12, 0x24, 0x0a, 0x0d, 0x54, 0x68, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x54, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0d, 0x54, 0x68, 0x75, 0x6e, 0x64, 0x65, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x54, 0x22, 0x52, 0x0a, 0x0e, 0x48, 0x42, 0x53, 0x4c, 0x5f, 0x5a,
	0x68, 0x75, 0x61, 0x6e, 0x67, 0x57, 0x69, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x5a, 0x68, 0x75, 0x61,
	0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0c,
	0x5a, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09,
	0x5a, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x57, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x09, 0x5a, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x57, 0x69, 0x6e, 0x22, 0x56, 0x0a, 0x10, 0x48, 0x42,
	0x53, 0x4c, 0x5f, 0x48, 0x6f, 0x6e, 0x67, 0x62, 0x61, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x42,
	0x0a, 0x0d, 0x4c, 0x61, 0x73, 0x74, 0x46, 0x61, 0x48, 0x6f, 0x6e, 0x67, 0x62, 0x61, 0x6f, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x48, 0x42, 0x53, 0x4c, 0x5f, 0x4c, 0x61, 0x73, 0x74, 0x46, 0x61, 0x48, 0x6f, 0x6e, 0x67,
	0x62, 0x61, 0x6f, 0x52, 0x0d, 0x4c, 0x61, 0x73, 0x74, 0x46, 0x61, 0x48, 0x6f, 0x6e, 0x67, 0x62,
	0x61, 0x6f, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f,
}

var (
	file_GameMsg_HBSL_proto_rawDescOnce sync.Once
	file_GameMsg_HBSL_proto_rawDescData = file_GameMsg_HBSL_proto_rawDesc
)

func file_GameMsg_HBSL_proto_rawDescGZIP() []byte {
	file_GameMsg_HBSL_proto_rawDescOnce.Do(func() {
		file_GameMsg_HBSL_proto_rawDescData = protoimpl.X.CompressGZIP(file_GameMsg_HBSL_proto_rawDescData)
	})
	return file_GameMsg_HBSL_proto_rawDescData
}

var file_GameMsg_HBSL_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_GameMsg_HBSL_proto_goTypes = []interface{}{
	(*HBSL_Setting)(nil),            // 0: netproto.HBSL_Setting
	(*HBSL_Sate)(nil),               // 1: netproto.HBSL_Sate
	(*HBSL_ZhuangInfo)(nil),         // 2: netproto.HBSL_ZhuangInfo
	(*HBSL_SaoLeiUserInfo)(nil),     // 3: netproto.HBSL_SaoLeiUserInfo
	(*HBSL_FaHongbao)(nil),          // 4: netproto.HBSL_FaHongbao
	(*HBSL_FaHongbaoRet)(nil),       // 5: netproto.HBSL_FaHongbaoRet
	(*HBSL_QiangHongbaoRet)(nil),    // 6: netproto.HBSL_QiangHongbaoRet
	(*HBSL_LastGameResultType)(nil), // 7: netproto.HBSL_LastGameResultType
	(*HBSL_LastFaHongbao)(nil),      // 8: netproto.HBSL_LastFaHongbao
	(*HBSL_LastThunderNum)(nil),     // 9: netproto.HBSL_LastThunderNum
	(*HBSL_ZhuangWin)(nil),          // 10: netproto.HBSL_ZhuangWin
	(*HBSL_HongbaoList)(nil),        // 11: netproto.HBSL_HongbaoList
}
var file_GameMsg_HBSL_proto_depIdxs = []int32{
	3, // 0: netproto.HBSL_ZhuangInfo.SaoLeiUserInfo:type_name -> netproto.HBSL_SaoLeiUserInfo
	4, // 1: netproto.HBSL_FaHongbaoRet.HongbaoInfo:type_name -> netproto.HBSL_FaHongbao
	9, // 2: netproto.HBSL_LastGameResultType.LastThunderNum:type_name -> netproto.HBSL_LastThunderNum
	8, // 3: netproto.HBSL_HongbaoList.LastFaHongbao:type_name -> netproto.HBSL_LastFaHongbao
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_GameMsg_HBSL_proto_init() }
func file_GameMsg_HBSL_proto_init() {
	if File_GameMsg_HBSL_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_GameMsg_HBSL_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HBSL_Setting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_HBSL_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HBSL_Sate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_HBSL_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HBSL_ZhuangInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_HBSL_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HBSL_SaoLeiUserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_HBSL_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HBSL_FaHongbao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_HBSL_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HBSL_FaHongbaoRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_HBSL_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HBSL_QiangHongbaoRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_HBSL_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HBSL_LastGameResultType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_HBSL_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HBSL_LastFaHongbao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_HBSL_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HBSL_LastThunderNum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_HBSL_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HBSL_ZhuangWin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_HBSL_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HBSL_HongbaoList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_GameMsg_HBSL_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_GameMsg_HBSL_proto_goTypes,
		DependencyIndexes: file_GameMsg_HBSL_proto_depIdxs,
		MessageInfos:      file_GameMsg_HBSL_proto_msgTypes,
	}.Build()
	File_GameMsg_HBSL_proto = out.File
	file_GameMsg_HBSL_proto_rawDesc = nil
	file_GameMsg_HBSL_proto_goTypes = nil
	file_GameMsg_HBSL_proto_depIdxs = nil
}
