// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0-devel
// 	protoc        v3.13.0
// source: NotifyServer.proto

package netproto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type NotifyServerClassID int32

const (
	NotifyServerClassID_ServerRegID                 NotifyServerClassID = 1
	NotifyServerClassID_AnnID                       NotifyServerClassID = 2
	NotifyServerClassID_AttrChangeID                NotifyServerClassID = 3
	NotifyServerClassID_ServerStopID                NotifyServerClassID = 4
	NotifyServerClassID_RefreshVersionID            NotifyServerClassID = 5
	NotifyServerClassID_ServerStopWhiteIPListID     NotifyServerClassID = 6
	NotifyServerClassID_ServerHostAndBackUp         NotifyServerClassID = 7
	NotifyServerClassID_AnnFishRegID                NotifyServerClassID = 8 //註冊捕魚公告
	NotifyServerClassID_AnnFishID                   NotifyServerClassID = 9 //捕魚公告
	NotifyServerClassID_PayOrderID                  NotifyServerClassID = 10
	NotifyServerClassID_UpdateHallUserListID        NotifyServerClassID = 11 //需要獲取用戶推送消息的UserID
	NotifyServerClassID_UserNotifyRetN2HID          NotifyServerClassID = 12 //發送通知消息 Notify->Hall
	NotifyServerClassID_UserNotifyRetH2CID          NotifyServerClassID = 13 //發送通知消息 Hall->Client
	NotifyServerClassID_UpdateUserNotifyIdxH2NID    NotifyServerClassID = 15 //更新通知序列號 Hall->Notify
	NotifyServerClassID_AnnBrnnHistoryID            NotifyServerClassID = 16 //百人牛路单公告
	NotifyServerClassID_AnnBjlHistoryID             NotifyServerClassID = 17 //百家乐路单
	NotifyServerClassID_AnnLhdHistoryID             NotifyServerClassID = 18 //龙虎斗路单
	NotifyServerClassID_AnnWrjhHistoryID            NotifyServerClassID = 19 //万人金花路单
	NotifyServerClassID_KickPlayerID                NotifyServerClassID = 20 //踢出玩家
	NotifyServerClassID_CustomCardID                NotifyServerClassID = 21 //自定义发牌
	NotifyServerClassID_RefreshSysRTPID             NotifyServerClassID = 22 //刷新RTP
	NotifyServerClassID_RefreshRobotConfigID        NotifyServerClassID = 23 //刷新robot config
	NotifyServerClassID_AnnGameSettleID             NotifyServerClassID = 24 //游戏结算跑马灯
	NotifyServerClassID_KickAllRobotsByServerID     NotifyServerClassID = 25 //踢出match server 機器人
	NotifyServerClassID_SyncLoginRobotsByServerID   NotifyServerClassID = 26 //刷新match server機器人數量
	NotifyServerClassID_SyncGameServerStatus        NotifyServerClassID = 27 //games server與notify連線後 notify同步服務器狀態
	NotifyServerClassID_GameRecommendsRefresh       NotifyServerClassID = 28 //后台更新热门游戏列表
	NotifyServerClassID_NotifyGameRecommendsRefresh NotifyServerClassID = 29 //广播后台更新热门游戏列表
	NotifyServerClassID_NotifyGameServerRegHall     NotifyServerClassID = 30 //通知gameserver重新註冊hall
	NotifyServerClassID_AnnHHDZHistoryID            NotifyServerClassID = 31 //紅黑大戰路单
	NotifyServerClassID_GameLobbyRefresh            NotifyServerClassID = 32 //廣播lobby刷新
	NotifyServerClassID_KickLobbyAllPlayer          NotifyServerClassID = 33 //剔除lobby全部玩家
	NotifyServerClassID_GameLobbySetConfigRefresh   NotifyServerClassID = 34 //廣播lobby設定刷新
	NotifyServerClassID_GetGameLobbyAddrRefresh     NotifyServerClassID = 35 //廣播hall刷新lobby addr
)

// Enum value maps for NotifyServerClassID.
var (
	NotifyServerClassID_name = map[int32]string{
		1:  "ServerRegID",
		2:  "AnnID",
		3:  "AttrChangeID",
		4:  "ServerStopID",
		5:  "RefreshVersionID",
		6:  "ServerStopWhiteIPListID",
		7:  "ServerHostAndBackUp",
		8:  "AnnFishRegID",
		9:  "AnnFishID",
		10: "PayOrderID",
		11: "UpdateHallUserListID",
		12: "UserNotifyRetN2HID",
		13: "UserNotifyRetH2CID",
		15: "UpdateUserNotifyIdxH2NID",
		16: "AnnBrnnHistoryID",
		17: "AnnBjlHistoryID",
		18: "AnnLhdHistoryID",
		19: "AnnWrjhHistoryID",
		20: "KickPlayerID",
		21: "CustomCardID",
		22: "RefreshSysRTPID",
		23: "RefreshRobotConfigID",
		24: "AnnGameSettleID",
		25: "KickAllRobotsByServerID",
		26: "SyncLoginRobotsByServerID",
		27: "SyncGameServerStatus",
		28: "GameRecommendsRefresh",
		29: "NotifyGameRecommendsRefresh",
		30: "NotifyGameServerRegHall",
		31: "AnnHHDZHistoryID",
		32: "GameLobbyRefresh",
		33: "KickLobbyAllPlayer",
		34: "GameLobbySetConfigRefresh",
		35: "GetGameLobbyAddrRefresh",
	}
	NotifyServerClassID_value = map[string]int32{
		"ServerRegID":                 1,
		"AnnID":                       2,
		"AttrChangeID":                3,
		"ServerStopID":                4,
		"RefreshVersionID":            5,
		"ServerStopWhiteIPListID":     6,
		"ServerHostAndBackUp":         7,
		"AnnFishRegID":                8,
		"AnnFishID":                   9,
		"PayOrderID":                  10,
		"UpdateHallUserListID":        11,
		"UserNotifyRetN2HID":          12,
		"UserNotifyRetH2CID":          13,
		"UpdateUserNotifyIdxH2NID":    15,
		"AnnBrnnHistoryID":            16,
		"AnnBjlHistoryID":             17,
		"AnnLhdHistoryID":             18,
		"AnnWrjhHistoryID":            19,
		"KickPlayerID":                20,
		"CustomCardID":                21,
		"RefreshSysRTPID":             22,
		"RefreshRobotConfigID":        23,
		"AnnGameSettleID":             24,
		"KickAllRobotsByServerID":     25,
		"SyncLoginRobotsByServerID":   26,
		"SyncGameServerStatus":        27,
		"GameRecommendsRefresh":       28,
		"NotifyGameRecommendsRefresh": 29,
		"NotifyGameServerRegHall":     30,
		"AnnHHDZHistoryID":            31,
		"GameLobbyRefresh":            32,
		"KickLobbyAllPlayer":          33,
		"GameLobbySetConfigRefresh":   34,
		"GetGameLobbyAddrRefresh":     35,
	}
)

func (x NotifyServerClassID) Enum() *NotifyServerClassID {
	p := new(NotifyServerClassID)
	*p = x
	return p
}

func (x NotifyServerClassID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotifyServerClassID) Descriptor() protoreflect.EnumDescriptor {
	return file_NotifyServer_proto_enumTypes[0].Descriptor()
}

func (NotifyServerClassID) Type() protoreflect.EnumType {
	return &file_NotifyServer_proto_enumTypes[0]
}

func (x NotifyServerClassID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *NotifyServerClassID) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = NotifyServerClassID(num)
	return nil
}

// Deprecated: Use NotifyServerClassID.Descriptor instead.
func (NotifyServerClassID) EnumDescriptor() ([]byte, []int) {
	return file_NotifyServer_proto_rawDescGZIP(), []int{0}
}

var File_NotifyServer_proto protoreflect.FileDescriptor

var file_NotifyServer_proto_rawDesc = []byte{
	0x0a, 0x12, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2a, 0xa7,
	0x06, 0x0a, 0x13, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x49, 0x44, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x52, 0x65, 0x67, 0x49, 0x44, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x6e, 0x6e, 0x49, 0x44,
	0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x74, 0x74, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x49, 0x44, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74,
	0x6f, 0x70, 0x49, 0x44, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x10, 0x05, 0x12, 0x1b, 0x0a, 0x17,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x70, 0x57, 0x68, 0x69, 0x74, 0x65, 0x49,
	0x50, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x44, 0x10, 0x06, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x41, 0x6e, 0x64, 0x42, 0x61, 0x63, 0x6b, 0x55, 0x70,
	0x10, 0x07, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x6e, 0x6e, 0x46, 0x69, 0x73, 0x68, 0x52, 0x65, 0x67,
	0x49, 0x44, 0x10, 0x08, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x6e, 0x6e, 0x46, 0x69, 0x73, 0x68, 0x49,
	0x44, 0x10, 0x09, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x44, 0x10, 0x0a, 0x12, 0x18, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x61, 0x6c,
	0x6c, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x44, 0x10, 0x0b, 0x12, 0x16, 0x0a,
	0x12, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x74, 0x4e, 0x32,
	0x48, 0x49, 0x44, 0x10, 0x0c, 0x12, 0x16, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x52, 0x65, 0x74, 0x48, 0x32, 0x43, 0x49, 0x44, 0x10, 0x0d, 0x12, 0x1c, 0x0a,
	0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x49, 0x64, 0x78, 0x48, 0x32, 0x4e, 0x49, 0x44, 0x10, 0x0f, 0x12, 0x14, 0x0a, 0x10, 0x41,
	0x6e, 0x6e, 0x42, 0x72, 0x6e, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x10,
	0x10, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x6e, 0x6e, 0x42, 0x6a, 0x6c, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x49, 0x44, 0x10, 0x11, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x6e, 0x6e, 0x4c, 0x68, 0x64,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x10, 0x12, 0x12, 0x14, 0x0a, 0x10, 0x41,
	0x6e, 0x6e, 0x57, 0x72, 0x6a, 0x68, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x10,
	0x13, 0x12, 0x10, 0x0a, 0x0c, 0x4b, 0x69, 0x63, 0x6b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x44, 0x10, 0x14, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x43, 0x61, 0x72,
	0x64, 0x49, 0x44, 0x10, 0x15, 0x12, 0x13, 0x0a, 0x0f, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x53, 0x79, 0x73, 0x52, 0x54, 0x50, 0x49, 0x44, 0x10, 0x16, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x49, 0x44, 0x10, 0x17, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x6e, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x53,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x44, 0x10, 0x18, 0x12, 0x1b, 0x0a, 0x17, 0x4b, 0x69, 0x63,
	0x6b, 0x41, 0x6c, 0x6c, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x73, 0x42, 0x79, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x49, 0x44, 0x10, 0x19, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x79, 0x6e, 0x63, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x73, 0x42, 0x79, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x49, 0x44, 0x10, 0x1a, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x79, 0x6e, 0x63, 0x47, 0x61, 0x6d,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0x1b, 0x12,
	0x19, 0x0a, 0x15, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x73, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x10, 0x1c, 0x12, 0x1f, 0x0a, 0x1b, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x73, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x10, 0x1d, 0x12, 0x1b, 0x0a, 0x17, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52,
	0x65, 0x67, 0x48, 0x61, 0x6c, 0x6c, 0x10, 0x1e, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x6e, 0x6e, 0x48,
	0x48, 0x44, 0x5a, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x10, 0x1f, 0x12, 0x14,
	0x0a, 0x10, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x52, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x10, 0x20, 0x12, 0x16, 0x0a, 0x12, 0x4b, 0x69, 0x63, 0x6b, 0x4c, 0x6f, 0x62, 0x62,
	0x79, 0x41, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x10, 0x21, 0x12, 0x1d, 0x0a, 0x19,
	0x47, 0x61, 0x6d, 0x65, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x10, 0x22, 0x12, 0x1b, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x41, 0x64, 0x64, 0x72, 0x52,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x10, 0x23, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x6e, 0x65,
	0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f,
}

var (
	file_NotifyServer_proto_rawDescOnce sync.Once
	file_NotifyServer_proto_rawDescData = file_NotifyServer_proto_rawDesc
)

func file_NotifyServer_proto_rawDescGZIP() []byte {
	file_NotifyServer_proto_rawDescOnce.Do(func() {
		file_NotifyServer_proto_rawDescData = protoimpl.X.CompressGZIP(file_NotifyServer_proto_rawDescData)
	})
	return file_NotifyServer_proto_rawDescData
}

var file_NotifyServer_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_NotifyServer_proto_goTypes = []interface{}{
	(NotifyServerClassID)(0), // 0: netproto.NotifyServerClassID
}
var file_NotifyServer_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_NotifyServer_proto_init() }
func file_NotifyServer_proto_init() {
	if File_NotifyServer_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_NotifyServer_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_NotifyServer_proto_goTypes,
		DependencyIndexes: file_NotifyServer_proto_depIdxs,
		EnumInfos:         file_NotifyServer_proto_enumTypes,
	}.Build()
	File_NotifyServer_proto = out.File
	file_NotifyServer_proto_rawDesc = nil
	file_NotifyServer_proto_goTypes = nil
	file_NotifyServer_proto_depIdxs = nil
}
