// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: HttpMsg_ZJH.proto

package netproto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Http_ZJH_ServerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableList      []int32                `protobuf:"varint,1,rep,name=TableList" json:"TableList,omitempty"`
	OnlineUserList []*Http_ZJH_UserInfo   `protobuf:"bytes,2,rep,name=OnlineUserList" json:"OnlineUserList,omitempty"` //online user list
	BaoZiCount     *Http_ZJH_CardTypeInfo `protobuf:"bytes,3,req,name=BaoZiCount" json:"BaoZiCount,omitempty"`
	SunJinCount    *Http_ZJH_CardTypeInfo `protobuf:"bytes,4,req,name=SunJinCount" json:"SunJinCount,omitempty"`
	JiaHuaCount    *Http_ZJH_CardTypeInfo `protobuf:"bytes,5,req,name=JiaHuaCount" json:"JiaHuaCount,omitempty"`
	SunZiCount     *Http_ZJH_CardTypeInfo `protobuf:"bytes,6,req,name=SunZiCount" json:"SunZiCount,omitempty"`
	DuiZiCount     *Http_ZJH_CardTypeInfo `protobuf:"bytes,7,req,name=DuiZiCount" json:"DuiZiCount,omitempty"`
	SanPaiCount    *Http_ZJH_CardTypeInfo `protobuf:"bytes,8,req,name=SanPaiCount" json:"SanPaiCount,omitempty"`
	FapaiRule      *int32                 `protobuf:"varint,9,req,name=FapaiRule" json:"FapaiRule,omitempty"` //發牌規則 1 大牌規則, 2 一般規則
}

func (x *Http_ZJH_ServerInfo) Reset() {
	*x = Http_ZJH_ServerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HttpMsg_ZJH_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Http_ZJH_ServerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Http_ZJH_ServerInfo) ProtoMessage() {}

func (x *Http_ZJH_ServerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_HttpMsg_ZJH_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Http_ZJH_ServerInfo.ProtoReflect.Descriptor instead.
func (*Http_ZJH_ServerInfo) Descriptor() ([]byte, []int) {
	return file_HttpMsg_ZJH_proto_rawDescGZIP(), []int{0}
}

func (x *Http_ZJH_ServerInfo) GetTableList() []int32 {
	if x != nil {
		return x.TableList
	}
	return nil
}

func (x *Http_ZJH_ServerInfo) GetOnlineUserList() []*Http_ZJH_UserInfo {
	if x != nil {
		return x.OnlineUserList
	}
	return nil
}

func (x *Http_ZJH_ServerInfo) GetBaoZiCount() *Http_ZJH_CardTypeInfo {
	if x != nil {
		return x.BaoZiCount
	}
	return nil
}

func (x *Http_ZJH_ServerInfo) GetSunJinCount() *Http_ZJH_CardTypeInfo {
	if x != nil {
		return x.SunJinCount
	}
	return nil
}

func (x *Http_ZJH_ServerInfo) GetJiaHuaCount() *Http_ZJH_CardTypeInfo {
	if x != nil {
		return x.JiaHuaCount
	}
	return nil
}

func (x *Http_ZJH_ServerInfo) GetSunZiCount() *Http_ZJH_CardTypeInfo {
	if x != nil {
		return x.SunZiCount
	}
	return nil
}

func (x *Http_ZJH_ServerInfo) GetDuiZiCount() *Http_ZJH_CardTypeInfo {
	if x != nil {
		return x.DuiZiCount
	}
	return nil
}

func (x *Http_ZJH_ServerInfo) GetSanPaiCount() *Http_ZJH_CardTypeInfo {
	if x != nil {
		return x.SanPaiCount
	}
	return nil
}

func (x *Http_ZJH_ServerInfo) GetFapaiRule() int32 {
	if x != nil && x.FapaiRule != nil {
		return *x.FapaiRule
	}
	return 0
}

type Http_ZJH_CardTypeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count *int32 `protobuf:"varint,1,req,name=Count" json:"Count,omitempty"`
	Rate  *int32 `protobuf:"varint,2,req,name=Rate" json:"Rate,omitempty"`
}

func (x *Http_ZJH_CardTypeInfo) Reset() {
	*x = Http_ZJH_CardTypeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HttpMsg_ZJH_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Http_ZJH_CardTypeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Http_ZJH_CardTypeInfo) ProtoMessage() {}

func (x *Http_ZJH_CardTypeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_HttpMsg_ZJH_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Http_ZJH_CardTypeInfo.ProtoReflect.Descriptor instead.
func (*Http_ZJH_CardTypeInfo) Descriptor() ([]byte, []int) {
	return file_HttpMsg_ZJH_proto_rawDescGZIP(), []int{1}
}

func (x *Http_ZJH_CardTypeInfo) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *Http_ZJH_CardTypeInfo) GetRate() int32 {
	if x != nil && x.Rate != nil {
		return *x.Rate
	}
	return 0
}

type Http_ZJH_UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID          *int32  `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`                   //玩家ID
	UserType        *int32  `protobuf:"varint,2,req,name=UserType" json:"UserType,omitempty"`               //玩家类型 0机器人 1玩家
	NickName        *string `protobuf:"bytes,3,req,name=NickName" json:"NickName,omitempty"`                //玩家昵称
	GameScore       *int64  `protobuf:"varint,4,req,name=GameScore" json:"GameScore,omitempty"`             //游戏总输赢
	InitMoney       *int64  `protobuf:"varint,5,req,name=InitMoney" json:"InitMoney,omitempty"`             //初始金币
	CurrentMoney    *int64  `protobuf:"varint,6,req,name=CurrentMoney" json:"CurrentMoney,omitempty"`       //当前金币
	SumCharge       *int64  `protobuf:"varint,7,req,name=SumCharge" json:"SumCharge,omitempty"`             //總充值
	SumConvert      *int64  `protobuf:"varint,8,req,name=SumConvert" json:"SumConvert,omitempty"`           //總兌換
	SumWinLose      *int64  `protobuf:"varint,9,req,name=SumWinLose" json:"SumWinLose,omitempty"`           //總輸贏
	TodayCharge     *int64  `protobuf:"varint,10,req,name=TodayCharge" json:"TodayCharge,omitempty"`        //今日充值
	TodayConvert    *int64  `protobuf:"varint,11,req,name=TodayConvert" json:"TodayConvert,omitempty"`      //今日兌換
	TodayWinLose    *int64  `protobuf:"varint,12,req,name=TodayWinLose" json:"TodayWinLose,omitempty"`      //今日輸贏
	TableNo         *int64  `protobuf:"varint,13,req,name=TableNo" json:"TableNo,omitempty"`                //當前桌號
	CurrentCard     *string `protobuf:"bytes,14,req,name=CurrentCard" json:"CurrentCard,omitempty"`         //當前牌
	CurrentCardType *string `protobuf:"bytes,15,req,name=CurrentCardType" json:"CurrentCardType,omitempty"` //當前牌型
	IsVIP           *bool   `protobuf:"varint,16,req,name=IsVIP" json:"IsVIP,omitempty"`                    //是否監控用戶
	LoginName       *string `protobuf:"bytes,17,req,name=LoginName" json:"LoginName,omitempty"`
	AlipayAccount   *string `protobuf:"bytes,18,req,name=AlipayAccount" json:"AlipayAccount,omitempty"`
}

func (x *Http_ZJH_UserInfo) Reset() {
	*x = Http_ZJH_UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HttpMsg_ZJH_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Http_ZJH_UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Http_ZJH_UserInfo) ProtoMessage() {}

func (x *Http_ZJH_UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_HttpMsg_ZJH_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Http_ZJH_UserInfo.ProtoReflect.Descriptor instead.
func (*Http_ZJH_UserInfo) Descriptor() ([]byte, []int) {
	return file_HttpMsg_ZJH_proto_rawDescGZIP(), []int{2}
}

func (x *Http_ZJH_UserInfo) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *Http_ZJH_UserInfo) GetUserType() int32 {
	if x != nil && x.UserType != nil {
		return *x.UserType
	}
	return 0
}

func (x *Http_ZJH_UserInfo) GetNickName() string {
	if x != nil && x.NickName != nil {
		return *x.NickName
	}
	return ""
}

func (x *Http_ZJH_UserInfo) GetGameScore() int64 {
	if x != nil && x.GameScore != nil {
		return *x.GameScore
	}
	return 0
}

func (x *Http_ZJH_UserInfo) GetInitMoney() int64 {
	if x != nil && x.InitMoney != nil {
		return *x.InitMoney
	}
	return 0
}

func (x *Http_ZJH_UserInfo) GetCurrentMoney() int64 {
	if x != nil && x.CurrentMoney != nil {
		return *x.CurrentMoney
	}
	return 0
}

func (x *Http_ZJH_UserInfo) GetSumCharge() int64 {
	if x != nil && x.SumCharge != nil {
		return *x.SumCharge
	}
	return 0
}

func (x *Http_ZJH_UserInfo) GetSumConvert() int64 {
	if x != nil && x.SumConvert != nil {
		return *x.SumConvert
	}
	return 0
}

func (x *Http_ZJH_UserInfo) GetSumWinLose() int64 {
	if x != nil && x.SumWinLose != nil {
		return *x.SumWinLose
	}
	return 0
}

func (x *Http_ZJH_UserInfo) GetTodayCharge() int64 {
	if x != nil && x.TodayCharge != nil {
		return *x.TodayCharge
	}
	return 0
}

func (x *Http_ZJH_UserInfo) GetTodayConvert() int64 {
	if x != nil && x.TodayConvert != nil {
		return *x.TodayConvert
	}
	return 0
}

func (x *Http_ZJH_UserInfo) GetTodayWinLose() int64 {
	if x != nil && x.TodayWinLose != nil {
		return *x.TodayWinLose
	}
	return 0
}

func (x *Http_ZJH_UserInfo) GetTableNo() int64 {
	if x != nil && x.TableNo != nil {
		return *x.TableNo
	}
	return 0
}

func (x *Http_ZJH_UserInfo) GetCurrentCard() string {
	if x != nil && x.CurrentCard != nil {
		return *x.CurrentCard
	}
	return ""
}

func (x *Http_ZJH_UserInfo) GetCurrentCardType() string {
	if x != nil && x.CurrentCardType != nil {
		return *x.CurrentCardType
	}
	return ""
}

func (x *Http_ZJH_UserInfo) GetIsVIP() bool {
	if x != nil && x.IsVIP != nil {
		return *x.IsVIP
	}
	return false
}

func (x *Http_ZJH_UserInfo) GetLoginName() string {
	if x != nil && x.LoginName != nil {
		return *x.LoginName
	}
	return ""
}

func (x *Http_ZJH_UserInfo) GetAlipayAccount() string {
	if x != nil && x.AlipayAccount != nil {
		return *x.AlipayAccount
	}
	return ""
}

type Http_ZJH_AssignTableList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableList []int32 `protobuf:"varint,1,rep,name=TableList" json:"TableList,omitempty"`
}

func (x *Http_ZJH_AssignTableList) Reset() {
	*x = Http_ZJH_AssignTableList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HttpMsg_ZJH_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Http_ZJH_AssignTableList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Http_ZJH_AssignTableList) ProtoMessage() {}

func (x *Http_ZJH_AssignTableList) ProtoReflect() protoreflect.Message {
	mi := &file_HttpMsg_ZJH_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Http_ZJH_AssignTableList.ProtoReflect.Descriptor instead.
func (*Http_ZJH_AssignTableList) Descriptor() ([]byte, []int) {
	return file_HttpMsg_ZJH_proto_rawDescGZIP(), []int{3}
}

func (x *Http_ZJH_AssignTableList) GetTableList() []int32 {
	if x != nil {
		return x.TableList
	}
	return nil
}

var File_HttpMsg_ZJH_proto protoreflect.FileDescriptor

var file_HttpMsg_ZJH_proto_rawDesc = []byte{
	0x0a, 0x11, 0x48, 0x74, 0x74, 0x70, 0x4d, 0x73, 0x67, 0x5f, 0x5a, 0x4a, 0x48, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa2, 0x04,
	0x0a, 0x13, 0x48, 0x74, 0x74, 0x70, 0x5f, 0x5a, 0x4a, 0x48, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x0e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6e, 0x65,
	0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x5f, 0x5a, 0x4a, 0x48, 0x5f,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x0a, 0x42, 0x61, 0x6f, 0x5a,
	0x69, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6e,
	0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x5f, 0x5a, 0x4a, 0x48,
	0x5f, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x42,
	0x61, 0x6f, 0x5a, 0x69, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x41, 0x0a, 0x0b, 0x53, 0x75, 0x6e,
	0x4a, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x5f, 0x5a,
	0x4a, 0x48, 0x5f, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0b, 0x53, 0x75, 0x6e, 0x4a, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x41, 0x0a, 0x0b,
	0x4a, 0x69, 0x61, 0x48, 0x75, 0x61, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x02, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x74, 0x74,
	0x70, 0x5f, 0x5a, 0x4a, 0x48, 0x5f, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0b, 0x4a, 0x69, 0x61, 0x48, 0x75, 0x61, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x3f, 0x0a, 0x0a, 0x53, 0x75, 0x6e, 0x5a, 0x69, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20,
	0x02, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48,
	0x74, 0x74, 0x70, 0x5f, 0x5a, 0x4a, 0x48, 0x5f, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x53, 0x75, 0x6e, 0x5a, 0x69, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x3f, 0x0a, 0x0a, 0x44, 0x75, 0x69, 0x5a, 0x69, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07,
	0x20, 0x02, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x48, 0x74, 0x74, 0x70, 0x5f, 0x5a, 0x4a, 0x48, 0x5f, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x44, 0x75, 0x69, 0x5a, 0x69, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x41, 0x0a, 0x0b, 0x53, 0x61, 0x6e, 0x50, 0x61, 0x69, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x08, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x5f, 0x5a, 0x4a, 0x48, 0x5f, 0x43, 0x61, 0x72, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x53, 0x61, 0x6e, 0x50, 0x61, 0x69, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x61, 0x70, 0x61, 0x69, 0x52, 0x75, 0x6c,
	0x65, 0x18, 0x09, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x46, 0x61, 0x70, 0x61, 0x69, 0x52, 0x75,
	0x6c, 0x65, 0x22, 0x41, 0x0a, 0x15, 0x48, 0x74, 0x74, 0x70, 0x5f, 0x5a, 0x4a, 0x48, 0x5f, 0x43,
	0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x04, 0x52, 0x61, 0x74, 0x65, 0x22, 0xcb, 0x04, 0x0a, 0x11, 0x48, 0x74, 0x74, 0x70, 0x5f, 0x5a,
	0x4a, 0x48, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x47,
	0x61, 0x6d, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x03, 0x52, 0x09,
	0x47, 0x61, 0x6d, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x6e, 0x69,
	0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x05, 0x20, 0x02, 0x28, 0x03, 0x52, 0x09, 0x49, 0x6e,
	0x69, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x06, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0c, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x53,
	0x75, 0x6d, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x18, 0x07, 0x20, 0x02, 0x28, 0x03, 0x52, 0x09,
	0x53, 0x75, 0x6d, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x75, 0x6d,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x18, 0x08, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0a, 0x53,
	0x75, 0x6d, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x75, 0x6d,
	0x57, 0x69, 0x6e, 0x4c, 0x6f, 0x73, 0x65, 0x18, 0x09, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0a, 0x53,
	0x75, 0x6d, 0x57, 0x69, 0x6e, 0x4c, 0x6f, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x6f, 0x64,
	0x61, 0x79, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0b,
	0x54, 0x6f, 0x64, 0x61, 0x79, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x54,
	0x6f, 0x64, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x18, 0x0b, 0x20, 0x02, 0x28,
	0x03, 0x52, 0x0c, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x57, 0x69, 0x6e, 0x4c, 0x6f, 0x73, 0x65, 0x18,
	0x0c, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0c, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x57, 0x69, 0x6e, 0x4c,
	0x6f, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x6f, 0x18, 0x0d,
	0x20, 0x02, 0x28, 0x03, 0x52, 0x07, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x6f, 0x12, 0x20, 0x0a,
	0x0b, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x72, 0x64, 0x18, 0x0e, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x0b, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x72, 0x64, 0x12,
	0x28, 0x0a, 0x0f, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x0f, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0f, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x73, 0x56,
	0x49, 0x50, 0x18, 0x10, 0x20, 0x02, 0x28, 0x08, 0x52, 0x05, 0x49, 0x73, 0x56, 0x49, 0x50, 0x12,
	0x1c, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x09, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x12,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x0d, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x38, 0x0a, 0x18, 0x48, 0x74, 0x74, 0x70, 0x5f, 0x5a, 0x4a, 0x48, 0x5f,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x09, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x0c, 0x5a,
	0x0a, 0x2e, 0x2f, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f,
}

var (
	file_HttpMsg_ZJH_proto_rawDescOnce sync.Once
	file_HttpMsg_ZJH_proto_rawDescData = file_HttpMsg_ZJH_proto_rawDesc
)

func file_HttpMsg_ZJH_proto_rawDescGZIP() []byte {
	file_HttpMsg_ZJH_proto_rawDescOnce.Do(func() {
		file_HttpMsg_ZJH_proto_rawDescData = protoimpl.X.CompressGZIP(file_HttpMsg_ZJH_proto_rawDescData)
	})
	return file_HttpMsg_ZJH_proto_rawDescData
}

var file_HttpMsg_ZJH_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_HttpMsg_ZJH_proto_goTypes = []interface{}{
	(*Http_ZJH_ServerInfo)(nil),      // 0: netproto.Http_ZJH_ServerInfo
	(*Http_ZJH_CardTypeInfo)(nil),    // 1: netproto.Http_ZJH_CardTypeInfo
	(*Http_ZJH_UserInfo)(nil),        // 2: netproto.Http_ZJH_UserInfo
	(*Http_ZJH_AssignTableList)(nil), // 3: netproto.Http_ZJH_AssignTableList
}
var file_HttpMsg_ZJH_proto_depIdxs = []int32{
	2, // 0: netproto.Http_ZJH_ServerInfo.OnlineUserList:type_name -> netproto.Http_ZJH_UserInfo
	1, // 1: netproto.Http_ZJH_ServerInfo.BaoZiCount:type_name -> netproto.Http_ZJH_CardTypeInfo
	1, // 2: netproto.Http_ZJH_ServerInfo.SunJinCount:type_name -> netproto.Http_ZJH_CardTypeInfo
	1, // 3: netproto.Http_ZJH_ServerInfo.JiaHuaCount:type_name -> netproto.Http_ZJH_CardTypeInfo
	1, // 4: netproto.Http_ZJH_ServerInfo.SunZiCount:type_name -> netproto.Http_ZJH_CardTypeInfo
	1, // 5: netproto.Http_ZJH_ServerInfo.DuiZiCount:type_name -> netproto.Http_ZJH_CardTypeInfo
	1, // 6: netproto.Http_ZJH_ServerInfo.SanPaiCount:type_name -> netproto.Http_ZJH_CardTypeInfo
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_HttpMsg_ZJH_proto_init() }
func file_HttpMsg_ZJH_proto_init() {
	if File_HttpMsg_ZJH_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_HttpMsg_ZJH_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Http_ZJH_ServerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HttpMsg_ZJH_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Http_ZJH_CardTypeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HttpMsg_ZJH_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Http_ZJH_UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HttpMsg_ZJH_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Http_ZJH_AssignTableList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_HttpMsg_ZJH_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_HttpMsg_ZJH_proto_goTypes,
		DependencyIndexes: file_HttpMsg_ZJH_proto_depIdxs,
		MessageInfos:      file_HttpMsg_ZJH_proto_msgTypes,
	}.Build()
	File_HttpMsg_ZJH_proto = out.File
	file_HttpMsg_ZJH_proto_rawDesc = nil
	file_HttpMsg_ZJH_proto_goTypes = nil
	file_HttpMsg_ZJH_proto_depIdxs = nil
}
