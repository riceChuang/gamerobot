// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: DBServerMsg.proto

package netproto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type DBServerRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  *int32  `protobuf:"varint,1,req,name=Code" json:"Code,omitempty"`
	Param *string `protobuf:"bytes,2,opt,name=Param" json:"Param,omitempty"`
}

func (x *DBServerRet) Reset() {
	*x = DBServerRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DBServerMsg_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBServerRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBServerRet) ProtoMessage() {}

func (x *DBServerRet) ProtoReflect() protoreflect.Message {
	mi := &file_DBServerMsg_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBServerRet.ProtoReflect.Descriptor instead.
func (*DBServerRet) Descriptor() ([]byte, []int) {
	return file_DBServerMsg_proto_rawDescGZIP(), []int{0}
}

func (x *DBServerRet) GetCode() int32 {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return 0
}

func (x *DBServerRet) GetParam() string {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return ""
}

type HallServerStart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerID   *int32  `protobuf:"varint,1,req,name=ServerID" json:"ServerID,omitempty"`
	ClientAddr *string `protobuf:"bytes,2,req,name=ClientAddr" json:"ClientAddr,omitempty"`
	NotifyAddr *string `protobuf:"bytes,3,req,name=NotifyAddr" json:"NotifyAddr,omitempty"`
	HttpAddr   *string `protobuf:"bytes,4,req,name=HttpAddr" json:"HttpAddr,omitempty"`
}

func (x *HallServerStart) Reset() {
	*x = HallServerStart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DBServerMsg_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HallServerStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HallServerStart) ProtoMessage() {}

func (x *HallServerStart) ProtoReflect() protoreflect.Message {
	mi := &file_DBServerMsg_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HallServerStart.ProtoReflect.Descriptor instead.
func (*HallServerStart) Descriptor() ([]byte, []int) {
	return file_DBServerMsg_proto_rawDescGZIP(), []int{1}
}

func (x *HallServerStart) GetServerID() int32 {
	if x != nil && x.ServerID != nil {
		return *x.ServerID
	}
	return 0
}

func (x *HallServerStart) GetClientAddr() string {
	if x != nil && x.ClientAddr != nil {
		return *x.ClientAddr
	}
	return ""
}

func (x *HallServerStart) GetNotifyAddr() string {
	if x != nil && x.NotifyAddr != nil {
		return *x.NotifyAddr
	}
	return ""
}

func (x *HallServerStart) GetHttpAddr() string {
	if x != nil && x.HttpAddr != nil {
		return *x.HttpAddr
	}
	return ""
}

type HallServerStartRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code                 *int32              `protobuf:"varint,1,req,name=Code" json:"Code,omitempty"`
	Message              *string             `protobuf:"bytes,2,req,name=Message" json:"Message,omitempty"`
	AndroidVersion       *string             `protobuf:"bytes,3,opt,name=AndroidVersion" json:"AndroidVersion,omitempty"`
	IOSVersion           *string             `protobuf:"bytes,4,opt,name=IOSVersion" json:"IOSVersion,omitempty"`
	UpdateDomain         *string             `protobuf:"bytes,5,opt,name=UpdateDomain" json:"UpdateDomain,omitempty"`
	BillDomain           *string             `protobuf:"bytes,6,opt,name=BillDomain" json:"BillDomain,omitempty"`
	ClubDomain           *string             `protobuf:"bytes,7,opt,name=ClubDomain" json:"ClubDomain,omitempty"`
	CustomerDomain       *string             `protobuf:"bytes,8,opt,name=CustomerDomain" json:"CustomerDomain,omitempty"`
	AreaConfigList       []*AreaConfig       `protobuf:"bytes,9,rep,name=AreaConfigList" json:"AreaConfigList,omitempty"`
	AreaShowGameFlagList []*AreaShowGameFlag `protobuf:"bytes,10,rep,name=AreaShowGameFlagList" json:"AreaShowGameFlagList,omitempty"`
	AndroidVersion2      *string             `protobuf:"bytes,11,opt,name=AndroidVersion2" json:"AndroidVersion2,omitempty"`
	IOSVersion2          *string             `protobuf:"bytes,12,opt,name=IOSVersion2" json:"IOSVersion2,omitempty"`
}

func (x *HallServerStartRet) Reset() {
	*x = HallServerStartRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DBServerMsg_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HallServerStartRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HallServerStartRet) ProtoMessage() {}

func (x *HallServerStartRet) ProtoReflect() protoreflect.Message {
	mi := &file_DBServerMsg_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HallServerStartRet.ProtoReflect.Descriptor instead.
func (*HallServerStartRet) Descriptor() ([]byte, []int) {
	return file_DBServerMsg_proto_rawDescGZIP(), []int{2}
}

func (x *HallServerStartRet) GetCode() int32 {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return 0
}

func (x *HallServerStartRet) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *HallServerStartRet) GetAndroidVersion() string {
	if x != nil && x.AndroidVersion != nil {
		return *x.AndroidVersion
	}
	return ""
}

func (x *HallServerStartRet) GetIOSVersion() string {
	if x != nil && x.IOSVersion != nil {
		return *x.IOSVersion
	}
	return ""
}

func (x *HallServerStartRet) GetUpdateDomain() string {
	if x != nil && x.UpdateDomain != nil {
		return *x.UpdateDomain
	}
	return ""
}

func (x *HallServerStartRet) GetBillDomain() string {
	if x != nil && x.BillDomain != nil {
		return *x.BillDomain
	}
	return ""
}

func (x *HallServerStartRet) GetClubDomain() string {
	if x != nil && x.ClubDomain != nil {
		return *x.ClubDomain
	}
	return ""
}

func (x *HallServerStartRet) GetCustomerDomain() string {
	if x != nil && x.CustomerDomain != nil {
		return *x.CustomerDomain
	}
	return ""
}

func (x *HallServerStartRet) GetAreaConfigList() []*AreaConfig {
	if x != nil {
		return x.AreaConfigList
	}
	return nil
}

func (x *HallServerStartRet) GetAreaShowGameFlagList() []*AreaShowGameFlag {
	if x != nil {
		return x.AreaShowGameFlagList
	}
	return nil
}

func (x *HallServerStartRet) GetAndroidVersion2() string {
	if x != nil && x.AndroidVersion2 != nil {
		return *x.AndroidVersion2
	}
	return ""
}

func (x *HallServerStartRet) GetIOSVersion2() string {
	if x != nil && x.IOSVersion2 != nil {
		return *x.IOSVersion2
	}
	return ""
}

type AreaConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AreaID        *int64  `protobuf:"varint,1,req,name=AreaID" json:"AreaID,omitempty"`
	AreaConfig    *string `protobuf:"bytes,2,req,name=AreaConfig" json:"AreaConfig,omitempty"`
	NotifyRefresh *bool   `protobuf:"varint,3,opt,name=NotifyRefresh" json:"NotifyRefresh,omitempty"`
}

func (x *AreaConfig) Reset() {
	*x = AreaConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DBServerMsg_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AreaConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AreaConfig) ProtoMessage() {}

func (x *AreaConfig) ProtoReflect() protoreflect.Message {
	mi := &file_DBServerMsg_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AreaConfig.ProtoReflect.Descriptor instead.
func (*AreaConfig) Descriptor() ([]byte, []int) {
	return file_DBServerMsg_proto_rawDescGZIP(), []int{3}
}

func (x *AreaConfig) GetAreaID() int64 {
	if x != nil && x.AreaID != nil {
		return *x.AreaID
	}
	return 0
}

func (x *AreaConfig) GetAreaConfig() string {
	if x != nil && x.AreaConfig != nil {
		return *x.AreaConfig
	}
	return ""
}

func (x *AreaConfig) GetNotifyRefresh() bool {
	if x != nil && x.NotifyRefresh != nil {
		return *x.NotifyRefresh
	}
	return false
}

type GetHallAreaMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AreaID        *int64 `protobuf:"varint,1,req,name=AreaID" json:"AreaID,omitempty"`
	NotifyRefresh *bool  `protobuf:"varint,2,opt,name=NotifyRefresh" json:"NotifyRefresh,omitempty"`
}

func (x *GetHallAreaMsg) Reset() {
	*x = GetHallAreaMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DBServerMsg_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHallAreaMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHallAreaMsg) ProtoMessage() {}

func (x *GetHallAreaMsg) ProtoReflect() protoreflect.Message {
	mi := &file_DBServerMsg_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHallAreaMsg.ProtoReflect.Descriptor instead.
func (*GetHallAreaMsg) Descriptor() ([]byte, []int) {
	return file_DBServerMsg_proto_rawDescGZIP(), []int{4}
}

func (x *GetHallAreaMsg) GetAreaID() int64 {
	if x != nil && x.AreaID != nil {
		return *x.AreaID
	}
	return 0
}

func (x *GetHallAreaMsg) GetNotifyRefresh() bool {
	if x != nil && x.NotifyRefresh != nil {
		return *x.NotifyRefresh
	}
	return false
}

type AreaShowGameFlag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AreaID   *int32 `protobuf:"varint,1,req,name=AreaID" json:"AreaID,omitempty"`
	GameID   *int32 `protobuf:"varint,2,req,name=GameID" json:"GameID,omitempty"`
	FlagID   *int32 `protobuf:"varint,3,req,name=FlagID" json:"FlagID,omitempty"`
	ServerID *int32 `protobuf:"varint,4,req,name=ServerID" json:"ServerID,omitempty"`
	Status   *int32 `protobuf:"varint,5,req,name=Status" json:"Status,omitempty"` //渠道是否看得到遊戲區廳, 0不行 1可以
}

func (x *AreaShowGameFlag) Reset() {
	*x = AreaShowGameFlag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DBServerMsg_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AreaShowGameFlag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AreaShowGameFlag) ProtoMessage() {}

func (x *AreaShowGameFlag) ProtoReflect() protoreflect.Message {
	mi := &file_DBServerMsg_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AreaShowGameFlag.ProtoReflect.Descriptor instead.
func (*AreaShowGameFlag) Descriptor() ([]byte, []int) {
	return file_DBServerMsg_proto_rawDescGZIP(), []int{5}
}

func (x *AreaShowGameFlag) GetAreaID() int32 {
	if x != nil && x.AreaID != nil {
		return *x.AreaID
	}
	return 0
}

func (x *AreaShowGameFlag) GetGameID() int32 {
	if x != nil && x.GameID != nil {
		return *x.GameID
	}
	return 0
}

func (x *AreaShowGameFlag) GetFlagID() int32 {
	if x != nil && x.FlagID != nil {
		return *x.FlagID
	}
	return 0
}

func (x *AreaShowGameFlag) GetServerID() int32 {
	if x != nil && x.ServerID != nil {
		return *x.ServerID
	}
	return 0
}

func (x *AreaShowGameFlag) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

type GameServerStart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerID   *int32  `protobuf:"varint,1,req,name=ServerID" json:"ServerID,omitempty"`
	ServerName *string `protobuf:"bytes,2,req,name=ServerName" json:"ServerName,omitempty"`
	GameID     *int32  `protobuf:"varint,3,req,name=GameID" json:"GameID,omitempty"`
	ShowName   *string `protobuf:"bytes,4,req,name=ShowName" json:"ShowName,omitempty"`
	ClientAddr *string `protobuf:"bytes,5,req,name=ClientAddr" json:"ClientAddr,omitempty"`
	NotifyAddr *string `protobuf:"bytes,6,req,name=NotifyAddr" json:"NotifyAddr,omitempty"`
	LoginMoney *int32  `protobuf:"varint,7,req,name=LoginMoney" json:"LoginMoney,omitempty"`
	HttpAddr   *string `protobuf:"bytes,8,req,name=HttpAddr" json:"HttpAddr,omitempty"`
}

func (x *GameServerStart) Reset() {
	*x = GameServerStart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DBServerMsg_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameServerStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameServerStart) ProtoMessage() {}

func (x *GameServerStart) ProtoReflect() protoreflect.Message {
	mi := &file_DBServerMsg_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameServerStart.ProtoReflect.Descriptor instead.
func (*GameServerStart) Descriptor() ([]byte, []int) {
	return file_DBServerMsg_proto_rawDescGZIP(), []int{6}
}

func (x *GameServerStart) GetServerID() int32 {
	if x != nil && x.ServerID != nil {
		return *x.ServerID
	}
	return 0
}

func (x *GameServerStart) GetServerName() string {
	if x != nil && x.ServerName != nil {
		return *x.ServerName
	}
	return ""
}

func (x *GameServerStart) GetGameID() int32 {
	if x != nil && x.GameID != nil {
		return *x.GameID
	}
	return 0
}

func (x *GameServerStart) GetShowName() string {
	if x != nil && x.ShowName != nil {
		return *x.ShowName
	}
	return ""
}

func (x *GameServerStart) GetClientAddr() string {
	if x != nil && x.ClientAddr != nil {
		return *x.ClientAddr
	}
	return ""
}

func (x *GameServerStart) GetNotifyAddr() string {
	if x != nil && x.NotifyAddr != nil {
		return *x.NotifyAddr
	}
	return ""
}

func (x *GameServerStart) GetLoginMoney() int32 {
	if x != nil && x.LoginMoney != nil {
		return *x.LoginMoney
	}
	return 0
}

func (x *GameServerStart) GetHttpAddr() string {
	if x != nil && x.HttpAddr != nil {
		return *x.HttpAddr
	}
	return ""
}

type GameServerStartRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code           *int32  `protobuf:"varint,1,req,name=Code" json:"Code,omitempty"`
	Message        *string `protobuf:"bytes,2,req,name=Message" json:"Message,omitempty"`
	AndroidVersion *string `protobuf:"bytes,3,opt,name=AndroidVersion" json:"AndroidVersion,omitempty"`
	IOSVersion     *string `protobuf:"bytes,4,opt,name=IOSVersion" json:"IOSVersion,omitempty"`
	Status         *int32  `protobuf:"varint,5,opt,name=Status" json:"Status,omitempty"`
	StatusMessage  *string `protobuf:"bytes,6,opt,name=StatusMessage" json:"StatusMessage,omitempty"`
}

func (x *GameServerStartRet) Reset() {
	*x = GameServerStartRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DBServerMsg_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameServerStartRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameServerStartRet) ProtoMessage() {}

func (x *GameServerStartRet) ProtoReflect() protoreflect.Message {
	mi := &file_DBServerMsg_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameServerStartRet.ProtoReflect.Descriptor instead.
func (*GameServerStartRet) Descriptor() ([]byte, []int) {
	return file_DBServerMsg_proto_rawDescGZIP(), []int{7}
}

func (x *GameServerStartRet) GetCode() int32 {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return 0
}

func (x *GameServerStartRet) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *GameServerStartRet) GetAndroidVersion() string {
	if x != nil && x.AndroidVersion != nil {
		return *x.AndroidVersion
	}
	return ""
}

func (x *GameServerStartRet) GetIOSVersion() string {
	if x != nil && x.IOSVersion != nil {
		return *x.IOSVersion
	}
	return ""
}

func (x *GameServerStartRet) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *GameServerStartRet) GetStatusMessage() string {
	if x != nil && x.StatusMessage != nil {
		return *x.StatusMessage
	}
	return ""
}

type LogoutGameRoomInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID          *int32  `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`
	UpdateAmount    *int64  `protobuf:"varint,2,req,name=UpdateAmount" json:"UpdateAmount,omitempty"`
	TaxAmount       *int64  `protobuf:"varint,3,req,name=TaxAmount" json:"TaxAmount,omitempty"`
	WinCount        *int32  `protobuf:"varint,4,req,name=WinCount" json:"WinCount,omitempty"`
	LoseCount       *int32  `protobuf:"varint,5,req,name=LoseCount" json:"LoseCount,omitempty"`
	DrawCount       *int32  `protobuf:"varint,6,req,name=DrawCount" json:"DrawCount,omitempty"`
	LoginTime       *string `protobuf:"bytes,7,req,name=LoginTime" json:"LoginTime,omitempty"`
	LogoutTime      *string `protobuf:"bytes,8,req,name=LogoutTime" json:"LogoutTime,omitempty"`
	IPAddress       *string `protobuf:"bytes,9,req,name=IPAddress" json:"IPAddress,omitempty"`
	HDCode          *string `protobuf:"bytes,10,req,name=HDCode" json:"HDCode,omitempty"`
	HDType          *int32  `protobuf:"varint,11,req,name=HDType" json:"HDType,omitempty"`
	GameTime        *int32  `protobuf:"varint,12,req,name=GameTime" json:"GameTime,omitempty"`
	GameID          *int32  `protobuf:"varint,13,req,name=GameID" json:"GameID,omitempty"`
	ServerID        *int32  `protobuf:"varint,14,req,name=ServerID" json:"ServerID,omitempty"`
	LoginMoney      *int64  `protobuf:"varint,15,req,name=LoginMoney" json:"LoginMoney,omitempty"`
	ScoreUpdateMode *int32  `protobuf:"varint,16,req,name=ScoreUpdateMode" json:"ScoreUpdateMode,omitempty"`
	TradeId         *int64  `protobuf:"varint,17,req,name=TradeId" json:"TradeId,omitempty"`
	LastWinLose     *int32  `protobuf:"varint,18,opt,name=LastWinLose" json:"LastWinLose,omitempty"`
	FlowAmount      *int64  `protobuf:"varint,19,opt,name=FlowAmount" json:"FlowAmount,omitempty"`
	CouponAmount    *int64  `protobuf:"varint,20,opt,name=CouponAmount" json:"CouponAmount,omitempty"`
	Score           *int64  `protobuf:"varint,21,opt,name=Score" json:"Score,omitempty"`
}

func (x *LogoutGameRoomInfo) Reset() {
	*x = LogoutGameRoomInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DBServerMsg_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogoutGameRoomInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutGameRoomInfo) ProtoMessage() {}

func (x *LogoutGameRoomInfo) ProtoReflect() protoreflect.Message {
	mi := &file_DBServerMsg_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutGameRoomInfo.ProtoReflect.Descriptor instead.
func (*LogoutGameRoomInfo) Descriptor() ([]byte, []int) {
	return file_DBServerMsg_proto_rawDescGZIP(), []int{8}
}

func (x *LogoutGameRoomInfo) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *LogoutGameRoomInfo) GetUpdateAmount() int64 {
	if x != nil && x.UpdateAmount != nil {
		return *x.UpdateAmount
	}
	return 0
}

func (x *LogoutGameRoomInfo) GetTaxAmount() int64 {
	if x != nil && x.TaxAmount != nil {
		return *x.TaxAmount
	}
	return 0
}

func (x *LogoutGameRoomInfo) GetWinCount() int32 {
	if x != nil && x.WinCount != nil {
		return *x.WinCount
	}
	return 0
}

func (x *LogoutGameRoomInfo) GetLoseCount() int32 {
	if x != nil && x.LoseCount != nil {
		return *x.LoseCount
	}
	return 0
}

func (x *LogoutGameRoomInfo) GetDrawCount() int32 {
	if x != nil && x.DrawCount != nil {
		return *x.DrawCount
	}
	return 0
}

func (x *LogoutGameRoomInfo) GetLoginTime() string {
	if x != nil && x.LoginTime != nil {
		return *x.LoginTime
	}
	return ""
}

func (x *LogoutGameRoomInfo) GetLogoutTime() string {
	if x != nil && x.LogoutTime != nil {
		return *x.LogoutTime
	}
	return ""
}

func (x *LogoutGameRoomInfo) GetIPAddress() string {
	if x != nil && x.IPAddress != nil {
		return *x.IPAddress
	}
	return ""
}

func (x *LogoutGameRoomInfo) GetHDCode() string {
	if x != nil && x.HDCode != nil {
		return *x.HDCode
	}
	return ""
}

func (x *LogoutGameRoomInfo) GetHDType() int32 {
	if x != nil && x.HDType != nil {
		return *x.HDType
	}
	return 0
}

func (x *LogoutGameRoomInfo) GetGameTime() int32 {
	if x != nil && x.GameTime != nil {
		return *x.GameTime
	}
	return 0
}

func (x *LogoutGameRoomInfo) GetGameID() int32 {
	if x != nil && x.GameID != nil {
		return *x.GameID
	}
	return 0
}

func (x *LogoutGameRoomInfo) GetServerID() int32 {
	if x != nil && x.ServerID != nil {
		return *x.ServerID
	}
	return 0
}

func (x *LogoutGameRoomInfo) GetLoginMoney() int64 {
	if x != nil && x.LoginMoney != nil {
		return *x.LoginMoney
	}
	return 0
}

func (x *LogoutGameRoomInfo) GetScoreUpdateMode() int32 {
	if x != nil && x.ScoreUpdateMode != nil {
		return *x.ScoreUpdateMode
	}
	return 0
}

func (x *LogoutGameRoomInfo) GetTradeId() int64 {
	if x != nil && x.TradeId != nil {
		return *x.TradeId
	}
	return 0
}

func (x *LogoutGameRoomInfo) GetLastWinLose() int32 {
	if x != nil && x.LastWinLose != nil {
		return *x.LastWinLose
	}
	return 0
}

func (x *LogoutGameRoomInfo) GetFlowAmount() int64 {
	if x != nil && x.FlowAmount != nil {
		return *x.FlowAmount
	}
	return 0
}

func (x *LogoutGameRoomInfo) GetCouponAmount() int64 {
	if x != nil && x.CouponAmount != nil {
		return *x.CouponAmount
	}
	return 0
}

func (x *LogoutGameRoomInfo) GetScore() int64 {
	if x != nil && x.Score != nil {
		return *x.Score
	}
	return 0
}

type UpdateUserScore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID       *int32 `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`
	Score        *int64 `protobuf:"varint,2,req,name=Score" json:"Score,omitempty"`
	ServerID     *int32 `protobuf:"varint,3,req,name=ServerID" json:"ServerID,omitempty"`
	TaxAmount    *int64 `protobuf:"varint,4,req,name=TaxAmount" json:"TaxAmount,omitempty"`
	ContestID    *int32 `protobuf:"varint,5,opt,name=ContestID" json:"ContestID,omitempty"`
	CouponAmount *int64 `protobuf:"varint,6,opt,name=CouponAmount" json:"CouponAmount,omitempty"`
}

func (x *UpdateUserScore) Reset() {
	*x = UpdateUserScore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DBServerMsg_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserScore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserScore) ProtoMessage() {}

func (x *UpdateUserScore) ProtoReflect() protoreflect.Message {
	mi := &file_DBServerMsg_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserScore.ProtoReflect.Descriptor instead.
func (*UpdateUserScore) Descriptor() ([]byte, []int) {
	return file_DBServerMsg_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateUserScore) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *UpdateUserScore) GetScore() int64 {
	if x != nil && x.Score != nil {
		return *x.Score
	}
	return 0
}

func (x *UpdateUserScore) GetServerID() int32 {
	if x != nil && x.ServerID != nil {
		return *x.ServerID
	}
	return 0
}

func (x *UpdateUserScore) GetTaxAmount() int64 {
	if x != nil && x.TaxAmount != nil {
		return *x.TaxAmount
	}
	return 0
}

func (x *UpdateUserScore) GetContestID() int32 {
	if x != nil && x.ContestID != nil {
		return *x.ContestID
	}
	return 0
}

func (x *UpdateUserScore) GetCouponAmount() int64 {
	if x != nil && x.CouponAmount != nil {
		return *x.CouponAmount
	}
	return 0
}

type BlockIP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IPAddress *string `protobuf:"bytes,1,req,name=IPAddress" json:"IPAddress,omitempty"`
	Sec       *int32  `protobuf:"varint,2,req,name=Sec" json:"Sec,omitempty"`
	Memo      *string `protobuf:"bytes,3,req,name=Memo" json:"Memo,omitempty"`
}

func (x *BlockIP) Reset() {
	*x = BlockIP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DBServerMsg_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockIP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockIP) ProtoMessage() {}

func (x *BlockIP) ProtoReflect() protoreflect.Message {
	mi := &file_DBServerMsg_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockIP.ProtoReflect.Descriptor instead.
func (*BlockIP) Descriptor() ([]byte, []int) {
	return file_DBServerMsg_proto_rawDescGZIP(), []int{10}
}

func (x *BlockIP) GetIPAddress() string {
	if x != nil && x.IPAddress != nil {
		return *x.IPAddress
	}
	return ""
}

func (x *BlockIP) GetSec() int32 {
	if x != nil && x.Sec != nil {
		return *x.Sec
	}
	return 0
}

func (x *BlockIP) GetMemo() string {
	if x != nil && x.Memo != nil {
		return *x.Memo
	}
	return ""
}

type BlockIPList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IPAddress []string `protobuf:"bytes,1,rep,name=IPAddress" json:"IPAddress,omitempty"`
}

func (x *BlockIPList) Reset() {
	*x = BlockIPList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DBServerMsg_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockIPList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockIPList) ProtoMessage() {}

func (x *BlockIPList) ProtoReflect() protoreflect.Message {
	mi := &file_DBServerMsg_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockIPList.ProtoReflect.Descriptor instead.
func (*BlockIPList) Descriptor() ([]byte, []int) {
	return file_DBServerMsg_proto_rawDescGZIP(), []int{11}
}

func (x *BlockIPList) GetIPAddress() []string {
	if x != nil {
		return x.IPAddress
	}
	return nil
}

type DealLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerID          *int32             `protobuf:"varint,1,req,name=ServerID" json:"ServerID,omitempty"`
	UserGameRet       *string            `protobuf:"bytes,2,req,name=UserGameRet" json:"UserGameRet,omitempty"`
	GameBeginTime     *string            `protobuf:"bytes,3,req,name=GameBeginTime" json:"GameBeginTime,omitempty"`
	GameEndTime       *string            `protobuf:"bytes,4,req,name=GameEndTime" json:"GameEndTime,omitempty"`
	GameData          *string            `protobuf:"bytes,5,req,name=GameData" json:"GameData,omitempty"`
	TaxAmount         *int64             `protobuf:"varint,6,req,name=TaxAmount" json:"TaxAmount,omitempty"`
	GameID            *int32             `protobuf:"varint,7,req,name=GameID" json:"GameID,omitempty"`
	TableNo           *int32             `protobuf:"varint,8,opt,name=TableNo" json:"TableNo,omitempty"`
	NextJiangRecord   *NextJiangRecord   `protobuf:"bytes,9,opt,name=NextJiangRecord" json:"NextJiangRecord,omitempty"`
	UserGameRetDetail []*UserGameRetList `protobuf:"bytes,10,rep,name=UserGameRetDetail" json:"UserGameRetDetail,omitempty"`
	RoomNo            *int32             `protobuf:"varint,11,req,name=RoomNo" json:"RoomNo,omitempty"`
	RoomName          *string            `protobuf:"bytes,12,req,name=RoomName" json:"RoomName,omitempty"`
	GameNo            *string            `protobuf:"bytes,13,opt,name=GameNo" json:"GameNo,omitempty"` //局號
}

func (x *DealLog) Reset() {
	*x = DealLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DBServerMsg_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DealLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DealLog) ProtoMessage() {}

func (x *DealLog) ProtoReflect() protoreflect.Message {
	mi := &file_DBServerMsg_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DealLog.ProtoReflect.Descriptor instead.
func (*DealLog) Descriptor() ([]byte, []int) {
	return file_DBServerMsg_proto_rawDescGZIP(), []int{12}
}

func (x *DealLog) GetServerID() int32 {
	if x != nil && x.ServerID != nil {
		return *x.ServerID
	}
	return 0
}

func (x *DealLog) GetUserGameRet() string {
	if x != nil && x.UserGameRet != nil {
		return *x.UserGameRet
	}
	return ""
}

func (x *DealLog) GetGameBeginTime() string {
	if x != nil && x.GameBeginTime != nil {
		return *x.GameBeginTime
	}
	return ""
}

func (x *DealLog) GetGameEndTime() string {
	if x != nil && x.GameEndTime != nil {
		return *x.GameEndTime
	}
	return ""
}

func (x *DealLog) GetGameData() string {
	if x != nil && x.GameData != nil {
		return *x.GameData
	}
	return ""
}

func (x *DealLog) GetTaxAmount() int64 {
	if x != nil && x.TaxAmount != nil {
		return *x.TaxAmount
	}
	return 0
}

func (x *DealLog) GetGameID() int32 {
	if x != nil && x.GameID != nil {
		return *x.GameID
	}
	return 0
}

func (x *DealLog) GetTableNo() int32 {
	if x != nil && x.TableNo != nil {
		return *x.TableNo
	}
	return 0
}

func (x *DealLog) GetNextJiangRecord() *NextJiangRecord {
	if x != nil {
		return x.NextJiangRecord
	}
	return nil
}

func (x *DealLog) GetUserGameRetDetail() []*UserGameRetList {
	if x != nil {
		return x.UserGameRetDetail
	}
	return nil
}

func (x *DealLog) GetRoomNo() int32 {
	if x != nil && x.RoomNo != nil {
		return *x.RoomNo
	}
	return 0
}

func (x *DealLog) GetRoomName() string {
	if x != nil && x.RoomName != nil {
		return *x.RoomName
	}
	return ""
}

func (x *DealLog) GetGameNo() string {
	if x != nil && x.GameNo != nil {
		return *x.GameNo
	}
	return ""
}

type UserGameRetList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID              *int32  `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`
	SeatNo              *int32  `protobuf:"varint,2,req,name=SeatNo" json:"SeatNo,omitempty"`
	FlagID              *string `protobuf:"bytes,3,req,name=FlagID" json:"FlagID,omitempty"`
	CurrentAmount       *int64  `protobuf:"varint,4,req,name=CurrentAmount" json:"CurrentAmount,omitempty"`
	UpdateAmount        *int64  `protobuf:"varint,5,req,name=UpdateAmount" json:"UpdateAmount,omitempty"`
	TradeID             *int64  `protobuf:"varint,6,req,name=TradeID" json:"TradeID,omitempty"`
	CurrentCouponAmount *int64  `protobuf:"varint,7,req,name=CurrentCouponAmount" json:"CurrentCouponAmount,omitempty"`
	CouponAmount        *int64  `protobuf:"varint,8,req,name=CouponAmount" json:"CouponAmount,omitempty"`
	UserType            *int32  `protobuf:"varint,9,req,name=UserType" json:"UserType,omitempty"`
}

func (x *UserGameRetList) Reset() {
	*x = UserGameRetList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DBServerMsg_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserGameRetList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGameRetList) ProtoMessage() {}

func (x *UserGameRetList) ProtoReflect() protoreflect.Message {
	mi := &file_DBServerMsg_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGameRetList.ProtoReflect.Descriptor instead.
func (*UserGameRetList) Descriptor() ([]byte, []int) {
	return file_DBServerMsg_proto_rawDescGZIP(), []int{13}
}

func (x *UserGameRetList) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *UserGameRetList) GetSeatNo() int32 {
	if x != nil && x.SeatNo != nil {
		return *x.SeatNo
	}
	return 0
}

func (x *UserGameRetList) GetFlagID() string {
	if x != nil && x.FlagID != nil {
		return *x.FlagID
	}
	return ""
}

func (x *UserGameRetList) GetCurrentAmount() int64 {
	if x != nil && x.CurrentAmount != nil {
		return *x.CurrentAmount
	}
	return 0
}

func (x *UserGameRetList) GetUpdateAmount() int64 {
	if x != nil && x.UpdateAmount != nil {
		return *x.UpdateAmount
	}
	return 0
}

func (x *UserGameRetList) GetTradeID() int64 {
	if x != nil && x.TradeID != nil {
		return *x.TradeID
	}
	return 0
}

func (x *UserGameRetList) GetCurrentCouponAmount() int64 {
	if x != nil && x.CurrentCouponAmount != nil {
		return *x.CurrentCouponAmount
	}
	return 0
}

func (x *UserGameRetList) GetCouponAmount() int64 {
	if x != nil && x.CouponAmount != nil {
		return *x.CouponAmount
	}
	return 0
}

func (x *UserGameRetList) GetUserType() int32 {
	if x != nil && x.UserType != nil {
		return *x.UserType
	}
	return 0
}

type NextJiangRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminUser *string `protobuf:"bytes,1,req,name=AdminUser" json:"AdminUser,omitempty"`
	JiangType *string `protobuf:"bytes,2,req,name=JiangType" json:"JiangType,omitempty"`
}

func (x *NextJiangRecord) Reset() {
	*x = NextJiangRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DBServerMsg_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NextJiangRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NextJiangRecord) ProtoMessage() {}

func (x *NextJiangRecord) ProtoReflect() protoreflect.Message {
	mi := &file_DBServerMsg_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NextJiangRecord.ProtoReflect.Descriptor instead.
func (*NextJiangRecord) Descriptor() ([]byte, []int) {
	return file_DBServerMsg_proto_rawDescGZIP(), []int{14}
}

func (x *NextJiangRecord) GetAdminUser() string {
	if x != nil && x.AdminUser != nil {
		return *x.AdminUser
	}
	return ""
}

func (x *NextJiangRecord) GetJiangType() string {
	if x != nil && x.JiangType != nil {
		return *x.JiangType
	}
	return ""
}

type LogonRobot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerID          *int32 `protobuf:"varint,1,req,name=ServerID" json:"ServerID,omitempty"`
	CurrentRobotCount *int32 `protobuf:"varint,2,req,name=CurrentRobotCount" json:"CurrentRobotCount,omitempty"`
	MinMoneyAmount    *int64 `protobuf:"varint,3,req,name=MinMoneyAmount" json:"MinMoneyAmount,omitempty"`
	MaxMoneyAmount    *int64 `protobuf:"varint,4,req,name=MaxMoneyAmount" json:"MaxMoneyAmount,omitempty"`
}

func (x *LogonRobot) Reset() {
	*x = LogonRobot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DBServerMsg_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogonRobot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogonRobot) ProtoMessage() {}

func (x *LogonRobot) ProtoReflect() protoreflect.Message {
	mi := &file_DBServerMsg_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogonRobot.ProtoReflect.Descriptor instead.
func (*LogonRobot) Descriptor() ([]byte, []int) {
	return file_DBServerMsg_proto_rawDescGZIP(), []int{15}
}

func (x *LogonRobot) GetServerID() int32 {
	if x != nil && x.ServerID != nil {
		return *x.ServerID
	}
	return 0
}

func (x *LogonRobot) GetCurrentRobotCount() int32 {
	if x != nil && x.CurrentRobotCount != nil {
		return *x.CurrentRobotCount
	}
	return 0
}

func (x *LogonRobot) GetMinMoneyAmount() int64 {
	if x != nil && x.MinMoneyAmount != nil {
		return *x.MinMoneyAmount
	}
	return 0
}

func (x *LogonRobot) GetMaxMoneyAmount() int64 {
	if x != nil && x.MaxMoneyAmount != nil {
		return *x.MaxMoneyAmount
	}
	return 0
}

type RobotData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID        *int32  `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`
	UserType      *int32  `protobuf:"varint,2,req,name=UserType" json:"UserType,omitempty"`
	NickName      *string `protobuf:"bytes,3,req,name=NickName" json:"NickName,omitempty"`
	FaceID        *int32  `protobuf:"varint,4,req,name=FaceID" json:"FaceID,omitempty"`
	Sex           *int32  `protobuf:"varint,5,req,name=Sex" json:"Sex,omitempty"`
	CashAmount    *int64  `protobuf:"varint,6,req,name=CashAmount" json:"CashAmount,omitempty"`
	WinCount      *int32  `protobuf:"varint,7,req,name=WinCount" json:"WinCount,omitempty"`
	LoseCount     *int32  `protobuf:"varint,8,req,name=LoseCount" json:"LoseCount,omitempty"`
	DrawCount     *int32  `protobuf:"varint,9,req,name=DrawCount" json:"DrawCount,omitempty"`
	RobotLevelID  *int32  `protobuf:"varint,10,req,name=RobotLevelID" json:"RobotLevelID,omitempty"`
	AvatarFrameID *int32  `protobuf:"varint,11,opt,name=AvatarFrameID" json:"AvatarFrameID,omitempty"`
}

func (x *RobotData) Reset() {
	*x = RobotData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DBServerMsg_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RobotData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RobotData) ProtoMessage() {}

func (x *RobotData) ProtoReflect() protoreflect.Message {
	mi := &file_DBServerMsg_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RobotData.ProtoReflect.Descriptor instead.
func (*RobotData) Descriptor() ([]byte, []int) {
	return file_DBServerMsg_proto_rawDescGZIP(), []int{16}
}

func (x *RobotData) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *RobotData) GetUserType() int32 {
	if x != nil && x.UserType != nil {
		return *x.UserType
	}
	return 0
}

func (x *RobotData) GetNickName() string {
	if x != nil && x.NickName != nil {
		return *x.NickName
	}
	return ""
}

func (x *RobotData) GetFaceID() int32 {
	if x != nil && x.FaceID != nil {
		return *x.FaceID
	}
	return 0
}

func (x *RobotData) GetSex() int32 {
	if x != nil && x.Sex != nil {
		return *x.Sex
	}
	return 0
}

func (x *RobotData) GetCashAmount() int64 {
	if x != nil && x.CashAmount != nil {
		return *x.CashAmount
	}
	return 0
}

func (x *RobotData) GetWinCount() int32 {
	if x != nil && x.WinCount != nil {
		return *x.WinCount
	}
	return 0
}

func (x *RobotData) GetLoseCount() int32 {
	if x != nil && x.LoseCount != nil {
		return *x.LoseCount
	}
	return 0
}

func (x *RobotData) GetDrawCount() int32 {
	if x != nil && x.DrawCount != nil {
		return *x.DrawCount
	}
	return 0
}

func (x *RobotData) GetRobotLevelID() int32 {
	if x != nil && x.RobotLevelID != nil {
		return *x.RobotLevelID
	}
	return 0
}

func (x *RobotData) GetAvatarFrameID() int32 {
	if x != nil && x.AvatarFrameID != nil {
		return *x.AvatarFrameID
	}
	return 0
}

type LogonRobotRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RobotCount *int32       `protobuf:"varint,1,req,name=RobotCount" json:"RobotCount,omitempty"`
	UserData   []*RobotData `protobuf:"bytes,2,rep,name=UserData" json:"UserData,omitempty"`
}

func (x *LogonRobotRet) Reset() {
	*x = LogonRobotRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DBServerMsg_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogonRobotRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogonRobotRet) ProtoMessage() {}

func (x *LogonRobotRet) ProtoReflect() protoreflect.Message {
	mi := &file_DBServerMsg_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogonRobotRet.ProtoReflect.Descriptor instead.
func (*LogonRobotRet) Descriptor() ([]byte, []int) {
	return file_DBServerMsg_proto_rawDescGZIP(), []int{17}
}

func (x *LogonRobotRet) GetRobotCount() int32 {
	if x != nil && x.RobotCount != nil {
		return *x.RobotCount
	}
	return 0
}

func (x *LogonRobotRet) GetUserData() []*RobotData {
	if x != nil {
		return x.UserData
	}
	return nil
}

type LogoutRobot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerID    *int32 `protobuf:"varint,1,req,name=ServerID" json:"ServerID,omitempty"`
	RobotUserID *int32 `protobuf:"varint,2,req,name=RobotUserID" json:"RobotUserID,omitempty"`
}

func (x *LogoutRobot) Reset() {
	*x = LogoutRobot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DBServerMsg_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogoutRobot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutRobot) ProtoMessage() {}

func (x *LogoutRobot) ProtoReflect() protoreflect.Message {
	mi := &file_DBServerMsg_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutRobot.ProtoReflect.Descriptor instead.
func (*LogoutRobot) Descriptor() ([]byte, []int) {
	return file_DBServerMsg_proto_rawDescGZIP(), []int{18}
}

func (x *LogoutRobot) GetServerID() int32 {
	if x != nil && x.ServerID != nil {
		return *x.ServerID
	}
	return 0
}

func (x *LogoutRobot) GetRobotUserID() int32 {
	if x != nil && x.RobotUserID != nil {
		return *x.RobotUserID
	}
	return 0
}

type GameVer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerID *int32 `protobuf:"varint,1,req,name=ServerID" json:"ServerID,omitempty"`
	GameID   *int32 `protobuf:"varint,2,req,name=GameID" json:"GameID,omitempty"`
}

func (x *GameVer) Reset() {
	*x = GameVer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DBServerMsg_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameVer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameVer) ProtoMessage() {}

func (x *GameVer) ProtoReflect() protoreflect.Message {
	mi := &file_DBServerMsg_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameVer.ProtoReflect.Descriptor instead.
func (*GameVer) Descriptor() ([]byte, []int) {
	return file_DBServerMsg_proto_rawDescGZIP(), []int{19}
}

func (x *GameVer) GetServerID() int32 {
	if x != nil && x.ServerID != nil {
		return *x.ServerID
	}
	return 0
}

func (x *GameVer) GetGameID() int32 {
	if x != nil && x.GameID != nil {
		return *x.GameID
	}
	return 0
}

type UpdateContestUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameID      *int32 `protobuf:"varint,1,req,name=GameID" json:"GameID,omitempty"`
	UserID      *int32 `protobuf:"varint,2,req,name=UserID" json:"UserID,omitempty"`
	ContestID   *int32 `protobuf:"varint,3,req,name=ContestID" json:"ContestID,omitempty"`
	ContestNo   *int32 `protobuf:"varint,4,req,name=ContestNo" json:"ContestNo,omitempty"`
	FlagID      *int32 `protobuf:"varint,5,req,name=FlagID" json:"FlagID,omitempty"`
	TableNo     *int32 `protobuf:"varint,6,req,name=TableNo" json:"TableNo,omitempty"`
	PlayTime    *int32 `protobuf:"varint,7,req,name=PlayTime" json:"PlayTime,omitempty"`
	RemainScore *int32 `protobuf:"varint,8,req,name=RemainScore" json:"RemainScore,omitempty"`
	Score       *int32 `protobuf:"varint,9,req,name=Score" json:"Score,omitempty"`
}

func (x *UpdateContestUser) Reset() {
	*x = UpdateContestUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DBServerMsg_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateContestUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateContestUser) ProtoMessage() {}

func (x *UpdateContestUser) ProtoReflect() protoreflect.Message {
	mi := &file_DBServerMsg_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateContestUser.ProtoReflect.Descriptor instead.
func (*UpdateContestUser) Descriptor() ([]byte, []int) {
	return file_DBServerMsg_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateContestUser) GetGameID() int32 {
	if x != nil && x.GameID != nil {
		return *x.GameID
	}
	return 0
}

func (x *UpdateContestUser) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *UpdateContestUser) GetContestID() int32 {
	if x != nil && x.ContestID != nil {
		return *x.ContestID
	}
	return 0
}

func (x *UpdateContestUser) GetContestNo() int32 {
	if x != nil && x.ContestNo != nil {
		return *x.ContestNo
	}
	return 0
}

func (x *UpdateContestUser) GetFlagID() int32 {
	if x != nil && x.FlagID != nil {
		return *x.FlagID
	}
	return 0
}

func (x *UpdateContestUser) GetTableNo() int32 {
	if x != nil && x.TableNo != nil {
		return *x.TableNo
	}
	return 0
}

func (x *UpdateContestUser) GetPlayTime() int32 {
	if x != nil && x.PlayTime != nil {
		return *x.PlayTime
	}
	return 0
}

func (x *UpdateContestUser) GetRemainScore() int32 {
	if x != nil && x.RemainScore != nil {
		return *x.RemainScore
	}
	return 0
}

func (x *UpdateContestUser) GetScore() int32 {
	if x != nil && x.Score != nil {
		return *x.Score
	}
	return 0
}

type GetConestUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameID *int32 `protobuf:"varint,1,req,name=GameID" json:"GameID,omitempty"`
	UserID *int32 `protobuf:"varint,2,req,name=UserID" json:"UserID,omitempty"`
}

func (x *GetConestUser) Reset() {
	*x = GetConestUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DBServerMsg_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConestUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConestUser) ProtoMessage() {}

func (x *GetConestUser) ProtoReflect() protoreflect.Message {
	mi := &file_DBServerMsg_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConestUser.ProtoReflect.Descriptor instead.
func (*GetConestUser) Descriptor() ([]byte, []int) {
	return file_DBServerMsg_proto_rawDescGZIP(), []int{21}
}

func (x *GetConestUser) GetGameID() int32 {
	if x != nil && x.GameID != nil {
		return *x.GameID
	}
	return 0
}

func (x *GetConestUser) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

//渠道遊戲
type GetAreaShowGameFlagListMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AreaShowGameFlagList []*AreaShowGameFlag `protobuf:"bytes,1,rep,name=AreaShowGameFlagList" json:"AreaShowGameFlagList,omitempty"`
}

func (x *GetAreaShowGameFlagListMsg) Reset() {
	*x = GetAreaShowGameFlagListMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DBServerMsg_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAreaShowGameFlagListMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAreaShowGameFlagListMsg) ProtoMessage() {}

func (x *GetAreaShowGameFlagListMsg) ProtoReflect() protoreflect.Message {
	mi := &file_DBServerMsg_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAreaShowGameFlagListMsg.ProtoReflect.Descriptor instead.
func (*GetAreaShowGameFlagListMsg) Descriptor() ([]byte, []int) {
	return file_DBServerMsg_proto_rawDescGZIP(), []int{22}
}

func (x *GetAreaShowGameFlagListMsg) GetAreaShowGameFlagList() []*AreaShowGameFlag {
	if x != nil {
		return x.AreaShowGameFlagList
	}
	return nil
}

var File_DBServerMsg_proto protoreflect.FileDescriptor

var file_DBServerMsg_proto_rawDesc = []byte{
	0x0a, 0x11, 0x44, 0x42, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x37, 0x0a,
	0x0b, 0x44, 0x42, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x22, 0x89, 0x01, 0x0a, 0x0f, 0x48, 0x61, 0x6c, 0x6c, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x41, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x48, 0x74, 0x74, 0x70, 0x41, 0x64,
	0x64, 0x72, 0x18, 0x04, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x48, 0x74, 0x74, 0x70, 0x41, 0x64,
	0x64, 0x72, 0x22, 0xf0, 0x03, 0x0a, 0x12, 0x48, 0x61, 0x6c, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x41, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x1e, 0x0a, 0x0a, 0x49, 0x4f, 0x53, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x49, 0x4f, 0x53, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x22, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x42, 0x69, 0x6c, 0x6c, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x42, 0x69, 0x6c, 0x6c, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6c, 0x75, 0x62, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6c, 0x75, 0x62, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x3c, 0x0a, 0x0e, 0x41,
	0x72, 0x65, 0x61, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x72, 0x65, 0x61, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0e, 0x41, 0x72, 0x65, 0x61, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x14, 0x41, 0x72, 0x65,
	0x61, 0x53, 0x68, 0x6f, 0x77, 0x47, 0x61, 0x6d, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x53, 0x68, 0x6f, 0x77, 0x47, 0x61, 0x6d, 0x65, 0x46,
	0x6c, 0x61, 0x67, 0x52, 0x14, 0x41, 0x72, 0x65, 0x61, 0x53, 0x68, 0x6f, 0x77, 0x47, 0x61, 0x6d,
	0x65, 0x46, 0x6c, 0x61, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x41, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x32, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x32, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x4f, 0x53, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x32, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x49, 0x4f, 0x53, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x32, 0x22, 0x6a, 0x0a, 0x0a, 0x41, 0x72, 0x65, 0x61, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x03, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x41,
	0x72, 0x65, 0x61, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x0a, 0x41, 0x72, 0x65, 0x61, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x22, 0x4e, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x48, 0x61, 0x6c, 0x6c, 0x41, 0x72, 0x65, 0x61,
	0x4d, 0x73, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x03, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x22, 0x8e, 0x01, 0x0a, 0x10, 0x41, 0x72, 0x65, 0x61, 0x53, 0x68, 0x6f, 0x77, 0x47, 0x61,
	0x6d, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06,
	0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x6c, 0x61, 0x67, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x46, 0x6c, 0x61, 0x67, 0x49, 0x44, 0x12, 0x1a,
	0x0a, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0xfd, 0x01, 0x0a, 0x0f, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x68,
	0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x53, 0x68,
	0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x18, 0x05, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x41, 0x64, 0x64, 0x72, 0x18, 0x06, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4d,
	0x6f, 0x6e, 0x65, 0x79, 0x18, 0x07, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x48, 0x74, 0x74, 0x70, 0x41, 0x64,
	0x64, 0x72, 0x18, 0x08, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x48, 0x74, 0x74, 0x70, 0x41, 0x64,
	0x64, 0x72, 0x22, 0xc8, 0x01, 0x0a, 0x12, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x41, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x1e, 0x0a, 0x0a, 0x49, 0x4f, 0x53, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x49, 0x4f, 0x53, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x82, 0x05,
	0x0a, 0x12, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x6f, 0x6f, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x03, 0x52, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x54, 0x61, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x02, 0x28, 0x03, 0x52, 0x09, 0x54, 0x61, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x57, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x08, 0x57, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x6f,
	0x73, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x4c,
	0x6f, 0x73, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x72, 0x61, 0x77,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x44, 0x72, 0x61,
	0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x08, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x09, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x44, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x06, 0x48, 0x44, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x44,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x48, 0x44, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x0d, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06,
	0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x0e, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4d, 0x6f, 0x6e, 0x65, 0x79,
	0x18, 0x0f, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0a, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4d, 0x6f, 0x6e,
	0x65, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x10, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0f, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x49, 0x64, 0x18, 0x11, 0x20, 0x02, 0x28, 0x03, 0x52, 0x07, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x4c, 0x61, 0x73, 0x74, 0x57, 0x69,
	0x6e, 0x4c, 0x6f, 0x73, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x4c, 0x61, 0x73,
	0x74, 0x57, 0x69, 0x6e, 0x4c, 0x6f, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x6c, 0x6f, 0x77,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x46, 0x6c,
	0x6f, 0x77, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x22, 0xbb, 0x01, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14,
	0x0a, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x05, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x1c, 0x0a, 0x09, 0x54, 0x61, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x02, 0x28, 0x03, 0x52, 0x09, 0x54, 0x61, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c,
	0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x4d, 0x0a, 0x07, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x50, 0x12, 0x1c, 0x0a, 0x09, 0x49,
	0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09,
	0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x65, 0x63,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x53, 0x65, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x4d,
	0x65, 0x6d, 0x6f, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x4d, 0x65, 0x6d, 0x6f, 0x22,
	0x2b, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x50, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xd5, 0x03, 0x0a,
	0x07, 0x44, 0x65, 0x61, 0x6c, 0x4c, 0x6f, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x47,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x47, 0x61, 0x6d, 0x65, 0x42, 0x65,
	0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0d, 0x47,
	0x61, 0x6d, 0x65, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x47, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x0b, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x61,
	0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x02, 0x28, 0x03, 0x52, 0x09, 0x54,
	0x61, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x61, 0x6d, 0x65,
	0x49, 0x44, 0x18, 0x07, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44,
	0x12, 0x18, 0x0a, 0x07, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x6f, 0x12, 0x43, 0x0a, 0x0f, 0x4e, 0x65,
	0x78, 0x74, 0x4a, 0x69, 0x61, 0x6e, 0x67, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e,
	0x65, 0x78, 0x74, 0x4a, 0x69, 0x61, 0x6e, 0x67, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x0f,
	0x4e, 0x65, 0x78, 0x74, 0x4a, 0x69, 0x61, 0x6e, 0x67, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12,
	0x47, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6e, 0x65, 0x74,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x11, 0x55, 0x73, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6f, 0x6d,
	0x4e, 0x6f, 0x18, 0x0b, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x4e, 0x6f,
	0x12, 0x1a, 0x0a, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x47, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x47, 0x61,
	0x6d, 0x65, 0x4e, 0x6f, 0x22, 0xaf, 0x02, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x47, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x06, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x6c, 0x61, 0x67,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x46, 0x6c, 0x61, 0x67, 0x49, 0x44,
	0x12, 0x24, 0x0a, 0x0d, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0d, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0c, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x49, 0x44, 0x18, 0x06, 0x20, 0x02, 0x28, 0x03, 0x52, 0x07, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x49, 0x44, 0x12, 0x30, 0x0a, 0x13, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x02, 0x28,
	0x03, 0x52, 0x13, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0c, 0x43, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x55, 0x73,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x4d, 0x0a, 0x0f, 0x4e, 0x65, 0x78, 0x74, 0x4a, 0x69,
	0x61, 0x6e, 0x67, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x4a, 0x69, 0x61, 0x6e, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09, 0x4a, 0x69, 0x61, 0x6e,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x22, 0xa6, 0x01, 0x0a, 0x0a, 0x4c, 0x6f, 0x67, 0x6f, 0x6e, 0x52,
	0x6f, 0x62, 0x6f, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x2c, 0x0a, 0x11, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x62, 0x6f, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x11, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26,
	0x0a, 0x0e, 0x4d, 0x69, 0x6e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0e, 0x4d, 0x69, 0x6e, 0x4d, 0x6f, 0x6e, 0x65, 0x79,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x4d, 0x61, 0x78, 0x4d, 0x6f, 0x6e,
	0x65, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0e,
	0x4d, 0x61, 0x78, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xc7,
	0x02, 0x0a, 0x09, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x46, 0x61, 0x63, 0x65, 0x49, 0x44, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x46, 0x61,
	0x63, 0x65, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x65, 0x78, 0x18, 0x05, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x03, 0x53, 0x65, 0x78, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x61, 0x73, 0x68, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x61, 0x73, 0x68,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x57, 0x69, 0x6e, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x07, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x57, 0x69, 0x6e, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x6f, 0x73, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x08, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x4c, 0x6f, 0x73, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x44, 0x72, 0x61, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x09, 0x44, 0x72, 0x61, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22,
	0x0a, 0x0c, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x0a,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x0c, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x49, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x22, 0x60, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x6f,
	0x6e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x52, 0x65, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x6f, 0x62,
	0x6f, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x52,
	0x6f, 0x62, 0x6f, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x08, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x65,
	0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x22, 0x4b, 0x0a, 0x0b, 0x4c, 0x6f,
	0x67, 0x6f, 0x75, 0x74, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0b, 0x52, 0x6f, 0x62, 0x6f,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x3d, 0x0a, 0x07, 0x47, 0x61, 0x6d, 0x65, 0x56,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06,
	0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x22, 0x85, 0x02, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x47, 0x61,
	0x6d, 0x65, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x09, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x6c, 0x61, 0x67,
	0x49, 0x44, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x46, 0x6c, 0x61, 0x67, 0x49, 0x44,
	0x12, 0x18, 0x0a, 0x07, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x6f, 0x18, 0x06, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x07, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6c,
	0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x50, 0x6c,
	0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x08, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0b, 0x52, 0x65, 0x6d,
	0x61, 0x69, 0x6e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x18, 0x09, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x3f,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22,
	0x6c, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x72, 0x65, 0x61, 0x53, 0x68, 0x6f, 0x77, 0x47, 0x61,
	0x6d, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x4e, 0x0a,
	0x14, 0x41, 0x72, 0x65, 0x61, 0x53, 0x68, 0x6f, 0x77, 0x47, 0x61, 0x6d, 0x65, 0x46, 0x6c, 0x61,
	0x67, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6e, 0x65,
	0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x53, 0x68, 0x6f, 0x77, 0x47,
	0x61, 0x6d, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x14, 0x41, 0x72, 0x65, 0x61, 0x53, 0x68, 0x6f,
	0x77, 0x47, 0x61, 0x6d, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x0c, 0x5a,
	0x0a, 0x2e, 0x2f, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f,
}

var (
	file_DBServerMsg_proto_rawDescOnce sync.Once
	file_DBServerMsg_proto_rawDescData = file_DBServerMsg_proto_rawDesc
)

func file_DBServerMsg_proto_rawDescGZIP() []byte {
	file_DBServerMsg_proto_rawDescOnce.Do(func() {
		file_DBServerMsg_proto_rawDescData = protoimpl.X.CompressGZIP(file_DBServerMsg_proto_rawDescData)
	})
	return file_DBServerMsg_proto_rawDescData
}

var file_DBServerMsg_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_DBServerMsg_proto_goTypes = []interface{}{
	(*DBServerRet)(nil),                // 0: netproto.DBServerRet
	(*HallServerStart)(nil),            // 1: netproto.HallServerStart
	(*HallServerStartRet)(nil),         // 2: netproto.HallServerStartRet
	(*AreaConfig)(nil),                 // 3: netproto.AreaConfig
	(*GetHallAreaMsg)(nil),             // 4: netproto.GetHallAreaMsg
	(*AreaShowGameFlag)(nil),           // 5: netproto.AreaShowGameFlag
	(*GameServerStart)(nil),            // 6: netproto.GameServerStart
	(*GameServerStartRet)(nil),         // 7: netproto.GameServerStartRet
	(*LogoutGameRoomInfo)(nil),         // 8: netproto.LogoutGameRoomInfo
	(*UpdateUserScore)(nil),            // 9: netproto.UpdateUserScore
	(*BlockIP)(nil),                    // 10: netproto.BlockIP
	(*BlockIPList)(nil),                // 11: netproto.BlockIPList
	(*DealLog)(nil),                    // 12: netproto.DealLog
	(*UserGameRetList)(nil),            // 13: netproto.UserGameRetList
	(*NextJiangRecord)(nil),            // 14: netproto.NextJiangRecord
	(*LogonRobot)(nil),                 // 15: netproto.LogonRobot
	(*RobotData)(nil),                  // 16: netproto.RobotData
	(*LogonRobotRet)(nil),              // 17: netproto.LogonRobotRet
	(*LogoutRobot)(nil),                // 18: netproto.LogoutRobot
	(*GameVer)(nil),                    // 19: netproto.GameVer
	(*UpdateContestUser)(nil),          // 20: netproto.UpdateContestUser
	(*GetConestUser)(nil),              // 21: netproto.GetConestUser
	(*GetAreaShowGameFlagListMsg)(nil), // 22: netproto.GetAreaShowGameFlagListMsg
}
var file_DBServerMsg_proto_depIdxs = []int32{
	3,  // 0: netproto.HallServerStartRet.AreaConfigList:type_name -> netproto.AreaConfig
	5,  // 1: netproto.HallServerStartRet.AreaShowGameFlagList:type_name -> netproto.AreaShowGameFlag
	14, // 2: netproto.DealLog.NextJiangRecord:type_name -> netproto.NextJiangRecord
	13, // 3: netproto.DealLog.UserGameRetDetail:type_name -> netproto.UserGameRetList
	16, // 4: netproto.LogonRobotRet.UserData:type_name -> netproto.RobotData
	5,  // 5: netproto.GetAreaShowGameFlagListMsg.AreaShowGameFlagList:type_name -> netproto.AreaShowGameFlag
	6,  // [6:6] is the sub-list for method output_type
	6,  // [6:6] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_DBServerMsg_proto_init() }
func file_DBServerMsg_proto_init() {
	if File_DBServerMsg_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_DBServerMsg_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBServerRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DBServerMsg_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HallServerStart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DBServerMsg_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HallServerStartRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DBServerMsg_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AreaConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DBServerMsg_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHallAreaMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DBServerMsg_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AreaShowGameFlag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DBServerMsg_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameServerStart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DBServerMsg_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameServerStartRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DBServerMsg_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogoutGameRoomInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DBServerMsg_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserScore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DBServerMsg_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockIP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DBServerMsg_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockIPList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DBServerMsg_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DealLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DBServerMsg_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserGameRetList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DBServerMsg_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NextJiangRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DBServerMsg_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogonRobot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DBServerMsg_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RobotData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DBServerMsg_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogonRobotRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DBServerMsg_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogoutRobot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DBServerMsg_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameVer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DBServerMsg_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateContestUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DBServerMsg_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConestUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DBServerMsg_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAreaShowGameFlagListMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_DBServerMsg_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_DBServerMsg_proto_goTypes,
		DependencyIndexes: file_DBServerMsg_proto_depIdxs,
		MessageInfos:      file_DBServerMsg_proto_msgTypes,
	}.Build()
	File_DBServerMsg_proto = out.File
	file_DBServerMsg_proto_rawDesc = nil
	file_DBServerMsg_proto_goTypes = nil
	file_DBServerMsg_proto_depIdxs = nil
}
