// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: Game.proto

package netproto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GameMessageClassID int32

const (
	GameMessageClassID_TestGameChatID                        GameMessageClassID = 1
	GameMessageClassID_TestGameScoreID                       GameMessageClassID = 2
	GameMessageClassID_TestGameEndID                         GameMessageClassID = 3
	GameMessageClassID_UserEnterID                           GameMessageClassID = 4
	GameMessageClassID_UserLeaveID                           GameMessageClassID = 5
	GameMessageClassID_UserStateChangeID                     GameMessageClassID = 6
	GameMessageClassID_GameStartID                           GameMessageClassID = 7
	GameMessageClassID_GameEndID                             GameMessageClassID = 8
	GameMessageClassID_UserPokerID                           GameMessageClassID = 9
	GameMessageClassID_GamePokerID                           GameMessageClassID = 10
	GameMessageClassID_UserActionCommitID                    GameMessageClassID = 11
	GameMessageClassID_AllUserActionCommitID                 GameMessageClassID = 12
	GameMessageClassID_UserRecoverID                         GameMessageClassID = 13
	GameMessageClassID_LookOnUserNotifyID                    GameMessageClassID = 14
	GameMessageClassID_UserLuckScoreID                       GameMessageClassID = 15
	GameMessageClassID_UserLuckScoreRetID                    GameMessageClassID = 16
	GameMessageClassID_GameBeginCountDownID                  GameMessageClassID = 25
	GameMessageClassID_GameBeginCountDownStopID              GameMessageClassID = 26
	GameMessageClassID_SuperToolAddChangeLogID               GameMessageClassID = 27
	GameMessageClassID_SuperToolAssignRewardID               GameMessageClassID = 28
	GameMessageClassID_SuperToolGetAssignRewardDetailID      GameMessageClassID = 29
	GameMessageClassID_SuperToolGetAssignRewardDetailRetID   GameMessageClassID = 30
	GameMessageClassID_SuperToolUpdAssignRewardDetailID      GameMessageClassID = 31
	GameMessageClassID_SuperToolGetVipUserID                 GameMessageClassID = 32
	GameMessageClassID_SuperToolGetVipUserRetID              GameMessageClassID = 33
	GameMessageClassID_SuperToolUpdVipUserID                 GameMessageClassID = 34
	GameMessageClassID_SuperToolFishGetSystemRewardDetailID  GameMessageClassID = 35
	GameMessageClassID_SuperToolFishGetSystemRewardDetailRet GameMessageClassID = 36
	GameMessageClassID_SuperToolFishUpdSystemRewardID        GameMessageClassID = 37
	GameMessageClassID_SuperToolFishUpdSystemRewardRetID     GameMessageClassID = 38
	GameMessageClassID_SuperToolFishUpdVIPUserRewardID       GameMessageClassID = 39
	GameMessageClassID_SuperToolFishUpdVIPUserRewardRetID    GameMessageClassID = 40
	GameMessageClassID_SuperToolZjhGetVipUserID              GameMessageClassID = 41
	GameMessageClassID_SuperToolZjhGetVipUserRetID           GameMessageClassID = 42
	GameMessageClassID_SuperToolZjhUpdVipUserID              GameMessageClassID = 43
	GameMessageClassID_FishSysPoolID                         GameMessageClassID = 45
	GameMessageClassID_FishSysPoolRetID                      GameMessageClassID = 46
	GameMessageClassID_FishPlayerPoolID                      GameMessageClassID = 47
	GameMessageClassID_FishPlayerPoolRetID                   GameMessageClassID = 48
	GameMessageClassID_GetBeginnerOfferID                    GameMessageClassID = 49 //取得玩家新手優惠
	GameMessageClassID_GetBeginnerOfferRetID                 GameMessageClassID = 50 //回傳玩家新手優惠
	GameMessageClassID_UpdateBeginnerOfferID                 GameMessageClassID = 51 //更新玩家新手優惠
	GameMessageClassID_GameCompetitionStartID                GameMessageClassID = 52 //參加活動, 扣金幣
	GameMessageClassID_GameCompetitionStartRetID             GameMessageClassID = 53 //回傳參加活動, 扣金幣 結果
	GameMessageClassID_GameUpdateUserJackpotBox              GameMessageClassID = 54 //jackpot寫入保險箱
	GameMessageClassID_SlotFreeSpinID                        GameMessageClassID = 55 //Slot FreeSpin紀錄 (Slot_FreeSpinDetail)
	GameMessageClassID_SlotFreeSpinRetID                     GameMessageClassID = 56 //Slot 讀取FreeSpin紀錄 (Slot_FreeSpinRead)
	GameMessageClassID_SlotFreeSpinDetailID                  GameMessageClassID = 57 //Slot 接收FreeSpin紀錄 (Slot_FreeSpinDetail)
	GameMessageClassID_SlotJackpotNoLinkID                   GameMessageClassID = 58 //Slot 非連接型Jackpot (Slot_JackpotData)
	GameMessageClassID_SlotJackpotNoLinkRetID                GameMessageClassID = 59 //Slot 讀取非連接型結果 (Slot_JackpotAllData)
	GameMessageClassID_SlotJackpotLinkID                     GameMessageClassID = 60 //Slot 連接型Jackpot (Slot_JackpotData)
	GameMessageClassID_SlotJackpotLinkRetID                  GameMessageClassID = 61 //Slot 讀取連接型Jackpot結果 (Slot_JackpotData)
	GameMessageClassID_SlotAddGameLogID                      GameMessageClassID = 62 //Slot 歷程紀錄寫入 (Slot_HistoryLogData)
	GameMessageClassID_SlotGetGameLogID                      GameMessageClassID = 63 //Slot 讀取歷程紀錄 (Slot_LoadHistoryData)
	GameMessageClassID_SlotSendGameLogID                     GameMessageClassID = 64 //Slot 傳送已讀取的歷程紀錄 (Slot_SendHistoryData)
	GameMessageClassID_ServerStatusID                        GameMessageClassID = 65 //伺服器狀態資料
	GameMessageClassID_ConsistencyDataID                     GameMessageClassID = 66 //確保注單派彩數據一制性封包
	GameMessageClassID_SyncPerGameDataID                     GameMessageClassID = 67 //同步遊戲局號從game->db->room
)

// Enum value maps for GameMessageClassID.
var (
	GameMessageClassID_name = map[int32]string{
		1:  "TestGameChatID",
		2:  "TestGameScoreID",
		3:  "TestGameEndID",
		4:  "UserEnterID",
		5:  "UserLeaveID",
		6:  "UserStateChangeID",
		7:  "GameStartID",
		8:  "GameEndID",
		9:  "UserPokerID",
		10: "GamePokerID",
		11: "UserActionCommitID",
		12: "AllUserActionCommitID",
		13: "UserRecoverID",
		14: "LookOnUserNotifyID",
		15: "UserLuckScoreID",
		16: "UserLuckScoreRetID",
		25: "GameBeginCountDownID",
		26: "GameBeginCountDownStopID",
		27: "SuperToolAddChangeLogID",
		28: "SuperToolAssignRewardID",
		29: "SuperToolGetAssignRewardDetailID",
		30: "SuperToolGetAssignRewardDetailRetID",
		31: "SuperToolUpdAssignRewardDetailID",
		32: "SuperToolGetVipUserID",
		33: "SuperToolGetVipUserRetID",
		34: "SuperToolUpdVipUserID",
		35: "SuperToolFishGetSystemRewardDetailID",
		36: "SuperToolFishGetSystemRewardDetailRet",
		37: "SuperToolFishUpdSystemRewardID",
		38: "SuperToolFishUpdSystemRewardRetID",
		39: "SuperToolFishUpdVIPUserRewardID",
		40: "SuperToolFishUpdVIPUserRewardRetID",
		41: "SuperToolZjhGetVipUserID",
		42: "SuperToolZjhGetVipUserRetID",
		43: "SuperToolZjhUpdVipUserID",
		45: "FishSysPoolID",
		46: "FishSysPoolRetID",
		47: "FishPlayerPoolID",
		48: "FishPlayerPoolRetID",
		49: "GetBeginnerOfferID",
		50: "GetBeginnerOfferRetID",
		51: "UpdateBeginnerOfferID",
		52: "GameCompetitionStartID",
		53: "GameCompetitionStartRetID",
		54: "GameUpdateUserJackpotBox",
		55: "SlotFreeSpinID",
		56: "SlotFreeSpinRetID",
		57: "SlotFreeSpinDetailID",
		58: "SlotJackpotNoLinkID",
		59: "SlotJackpotNoLinkRetID",
		60: "SlotJackpotLinkID",
		61: "SlotJackpotLinkRetID",
		62: "SlotAddGameLogID",
		63: "SlotGetGameLogID",
		64: "SlotSendGameLogID",
		65: "ServerStatusID",
		66: "ConsistencyDataID",
		67: "SyncPerGameDataID",
	}
	GameMessageClassID_value = map[string]int32{
		"TestGameChatID":                        1,
		"TestGameScoreID":                       2,
		"TestGameEndID":                         3,
		"UserEnterID":                           4,
		"UserLeaveID":                           5,
		"UserStateChangeID":                     6,
		"GameStartID":                           7,
		"GameEndID":                             8,
		"UserPokerID":                           9,
		"GamePokerID":                           10,
		"UserActionCommitID":                    11,
		"AllUserActionCommitID":                 12,
		"UserRecoverID":                         13,
		"LookOnUserNotifyID":                    14,
		"UserLuckScoreID":                       15,
		"UserLuckScoreRetID":                    16,
		"GameBeginCountDownID":                  25,
		"GameBeginCountDownStopID":              26,
		"SuperToolAddChangeLogID":               27,
		"SuperToolAssignRewardID":               28,
		"SuperToolGetAssignRewardDetailID":      29,
		"SuperToolGetAssignRewardDetailRetID":   30,
		"SuperToolUpdAssignRewardDetailID":      31,
		"SuperToolGetVipUserID":                 32,
		"SuperToolGetVipUserRetID":              33,
		"SuperToolUpdVipUserID":                 34,
		"SuperToolFishGetSystemRewardDetailID":  35,
		"SuperToolFishGetSystemRewardDetailRet": 36,
		"SuperToolFishUpdSystemRewardID":        37,
		"SuperToolFishUpdSystemRewardRetID":     38,
		"SuperToolFishUpdVIPUserRewardID":       39,
		"SuperToolFishUpdVIPUserRewardRetID":    40,
		"SuperToolZjhGetVipUserID":              41,
		"SuperToolZjhGetVipUserRetID":           42,
		"SuperToolZjhUpdVipUserID":              43,
		"FishSysPoolID":                         45,
		"FishSysPoolRetID":                      46,
		"FishPlayerPoolID":                      47,
		"FishPlayerPoolRetID":                   48,
		"GetBeginnerOfferID":                    49,
		"GetBeginnerOfferRetID":                 50,
		"UpdateBeginnerOfferID":                 51,
		"GameCompetitionStartID":                52,
		"GameCompetitionStartRetID":             53,
		"GameUpdateUserJackpotBox":              54,
		"SlotFreeSpinID":                        55,
		"SlotFreeSpinRetID":                     56,
		"SlotFreeSpinDetailID":                  57,
		"SlotJackpotNoLinkID":                   58,
		"SlotJackpotNoLinkRetID":                59,
		"SlotJackpotLinkID":                     60,
		"SlotJackpotLinkRetID":                  61,
		"SlotAddGameLogID":                      62,
		"SlotGetGameLogID":                      63,
		"SlotSendGameLogID":                     64,
		"ServerStatusID":                        65,
		"ConsistencyDataID":                     66,
		"SyncPerGameDataID":                     67,
	}
)

func (x GameMessageClassID) Enum() *GameMessageClassID {
	p := new(GameMessageClassID)
	*p = x
	return p
}

func (x GameMessageClassID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GameMessageClassID) Descriptor() protoreflect.EnumDescriptor {
	return file_Game_proto_enumTypes[0].Descriptor()
}

func (GameMessageClassID) Type() protoreflect.EnumType {
	return &file_Game_proto_enumTypes[0]
}

func (x GameMessageClassID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *GameMessageClassID) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = GameMessageClassID(num)
	return nil
}

// Deprecated: Use GameMessageClassID.Descriptor instead.
func (GameMessageClassID) EnumDescriptor() ([]byte, []int) {
	return file_Game_proto_rawDescGZIP(), []int{0}
}

var File_Game_proto protoreflect.FileDescriptor

var file_Game_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x47, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6e, 0x65,
	0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2a, 0x8a, 0x0c, 0x0a, 0x12, 0x47, 0x61, 0x6d, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x44, 0x12, 0x12, 0x0a,
	0x0e, 0x54, 0x65, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x68, 0x61, 0x74, 0x49, 0x44, 0x10,
	0x01, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x65, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x49, 0x44, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x65, 0x73, 0x74, 0x47, 0x61,
	0x6d, 0x65, 0x45, 0x6e, 0x64, 0x49, 0x44, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x73, 0x65,
	0x72, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x44, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x73,
	0x65, 0x72, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x49, 0x44, 0x10, 0x05, 0x12, 0x15, 0x0a, 0x11, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x44,
	0x10, 0x06, 0x12, 0x0f, 0x0a, 0x0b, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x49,
	0x44, 0x10, 0x07, 0x12, 0x0d, 0x0a, 0x09, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x49, 0x44,
	0x10, 0x08, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6f, 0x6b, 0x65, 0x72, 0x49,
	0x44, 0x10, 0x09, 0x12, 0x0f, 0x0a, 0x0b, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x6f, 0x6b, 0x65, 0x72,
	0x49, 0x44, 0x10, 0x0a, 0x12, 0x16, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x49, 0x44, 0x10, 0x0b, 0x12, 0x19, 0x0a, 0x15,
	0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x49, 0x44, 0x10, 0x0c, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x44, 0x10, 0x0d, 0x12, 0x16, 0x0a, 0x12, 0x4c, 0x6f,
	0x6f, 0x6b, 0x4f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x49, 0x44,
	0x10, 0x0e, 0x12, 0x13, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x75, 0x63, 0x6b, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x49, 0x44, 0x10, 0x0f, 0x12, 0x16, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x4c,
	0x75, 0x63, 0x6b, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10, 0x10, 0x12,
	0x18, 0x0a, 0x14, 0x47, 0x61, 0x6d, 0x65, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x44, 0x6f, 0x77, 0x6e, 0x49, 0x44, 0x10, 0x19, 0x12, 0x1c, 0x0a, 0x18, 0x47, 0x61, 0x6d,
	0x65, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x53,
	0x74, 0x6f, 0x70, 0x49, 0x44, 0x10, 0x1a, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x75, 0x70, 0x65, 0x72,
	0x54, 0x6f, 0x6f, 0x6c, 0x41, 0x64, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x6f, 0x67,
	0x49, 0x44, 0x10, 0x1b, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x75, 0x70, 0x65, 0x72, 0x54, 0x6f, 0x6f,
	0x6c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x44, 0x10,
	0x1c, 0x12, 0x24, 0x0a, 0x20, 0x53, 0x75, 0x70, 0x65, 0x72, 0x54, 0x6f, 0x6f, 0x6c, 0x47, 0x65,
	0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x49, 0x44, 0x10, 0x1d, 0x12, 0x27, 0x0a, 0x23, 0x53, 0x75, 0x70, 0x65, 0x72,
	0x54, 0x6f, 0x6f, 0x6c, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10, 0x1e,
	0x12, 0x24, 0x0a, 0x20, 0x53, 0x75, 0x70, 0x65, 0x72, 0x54, 0x6f, 0x6f, 0x6c, 0x55, 0x70, 0x64,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x49, 0x44, 0x10, 0x1f, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x75, 0x70, 0x65, 0x72, 0x54,
	0x6f, 0x6f, 0x6c, 0x47, 0x65, 0x74, 0x56, 0x69, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x10,
	0x20, 0x12, 0x1c, 0x0a, 0x18, 0x53, 0x75, 0x70, 0x65, 0x72, 0x54, 0x6f, 0x6f, 0x6c, 0x47, 0x65,
	0x74, 0x56, 0x69, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10, 0x21, 0x12,
	0x19, 0x0a, 0x15, 0x53, 0x75, 0x70, 0x65, 0x72, 0x54, 0x6f, 0x6f, 0x6c, 0x55, 0x70, 0x64, 0x56,
	0x69, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x10, 0x22, 0x12, 0x28, 0x0a, 0x24, 0x53, 0x75,
	0x70, 0x65, 0x72, 0x54, 0x6f, 0x6f, 0x6c, 0x46, 0x69, 0x73, 0x68, 0x47, 0x65, 0x74, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x49, 0x44, 0x10, 0x23, 0x12, 0x29, 0x0a, 0x25, 0x53, 0x75, 0x70, 0x65, 0x72, 0x54, 0x6f, 0x6f,
	0x6c, 0x46, 0x69, 0x73, 0x68, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x74, 0x10, 0x24, 0x12,
	0x22, 0x0a, 0x1e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x54, 0x6f, 0x6f, 0x6c, 0x46, 0x69, 0x73, 0x68,
	0x55, 0x70, 0x64, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49,
	0x44, 0x10, 0x25, 0x12, 0x25, 0x0a, 0x21, 0x53, 0x75, 0x70, 0x65, 0x72, 0x54, 0x6f, 0x6f, 0x6c,
	0x46, 0x69, 0x73, 0x68, 0x55, 0x70, 0x64, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10, 0x26, 0x12, 0x23, 0x0a, 0x1f, 0x53, 0x75,
	0x70, 0x65, 0x72, 0x54, 0x6f, 0x6f, 0x6c, 0x46, 0x69, 0x73, 0x68, 0x55, 0x70, 0x64, 0x56, 0x49,
	0x50, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x44, 0x10, 0x27, 0x12,
	0x26, 0x0a, 0x22, 0x53, 0x75, 0x70, 0x65, 0x72, 0x54, 0x6f, 0x6f, 0x6c, 0x46, 0x69, 0x73, 0x68,
	0x55, 0x70, 0x64, 0x56, 0x49, 0x50, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x74, 0x49, 0x44, 0x10, 0x28, 0x12, 0x1c, 0x0a, 0x18, 0x53, 0x75, 0x70, 0x65, 0x72,
	0x54, 0x6f, 0x6f, 0x6c, 0x5a, 0x6a, 0x68, 0x47, 0x65, 0x74, 0x56, 0x69, 0x70, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x10, 0x29, 0x12, 0x1f, 0x0a, 0x1b, 0x53, 0x75, 0x70, 0x65, 0x72, 0x54, 0x6f,
	0x6f, 0x6c, 0x5a, 0x6a, 0x68, 0x47, 0x65, 0x74, 0x56, 0x69, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x74, 0x49, 0x44, 0x10, 0x2a, 0x12, 0x1c, 0x0a, 0x18, 0x53, 0x75, 0x70, 0x65, 0x72, 0x54,
	0x6f, 0x6f, 0x6c, 0x5a, 0x6a, 0x68, 0x55, 0x70, 0x64, 0x56, 0x69, 0x70, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x10, 0x2b, 0x12, 0x11, 0x0a, 0x0d, 0x46, 0x69, 0x73, 0x68, 0x53, 0x79, 0x73, 0x50,
	0x6f, 0x6f, 0x6c, 0x49, 0x44, 0x10, 0x2d, 0x12, 0x14, 0x0a, 0x10, 0x46, 0x69, 0x73, 0x68, 0x53,
	0x79, 0x73, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10, 0x2e, 0x12, 0x14, 0x0a,
	0x10, 0x46, 0x69, 0x73, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x6f, 0x6f, 0x6c, 0x49,
	0x44, 0x10, 0x2f, 0x12, 0x17, 0x0a, 0x13, 0x46, 0x69, 0x73, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10, 0x30, 0x12, 0x16, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x65, 0x72,
	0x49, 0x44, 0x10, 0x31, 0x12, 0x19, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x42, 0x65, 0x67, 0x69, 0x6e,
	0x6e, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10, 0x32, 0x12,
	0x19, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x6e, 0x65,
	0x72, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x49, 0x44, 0x10, 0x33, 0x12, 0x1a, 0x0a, 0x16, 0x47, 0x61,
	0x6d, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x49, 0x44, 0x10, 0x34, 0x12, 0x1d, 0x0a, 0x19, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f,
	0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65,
	0x74, 0x49, 0x44, 0x10, 0x35, 0x12, 0x1c, 0x0a, 0x18, 0x47, 0x61, 0x6d, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4a, 0x61, 0x63, 0x6b, 0x70, 0x6f, 0x74, 0x42, 0x6f,
	0x78, 0x10, 0x36, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x6c, 0x6f, 0x74, 0x46, 0x72, 0x65, 0x65, 0x53,
	0x70, 0x69, 0x6e, 0x49, 0x44, 0x10, 0x37, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x6c, 0x6f, 0x74, 0x46,
	0x72, 0x65, 0x65, 0x53, 0x70, 0x69, 0x6e, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10, 0x38, 0x12, 0x18,
	0x0a, 0x14, 0x53, 0x6c, 0x6f, 0x74, 0x46, 0x72, 0x65, 0x65, 0x53, 0x70, 0x69, 0x6e, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x49, 0x44, 0x10, 0x39, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x6c, 0x6f, 0x74,
	0x4a, 0x61, 0x63, 0x6b, 0x70, 0x6f, 0x74, 0x4e, 0x6f, 0x4c, 0x69, 0x6e, 0x6b, 0x49, 0x44, 0x10,
	0x3a, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x6c, 0x6f, 0x74, 0x4a, 0x61, 0x63, 0x6b, 0x70, 0x6f, 0x74,
	0x4e, 0x6f, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10, 0x3b, 0x12, 0x15, 0x0a,
	0x11, 0x53, 0x6c, 0x6f, 0x74, 0x4a, 0x61, 0x63, 0x6b, 0x70, 0x6f, 0x74, 0x4c, 0x69, 0x6e, 0x6b,
	0x49, 0x44, 0x10, 0x3c, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x6c, 0x6f, 0x74, 0x4a, 0x61, 0x63, 0x6b,
	0x70, 0x6f, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10, 0x3d, 0x12, 0x14,
	0x0a, 0x10, 0x53, 0x6c, 0x6f, 0x74, 0x41, 0x64, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x6f, 0x67,
	0x49, 0x44, 0x10, 0x3e, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x6c, 0x6f, 0x74, 0x47, 0x65, 0x74, 0x47,
	0x61, 0x6d, 0x65, 0x4c, 0x6f, 0x67, 0x49, 0x44, 0x10, 0x3f, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x6c,
	0x6f, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x6f, 0x67, 0x49, 0x44, 0x10,
	0x40, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x49, 0x44, 0x10, 0x41, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x63, 0x79, 0x44, 0x61, 0x74, 0x61, 0x49, 0x44, 0x10, 0x42, 0x12, 0x15, 0x0a, 0x11,
	0x53, 0x79, 0x6e, 0x63, 0x50, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x49,
	0x44, 0x10, 0x43, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74,
	0x6f,
}

var (
	file_Game_proto_rawDescOnce sync.Once
	file_Game_proto_rawDescData = file_Game_proto_rawDesc
)

func file_Game_proto_rawDescGZIP() []byte {
	file_Game_proto_rawDescOnce.Do(func() {
		file_Game_proto_rawDescData = protoimpl.X.CompressGZIP(file_Game_proto_rawDescData)
	})
	return file_Game_proto_rawDescData
}

var file_Game_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_Game_proto_goTypes = []interface{}{
	(GameMessageClassID)(0), // 0: netproto.GameMessageClassID
}
var file_Game_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_Game_proto_init() }
func file_Game_proto_init() {
	if File_Game_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Game_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Game_proto_goTypes,
		DependencyIndexes: file_Game_proto_depIdxs,
		EnumInfos:         file_Game_proto_enumTypes,
	}.Build()
	File_Game_proto = out.File
	file_Game_proto_rawDesc = nil
	file_Game_proto_goTypes = nil
	file_Game_proto_depIdxs = nil
}
