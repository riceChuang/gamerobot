// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: GameMsg_TGW.proto

package netproto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// [訊息] 遊戲初始時所需資訊 Server to Client -> TGW_SettingID = 10001
type TGW_MSG_Setting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayLineMode    *int32                `protobuf:"varint,1,req,name=PayLineMode" json:"PayLineMode,omitempty"`      // 賠付線類型 (0.非全線, 1.全線)
	TotalPayLine   *int32                `protobuf:"varint,2,req,name=TotalPayLine" json:"TotalPayLine,omitempty"`    // 總共多少賠付線(非全線讀SlotPayLine表，全線賠付為定值)
	BetCount       []int32               `protobuf:"varint,3,rep,name=BetCount" json:"BetCount,omitempty"`            // 一次下注的數量
	BigWinStep     []int32               `protobuf:"varint,4,rep,name=BigWinStep" json:"BigWinStep,omitempty"`        // BigWin各階段演出條件
	RowCounts      *int32                `protobuf:"varint,5,opt,name=RowCounts" json:"RowCounts,omitempty"`          // 顯示結算的行數
	ReelSetting    []*TGW_ReelSetting    `protobuf:"bytes,6,rep,name=ReelSetting" json:"ReelSetting,omitempty"`       // 動態輪軸
	SymbolPayTable []*TGW_SymbolPayTable `protobuf:"bytes,7,rep,name=SymbolPayTable" json:"SymbolPayTable,omitempty"` // 符號倍率設定
	PayLines       []*TGW_PayLine        `protobuf:"bytes,8,rep,name=PayLines" json:"PayLines,omitempty"`             // 所有賠線
	MinCarryMoney  *int64                `protobuf:"varint,9,req,name=MinCarryMoney" json:"MinCarryMoney,omitempty"`  // 最小攜帶金額
	PayLineDesc    *string               `protobuf:"bytes,10,opt,name=PayLineDesc" json:"PayLineDesc,omitempty"`      // 派彩線說明文字
	PickGameDesc   *string               `protobuf:"bytes,11,opt,name=PickGameDesc" json:"PickGameDesc,omitempty"`    // 糖果遊戲說名字
}

func (x *TGW_MSG_Setting) Reset() {
	*x = TGW_MSG_Setting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_TGW_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TGW_MSG_Setting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TGW_MSG_Setting) ProtoMessage() {}

func (x *TGW_MSG_Setting) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_TGW_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TGW_MSG_Setting.ProtoReflect.Descriptor instead.
func (*TGW_MSG_Setting) Descriptor() ([]byte, []int) {
	return file_GameMsg_TGW_proto_rawDescGZIP(), []int{0}
}

func (x *TGW_MSG_Setting) GetPayLineMode() int32 {
	if x != nil && x.PayLineMode != nil {
		return *x.PayLineMode
	}
	return 0
}

func (x *TGW_MSG_Setting) GetTotalPayLine() int32 {
	if x != nil && x.TotalPayLine != nil {
		return *x.TotalPayLine
	}
	return 0
}

func (x *TGW_MSG_Setting) GetBetCount() []int32 {
	if x != nil {
		return x.BetCount
	}
	return nil
}

func (x *TGW_MSG_Setting) GetBigWinStep() []int32 {
	if x != nil {
		return x.BigWinStep
	}
	return nil
}

func (x *TGW_MSG_Setting) GetRowCounts() int32 {
	if x != nil && x.RowCounts != nil {
		return *x.RowCounts
	}
	return 0
}

func (x *TGW_MSG_Setting) GetReelSetting() []*TGW_ReelSetting {
	if x != nil {
		return x.ReelSetting
	}
	return nil
}

func (x *TGW_MSG_Setting) GetSymbolPayTable() []*TGW_SymbolPayTable {
	if x != nil {
		return x.SymbolPayTable
	}
	return nil
}

func (x *TGW_MSG_Setting) GetPayLines() []*TGW_PayLine {
	if x != nil {
		return x.PayLines
	}
	return nil
}

func (x *TGW_MSG_Setting) GetMinCarryMoney() int64 {
	if x != nil && x.MinCarryMoney != nil {
		return *x.MinCarryMoney
	}
	return 0
}

func (x *TGW_MSG_Setting) GetPayLineDesc() string {
	if x != nil && x.PayLineDesc != nil {
		return *x.PayLineDesc
	}
	return ""
}

func (x *TGW_MSG_Setting) GetPickGameDesc() string {
	if x != nil && x.PickGameDesc != nil {
		return *x.PickGameDesc
	}
	return ""
}

// [訊息] 遊戲狀態 Server to Client -> TGW_StatusID = 10002
type TGW_MSG_Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State *int32 `protobuf:"varint,1,req,name=State" json:"State,omitempty"` // 狀態
}

func (x *TGW_MSG_Status) Reset() {
	*x = TGW_MSG_Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_TGW_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TGW_MSG_Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TGW_MSG_Status) ProtoMessage() {}

func (x *TGW_MSG_Status) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_TGW_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TGW_MSG_Status.ProtoReflect.Descriptor instead.
func (*TGW_MSG_Status) Descriptor() ([]byte, []int) {
	return file_GameMsg_TGW_proto_rawDescGZIP(), []int{1}
}

func (x *TGW_MSG_Status) GetState() int32 {
	if x != nil && x.State != nil {
		return *x.State
	}
	return 0
}

// [訊息] Jackpot資訊 Server to Client -> TGW_JackpotPoolID = 10003
type TGW_MSG_JackpotPool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Money []int64 `protobuf:"varint,1,rep,name=Money" json:"Money,omitempty"` // 水池金額
}

func (x *TGW_MSG_JackpotPool) Reset() {
	*x = TGW_MSG_JackpotPool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_TGW_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TGW_MSG_JackpotPool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TGW_MSG_JackpotPool) ProtoMessage() {}

func (x *TGW_MSG_JackpotPool) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_TGW_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TGW_MSG_JackpotPool.ProtoReflect.Descriptor instead.
func (*TGW_MSG_JackpotPool) Descriptor() ([]byte, []int) {
	return file_GameMsg_TGW_proto_rawDescGZIP(), []int{2}
}

func (x *TGW_MSG_JackpotPool) GetMoney() []int64 {
	if x != nil {
		return x.Money
	}
	return nil
}

// [訊息] 下注結果 Server to Client -> TGW_BetStatusID = 10004
type TGW_MSG_BetStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret   *int32 `protobuf:"varint,1,req,name=Ret" json:"Ret,omitempty"`     // 下注狀態 0: 下注成功, -1: 用戶金額不足, -2: 下注的類型未找到, -3: 莊家不能下注, -4: 此類下注已達到上限, -5: 非下注階段, -6: 用戶金額小於下注限制
	Money *int64 `protobuf:"varint,2,req,name=Money" json:"Money,omitempty"` // 下注金額
}

func (x *TGW_MSG_BetStatus) Reset() {
	*x = TGW_MSG_BetStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_TGW_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TGW_MSG_BetStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TGW_MSG_BetStatus) ProtoMessage() {}

func (x *TGW_MSG_BetStatus) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_TGW_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TGW_MSG_BetStatus.ProtoReflect.Descriptor instead.
func (*TGW_MSG_BetStatus) Descriptor() ([]byte, []int) {
	return file_GameMsg_TGW_proto_rawDescGZIP(), []int{3}
}

func (x *TGW_MSG_BetStatus) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *TGW_MSG_BetStatus) GetMoney() int64 {
	if x != nil && x.Money != nil {
		return *x.Money
	}
	return 0
}

// [訊息] 遊戲結果 (轉出內容，中獎項目，中獎金額) Server to Client -> TGW_GameResultID = 10005
type TGW_MSG_GameResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BetMoney     *int64            `protobuf:"varint,1,req,name=BetMoney" json:"BetMoney,omitempty"`         // 下注金額
	WinMoney     *int64            `protobuf:"varint,2,req,name=WinMoney" json:"WinMoney,omitempty"`         // 贏得獎金
	FinalMoney   *int64            `protobuf:"varint,3,req,name=FinalMoney" json:"FinalMoney,omitempty"`     // 最終身上金額
	JackpotMoney *int64            `protobuf:"varint,4,req,name=JackpotMoney" json:"JackpotMoney,omitempty"` // 贏得的Jackpot金額
	ReelResult   []*TGW_ReelResult `protobuf:"bytes,5,rep,name=ReelResult" json:"ReelResult,omitempty"`      // 輪軸結果
	PayGroups    []*TGW_PayGroup   `protobuf:"bytes,6,rep,name=PayGroups" json:"PayGroups,omitempty"`        // 中獎內容，賠付線結果(派彩線)
}

func (x *TGW_MSG_GameResult) Reset() {
	*x = TGW_MSG_GameResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_TGW_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TGW_MSG_GameResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TGW_MSG_GameResult) ProtoMessage() {}

func (x *TGW_MSG_GameResult) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_TGW_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TGW_MSG_GameResult.ProtoReflect.Descriptor instead.
func (*TGW_MSG_GameResult) Descriptor() ([]byte, []int) {
	return file_GameMsg_TGW_proto_rawDescGZIP(), []int{4}
}

func (x *TGW_MSG_GameResult) GetBetMoney() int64 {
	if x != nil && x.BetMoney != nil {
		return *x.BetMoney
	}
	return 0
}

func (x *TGW_MSG_GameResult) GetWinMoney() int64 {
	if x != nil && x.WinMoney != nil {
		return *x.WinMoney
	}
	return 0
}

func (x *TGW_MSG_GameResult) GetFinalMoney() int64 {
	if x != nil && x.FinalMoney != nil {
		return *x.FinalMoney
	}
	return 0
}

func (x *TGW_MSG_GameResult) GetJackpotMoney() int64 {
	if x != nil && x.JackpotMoney != nil {
		return *x.JackpotMoney
	}
	return 0
}

func (x *TGW_MSG_GameResult) GetReelResult() []*TGW_ReelResult {
	if x != nil {
		return x.ReelResult
	}
	return nil
}

func (x *TGW_MSG_GameResult) GetPayGroups() []*TGW_PayGroup {
	if x != nil {
		return x.PayGroups
	}
	return nil
}

// [訊息] 玩家贏得 BonusGame 並取得BonusGame紀錄 Server to Client ->  TGW_BonusGameID = 10006
type TGW_MSG_BonusGame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Records  []*TGW_BonusGameRecord `protobuf:"bytes,1,rep,name=Records" json:"Records,omitempty"`    // 目前開獎順序 [{ID:1, Location:8, RewareValue: 10}, {ID:2, Location:5, RewareValue: 20}, {ID:3, Location:6, RewareValue: 10}]
	Count    *int32                 `protobuf:"varint,2,req,name=Count" json:"Count,omitempty"`       // 總共可翻次數，中獎進入BonusGame次數
	WinMoney *int64                 `protobuf:"varint,3,req,name=WinMoney" json:"WinMoney,omitempty"` // 中獎金額
	All      []int32                `protobuf:"varint,4,rep,name=All" json:"All,omitempty"`           // 所有選項內容共12比，包含Records內的資料 [10, 20, 10, 30, 10, 20, 10, 10, 20, 10, 10, 20]
}

func (x *TGW_MSG_BonusGame) Reset() {
	*x = TGW_MSG_BonusGame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_TGW_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TGW_MSG_BonusGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TGW_MSG_BonusGame) ProtoMessage() {}

func (x *TGW_MSG_BonusGame) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_TGW_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TGW_MSG_BonusGame.ProtoReflect.Descriptor instead.
func (*TGW_MSG_BonusGame) Descriptor() ([]byte, []int) {
	return file_GameMsg_TGW_proto_rawDescGZIP(), []int{5}
}

func (x *TGW_MSG_BonusGame) GetRecords() []*TGW_BonusGameRecord {
	if x != nil {
		return x.Records
	}
	return nil
}

func (x *TGW_MSG_BonusGame) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *TGW_MSG_BonusGame) GetWinMoney() int64 {
	if x != nil && x.WinMoney != nil {
		return *x.WinMoney
	}
	return 0
}

func (x *TGW_MSG_BonusGame) GetAll() []int32 {
	if x != nil {
		return x.All
	}
	return nil
}

// [訊息] 玩家Spin Client to Server -> TGW_ActionSpinID = 11001
type TGW_MSG_Spin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Money *int64 `protobuf:"varint,1,req,name=Money" json:"Money,omitempty"` // 下注金額
}

func (x *TGW_MSG_Spin) Reset() {
	*x = TGW_MSG_Spin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_TGW_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TGW_MSG_Spin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TGW_MSG_Spin) ProtoMessage() {}

func (x *TGW_MSG_Spin) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_TGW_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TGW_MSG_Spin.ProtoReflect.Descriptor instead.
func (*TGW_MSG_Spin) Descriptor() ([]byte, []int) {
	return file_GameMsg_TGW_proto_rawDescGZIP(), []int{6}
}

func (x *TGW_MSG_Spin) GetMoney() int64 {
	if x != nil && x.Money != nil {
		return *x.Money
	}
	return 0
}

// [訊息] 玩家選則BonusGame Client to Server -> TGW_ActionPickID = 12003
type TGW_MSG_Pick struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Record *TGW_BonusGameRecord `protobuf:"bytes,1,req,name=Record" json:"Record,omitempty"` // 選擇內容
}

func (x *TGW_MSG_Pick) Reset() {
	*x = TGW_MSG_Pick{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_TGW_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TGW_MSG_Pick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TGW_MSG_Pick) ProtoMessage() {}

func (x *TGW_MSG_Pick) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_TGW_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TGW_MSG_Pick.ProtoReflect.Descriptor instead.
func (*TGW_MSG_Pick) Descriptor() ([]byte, []int) {
	return file_GameMsg_TGW_proto_rawDescGZIP(), []int{7}
}

func (x *TGW_MSG_Pick) GetRecord() *TGW_BonusGameRecord {
	if x != nil {
		return x.Record
	}
	return nil
}

// [訊息] 玩家選則BonusGame Client to Server -> TGW_ActionPickRetID = 12004
type TGW_MSG_PickRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Record *TGW_BonusGameRecord `protobuf:"bytes,1,req,name=Record" json:"Record,omitempty"` // 選擇內容
}

func (x *TGW_MSG_PickRet) Reset() {
	*x = TGW_MSG_PickRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_TGW_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TGW_MSG_PickRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TGW_MSG_PickRet) ProtoMessage() {}

func (x *TGW_MSG_PickRet) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_TGW_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TGW_MSG_PickRet.ProtoReflect.Descriptor instead.
func (*TGW_MSG_PickRet) Descriptor() ([]byte, []int) {
	return file_GameMsg_TGW_proto_rawDescGZIP(), []int{8}
}

func (x *TGW_MSG_PickRet) GetRecord() *TGW_BonusGameRecord {
	if x != nil {
		return x.Record
	}
	return nil
}

// [訊息] 玩家選則BonusGame Game to DB -> TGW_ReadBonusGameID = 13001
type TGW_MSG_ReadBonusGame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID *int32 `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"` // 玩家ID
}

func (x *TGW_MSG_ReadBonusGame) Reset() {
	*x = TGW_MSG_ReadBonusGame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_TGW_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TGW_MSG_ReadBonusGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TGW_MSG_ReadBonusGame) ProtoMessage() {}

func (x *TGW_MSG_ReadBonusGame) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_TGW_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TGW_MSG_ReadBonusGame.ProtoReflect.Descriptor instead.
func (*TGW_MSG_ReadBonusGame) Descriptor() ([]byte, []int) {
	return file_GameMsg_TGW_proto_rawDescGZIP(), []int{9}
}

func (x *TGW_MSG_ReadBonusGame) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

// [訊息] 玩家選則BonusGame Game to DB -> TGW_ReadBonusGameRetID = 13002
type TGW_MSG_BonusGameRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID  *int32                 `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`  // 玩家ID
	Records []*TGW_BonusGameRecord `protobuf:"bytes,2,rep,name=Records" json:"Records,omitempty"` // 紀錄
}

func (x *TGW_MSG_BonusGameRecord) Reset() {
	*x = TGW_MSG_BonusGameRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_TGW_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TGW_MSG_BonusGameRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TGW_MSG_BonusGameRecord) ProtoMessage() {}

func (x *TGW_MSG_BonusGameRecord) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_TGW_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TGW_MSG_BonusGameRecord.ProtoReflect.Descriptor instead.
func (*TGW_MSG_BonusGameRecord) Descriptor() ([]byte, []int) {
	return file_GameMsg_TGW_proto_rawDescGZIP(), []int{10}
}

func (x *TGW_MSG_BonusGameRecord) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *TGW_MSG_BonusGameRecord) GetRecords() []*TGW_BonusGameRecord {
	if x != nil {
		return x.Records
	}
	return nil
}

// [訊息] 清除BonusGame資料 Game to DB -> TGW_ResetBonusGameID = 13003
type TGW_MSG_ResetBonusGame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID *int32 `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"` // 玩家ID
}

func (x *TGW_MSG_ResetBonusGame) Reset() {
	*x = TGW_MSG_ResetBonusGame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_TGW_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TGW_MSG_ResetBonusGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TGW_MSG_ResetBonusGame) ProtoMessage() {}

func (x *TGW_MSG_ResetBonusGame) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_TGW_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TGW_MSG_ResetBonusGame.ProtoReflect.Descriptor instead.
func (*TGW_MSG_ResetBonusGame) Descriptor() ([]byte, []int) {
	return file_GameMsg_TGW_proto_rawDescGZIP(), []int{11}
}

func (x *TGW_MSG_ResetBonusGame) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

// [訊息] 紀錄BonusGame資料 Game to DB -> TGW_RecordBonusGameID = 13004
type TGW_MSG_RecordBonusGame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID  *int32               `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`  // 玩家ID
	Records *TGW_BonusGameRecord `protobuf:"bytes,2,req,name=Records" json:"Records,omitempty"` // 紀錄
}

func (x *TGW_MSG_RecordBonusGame) Reset() {
	*x = TGW_MSG_RecordBonusGame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_TGW_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TGW_MSG_RecordBonusGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TGW_MSG_RecordBonusGame) ProtoMessage() {}

func (x *TGW_MSG_RecordBonusGame) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_TGW_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TGW_MSG_RecordBonusGame.ProtoReflect.Descriptor instead.
func (*TGW_MSG_RecordBonusGame) Descriptor() ([]byte, []int) {
	return file_GameMsg_TGW_proto_rawDescGZIP(), []int{12}
}

func (x *TGW_MSG_RecordBonusGame) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *TGW_MSG_RecordBonusGame) GetRecords() *TGW_BonusGameRecord {
	if x != nil {
		return x.Records
	}
	return nil
}

// 輪軸表演設置
type TGW_ReelSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RealID  *int32        `protobuf:"varint,1,req,name=RealID" json:"RealID,omitempty"`  // 輪軸編號
	Symbols []*TGW_Symbol `protobuf:"bytes,2,rep,name=Symbols" json:"Symbols,omitempty"` // 該輪軸群組的符號
}

func (x *TGW_ReelSetting) Reset() {
	*x = TGW_ReelSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_TGW_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TGW_ReelSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TGW_ReelSetting) ProtoMessage() {}

func (x *TGW_ReelSetting) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_TGW_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TGW_ReelSetting.ProtoReflect.Descriptor instead.
func (*TGW_ReelSetting) Descriptor() ([]byte, []int) {
	return file_GameMsg_TGW_proto_rawDescGZIP(), []int{13}
}

func (x *TGW_ReelSetting) GetRealID() int32 {
	if x != nil && x.RealID != nil {
		return *x.RealID
	}
	return 0
}

func (x *TGW_ReelSetting) GetSymbols() []*TGW_Symbol {
	if x != nil {
		return x.Symbols
	}
	return nil
}

// 輪軸結果
type TGW_ReelResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position *TGW_ReelPosition `protobuf:"bytes,1,req,name=Position" json:"Position,omitempty"` // 輪軸位置
	Symbol   *TGW_Symbol       `protobuf:"bytes,2,req,name=Symbol" json:"Symbol,omitempty"`     // 該輪軸群組的符號
	Blink    *bool             `protobuf:"varint,3,req,name=Blink" json:"Blink,omitempty"`      // 是否亮符號
}

func (x *TGW_ReelResult) Reset() {
	*x = TGW_ReelResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_TGW_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TGW_ReelResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TGW_ReelResult) ProtoMessage() {}

func (x *TGW_ReelResult) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_TGW_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TGW_ReelResult.ProtoReflect.Descriptor instead.
func (*TGW_ReelResult) Descriptor() ([]byte, []int) {
	return file_GameMsg_TGW_proto_rawDescGZIP(), []int{14}
}

func (x *TGW_ReelResult) GetPosition() *TGW_ReelPosition {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *TGW_ReelResult) GetSymbol() *TGW_Symbol {
	if x != nil {
		return x.Symbol
	}
	return nil
}

func (x *TGW_ReelResult) GetBlink() bool {
	if x != nil && x.Blink != nil {
		return *x.Blink
	}
	return false
}

// 符號
type TGW_Symbol struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SymbolID   *int32  `protobuf:"varint,1,req,name=SymbolID" json:"SymbolID,omitempty"`    // 符號ID
	SymbolName *string `protobuf:"bytes,2,req,name=SymbolName" json:"SymbolName,omitempty"` // 符號Name
}

func (x *TGW_Symbol) Reset() {
	*x = TGW_Symbol{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_TGW_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TGW_Symbol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TGW_Symbol) ProtoMessage() {}

func (x *TGW_Symbol) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_TGW_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TGW_Symbol.ProtoReflect.Descriptor instead.
func (*TGW_Symbol) Descriptor() ([]byte, []int) {
	return file_GameMsg_TGW_proto_rawDescGZIP(), []int{15}
}

func (x *TGW_Symbol) GetSymbolID() int32 {
	if x != nil && x.SymbolID != nil {
		return *x.SymbolID
	}
	return 0
}

func (x *TGW_Symbol) GetSymbolName() string {
	if x != nil && x.SymbolName != nil {
		return *x.SymbolName
	}
	return ""
}

// 符號賠率設定
type TGW_SymbolPayTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol *TGW_Symbol `protobuf:"bytes,1,req,name=Symbol" json:"Symbol,omitempty"`  // Symbol
	Count  *int32      `protobuf:"varint,2,req,name=Count" json:"Count,omitempty"`   // 連續幾個Symbol
	Type   *string     `protobuf:"bytes,3,req,name=Type" json:"Type,omitempty"`      // 獎項類型。 chip: 賠倍率, jackpot: 中jackpot, pickgame: 中bonus gamehandler
	Payout *int32      `protobuf:"varint,4,req,name=Payout" json:"Payout,omitempty"` // 該項獎勵數量。 chip: 倍率, jackpot: 最大出獎金額, pickgame: 幾pick
	Title  *string     `protobuf:"bytes,5,opt,name=Title" json:"Title,omitempty"`    // 符號在賠付表要顯示的標題
	Desc   *string     `protobuf:"bytes,6,opt,name=Desc" json:"Desc,omitempty"`      // 符號在賠付表要顯示的說明
}

func (x *TGW_SymbolPayTable) Reset() {
	*x = TGW_SymbolPayTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_TGW_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TGW_SymbolPayTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TGW_SymbolPayTable) ProtoMessage() {}

func (x *TGW_SymbolPayTable) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_TGW_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TGW_SymbolPayTable.ProtoReflect.Descriptor instead.
func (*TGW_SymbolPayTable) Descriptor() ([]byte, []int) {
	return file_GameMsg_TGW_proto_rawDescGZIP(), []int{16}
}

func (x *TGW_SymbolPayTable) GetSymbol() *TGW_Symbol {
	if x != nil {
		return x.Symbol
	}
	return nil
}

func (x *TGW_SymbolPayTable) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *TGW_SymbolPayTable) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *TGW_SymbolPayTable) GetPayout() int32 {
	if x != nil && x.Payout != nil {
		return *x.Payout
	}
	return 0
}

func (x *TGW_SymbolPayTable) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *TGW_SymbolPayTable) GetDesc() string {
	if x != nil && x.Desc != nil {
		return *x.Desc
	}
	return ""
}

// 賠線資訊
type TGW_PayLine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayLineID *int32              `protobuf:"varint,1,req,name=PayLineID" json:"PayLineID,omitempty"` // 賠線ID
	Positions []*TGW_ReelPosition `protobuf:"bytes,2,rep,name=Positions" json:"Positions,omitempty"`  // 賠線位置 [{Reel: 1, Row: 2},{Reel: 2, Row: 2},{Reel: 3, Row: 2},{Reel: 4, Row: 2},{Reel: 5, Row: 2}]
}

func (x *TGW_PayLine) Reset() {
	*x = TGW_PayLine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_TGW_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TGW_PayLine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TGW_PayLine) ProtoMessage() {}

func (x *TGW_PayLine) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_TGW_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TGW_PayLine.ProtoReflect.Descriptor instead.
func (*TGW_PayLine) Descriptor() ([]byte, []int) {
	return file_GameMsg_TGW_proto_rawDescGZIP(), []int{17}
}

func (x *TGW_PayLine) GetPayLineID() int32 {
	if x != nil && x.PayLineID != nil {
		return *x.PayLineID
	}
	return 0
}

func (x *TGW_PayLine) GetPositions() []*TGW_ReelPosition {
	if x != nil {
		return x.Positions
	}
	return nil
}

// 位置資訊
type TGW_ReelPosition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reel *int32 `protobuf:"varint,1,req,name=Reel" json:"Reel,omitempty"` // 直的軸
	Row  *int32 `protobuf:"varint,2,req,name=Row" json:"Row,omitempty"`   // 橫的列
}

func (x *TGW_ReelPosition) Reset() {
	*x = TGW_ReelPosition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_TGW_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TGW_ReelPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TGW_ReelPosition) ProtoMessage() {}

func (x *TGW_ReelPosition) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_TGW_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TGW_ReelPosition.ProtoReflect.Descriptor instead.
func (*TGW_ReelPosition) Descriptor() ([]byte, []int) {
	return file_GameMsg_TGW_proto_rawDescGZIP(), []int{18}
}

func (x *TGW_ReelPosition) GetReel() int32 {
	if x != nil && x.Reel != nil {
		return *x.Reel
	}
	return 0
}

func (x *TGW_ReelPosition) GetRow() int32 {
	if x != nil && x.Row != nil {
		return *x.Row
	}
	return 0
}

// 中獎內容，賠付線結果(派彩線)
type TGW_PayGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayLines *TGW_PayLine `protobuf:"bytes,1,req,name=PayLines" json:"PayLines,omitempty"`  // 中獎的賠線     [{Reel:1,Row:2},{Reel:2,Row:2},{Reel:3,Row:2}] , 給多少畫多少線
	WinMoney *int64       `protobuf:"varint,2,req,name=WinMoney" json:"WinMoney,omitempty"` // 這條連線中獎金額
}

func (x *TGW_PayGroup) Reset() {
	*x = TGW_PayGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_TGW_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TGW_PayGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TGW_PayGroup) ProtoMessage() {}

func (x *TGW_PayGroup) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_TGW_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TGW_PayGroup.ProtoReflect.Descriptor instead.
func (*TGW_PayGroup) Descriptor() ([]byte, []int) {
	return file_GameMsg_TGW_proto_rawDescGZIP(), []int{19}
}

func (x *TGW_PayGroup) GetPayLines() *TGW_PayLine {
	if x != nil {
		return x.PayLines
	}
	return nil
}

func (x *TGW_PayGroup) GetWinMoney() int64 {
	if x != nil && x.WinMoney != nil {
		return *x.WinMoney
	}
	return 0
}

// BonusGame 選擇位置紀錄 {ID: 1, Location: 0, Money: 100}
type TGW_BonusGameRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          *int32 `protobuf:"varint,1,req,name=ID" json:"ID,omitempty"`                   // 順序 1 開始，由小至大
	Location    *int32 `protobuf:"varint,2,req,name=Location" json:"Location,omitempty"`       // 位置 0: 未翻過, [1-12]:位置
	RewareValue *int64 `protobuf:"varint,3,req,name=RewareValue" json:"RewareValue,omitempty"` // 獎勵數量
	BonusID     *int32 `protobuf:"varint,4,opt,name=BonusID" json:"BonusID,omitempty"`         // 此次翻牌的BonusID
}

func (x *TGW_BonusGameRecord) Reset() {
	*x = TGW_BonusGameRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_TGW_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TGW_BonusGameRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TGW_BonusGameRecord) ProtoMessage() {}

func (x *TGW_BonusGameRecord) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_TGW_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TGW_BonusGameRecord.ProtoReflect.Descriptor instead.
func (*TGW_BonusGameRecord) Descriptor() ([]byte, []int) {
	return file_GameMsg_TGW_proto_rawDescGZIP(), []int{20}
}

func (x *TGW_BonusGameRecord) GetID() int32 {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return 0
}

func (x *TGW_BonusGameRecord) GetLocation() int32 {
	if x != nil && x.Location != nil {
		return *x.Location
	}
	return 0
}

func (x *TGW_BonusGameRecord) GetRewareValue() int64 {
	if x != nil && x.RewareValue != nil {
		return *x.RewareValue
	}
	return 0
}

func (x *TGW_BonusGameRecord) GetBonusID() int32 {
	if x != nil && x.BonusID != nil {
		return *x.BonusID
	}
	return 0
}

var File_GameMsg_TGW_proto protoreflect.FileDescriptor

var file_GameMsg_TGW_proto_rawDesc = []byte{
	0x0a, 0x11, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x5f, 0x54, 0x47, 0x57, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd3, 0x03,
	0x0a, 0x0f, 0x54, 0x47, 0x57, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x61, 0x79, 0x4c, 0x69, 0x6e, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0b, 0x50, 0x61, 0x79, 0x4c, 0x69, 0x6e, 0x65, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x79, 0x4c,
	0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0c, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x50, 0x61, 0x79, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x65, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x42, 0x65, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x42, 0x69, 0x67, 0x57, 0x69, 0x6e, 0x53, 0x74, 0x65,
	0x70, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x42, 0x69, 0x67, 0x57, 0x69, 0x6e, 0x53,
	0x74, 0x65, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x12, 0x3b, 0x0a, 0x0b, 0x52, 0x65, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x47, 0x57, 0x5f, 0x52, 0x65, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x0b, 0x52, 0x65, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x44,
	0x0a, 0x0e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x50, 0x61, 0x79, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x47, 0x57, 0x5f, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x50, 0x61, 0x79, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x0e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x50, 0x61, 0x79, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x50, 0x61, 0x79, 0x4c, 0x69, 0x6e, 0x65, 0x73,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x47, 0x57, 0x5f, 0x50, 0x61, 0x79, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x08, 0x50,
	0x61, 0x79, 0x4c, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x4d, 0x69, 0x6e, 0x43, 0x61,
	0x72, 0x72, 0x79, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x09, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0d,
	0x4d, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x72, 0x79, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x20, 0x0a,
	0x0b, 0x50, 0x61, 0x79, 0x4c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x73, 0x63, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x50, 0x61, 0x79, 0x4c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x73, 0x63, 0x12,
	0x22, 0x0a, 0x0c, 0x50, 0x69, 0x63, 0x6b, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x65, 0x73, 0x63, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x50, 0x69, 0x63, 0x6b, 0x47, 0x61, 0x6d, 0x65, 0x44,
	0x65, 0x73, 0x63, 0x22, 0x26, 0x0a, 0x0e, 0x54, 0x47, 0x57, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x2b, 0x0a, 0x13, 0x54,
	0x47, 0x57, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x4a, 0x61, 0x63, 0x6b, 0x70, 0x6f, 0x74, 0x50, 0x6f,
	0x6f, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x05, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x22, 0x3b, 0x0a, 0x11, 0x54, 0x47, 0x57, 0x5f,
	0x4d, 0x53, 0x47, 0x5f, 0x42, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x52, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x52, 0x65, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x05,
	0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x22, 0x80, 0x02, 0x0a, 0x12, 0x54, 0x47, 0x57, 0x5f, 0x4d, 0x53,
	0x47, 0x5f, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x42, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x08,
	0x42, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x57, 0x69, 0x6e, 0x4d,
	0x6f, 0x6e, 0x65, 0x79, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x08, 0x57, 0x69, 0x6e, 0x4d,
	0x6f, 0x6e, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x4d, 0x6f, 0x6e,
	0x65, 0x79, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0a, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x4d,
	0x6f, 0x6e, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x4a, 0x61, 0x63, 0x6b, 0x70, 0x6f, 0x74, 0x4d,
	0x6f, 0x6e, 0x65, 0x79, 0x18, 0x04, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0c, 0x4a, 0x61, 0x63, 0x6b,
	0x70, 0x6f, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x38, 0x0a, 0x0a, 0x52, 0x65, 0x65, 0x6c,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6e,
	0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x57, 0x5f, 0x52, 0x65, 0x65, 0x6c,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0a, 0x52, 0x65, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x34, 0x0a, 0x09, 0x50, 0x61, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x47, 0x57, 0x5f, 0x50, 0x61, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x09, 0x50,
	0x61, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0x90, 0x01, 0x0a, 0x11, 0x54, 0x47, 0x57,
	0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x37,
	0x0a, 0x07, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x57, 0x5f, 0x42,
	0x6f, 0x6e, 0x75, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x07,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x57, 0x69, 0x6e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x52,
	0x08, 0x57, 0x69, 0x6e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x41, 0x6c, 0x6c,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x03, 0x41, 0x6c, 0x6c, 0x22, 0x24, 0x0a, 0x0c, 0x54,
	0x47, 0x57, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x53, 0x70, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x4d,
	0x6f, 0x6e, 0x65, 0x79, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x05, 0x4d, 0x6f, 0x6e, 0x65,
	0x79, 0x22, 0x45, 0x0a, 0x0c, 0x54, 0x47, 0x57, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x50, 0x69, 0x63,
	0x6b, 0x12, 0x35, 0x0a, 0x06, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x57,
	0x5f, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x06, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0x48, 0x0a, 0x0f, 0x54, 0x47, 0x57, 0x5f,
	0x4d, 0x53, 0x47, 0x5f, 0x50, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x74, 0x12, 0x35, 0x0a, 0x06, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6e, 0x65,
	0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x57, 0x5f, 0x42, 0x6f, 0x6e, 0x75, 0x73,
	0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x06, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x22, 0x2f, 0x0a, 0x15, 0x54, 0x47, 0x57, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x52, 0x65,
	0x61, 0x64, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x22, 0x6a, 0x0a, 0x17, 0x54, 0x47, 0x57, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x42,
	0x6f, 0x6e, 0x75, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x37, 0x0a, 0x07, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x47, 0x57, 0x5f, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x47, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x07, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x22,
	0x30, 0x0a, 0x16, 0x54, 0x47, 0x57, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x52, 0x65, 0x73, 0x65, 0x74,
	0x42, 0x6f, 0x6e, 0x75, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x22, 0x6a, 0x0a, 0x17, 0x54, 0x47, 0x57, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x37, 0x0a, 0x07, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x47, 0x57, 0x5f, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x07, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x59, 0x0a,
	0x0f, 0x54, 0x47, 0x57, 0x5f, 0x52, 0x65, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x61, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x06, 0x52, 0x65, 0x61, 0x6c, 0x49, 0x44, 0x12, 0x2e, 0x0a, 0x07, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6e, 0x65, 0x74, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x57, 0x5f, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52,
	0x07, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x22, 0x8c, 0x01, 0x0a, 0x0e, 0x54, 0x47, 0x57,
	0x5f, 0x52, 0x65, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x36, 0x0a, 0x08, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x57, 0x5f, 0x52, 0x65, 0x65,
	0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x06, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x47, 0x57, 0x5f, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x06, 0x53, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x02, 0x28, 0x08,
	0x52, 0x05, 0x42, 0x6c, 0x69, 0x6e, 0x6b, 0x22, 0x48, 0x0a, 0x0a, 0x54, 0x47, 0x57, 0x5f, 0x53,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49,
	0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0xae, 0x01, 0x0a, 0x12, 0x54, 0x47, 0x57, 0x5f, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x50, 0x61, 0x79, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47, 0x57, 0x5f, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x06,
	0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x50, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x06, 0x50, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x44, 0x65, 0x73, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x65,
	0x73, 0x63, 0x22, 0x65, 0x0a, 0x0b, 0x54, 0x47, 0x57, 0x5f, 0x50, 0x61, 0x79, 0x4c, 0x69, 0x6e,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x61, 0x79, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x50, 0x61, 0x79, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x44, 0x12,
	0x38, 0x0a, 0x09, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x47,
	0x57, 0x5f, 0x52, 0x65, 0x65, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x38, 0x0a, 0x10, 0x54, 0x47, 0x57,
	0x5f, 0x52, 0x65, 0x65, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x52, 0x65, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x52, 0x65, 0x65,
	0x6c, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03,
	0x52, 0x6f, 0x77, 0x22, 0x5d, 0x0a, 0x0c, 0x54, 0x47, 0x57, 0x5f, 0x50, 0x61, 0x79, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x31, 0x0a, 0x08, 0x50, 0x61, 0x79, 0x4c, 0x69, 0x6e, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x47, 0x57, 0x5f, 0x50, 0x61, 0x79, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x08, 0x50, 0x61,
	0x79, 0x4c, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x57, 0x69, 0x6e, 0x4d, 0x6f, 0x6e,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x08, 0x57, 0x69, 0x6e, 0x4d, 0x6f, 0x6e,
	0x65, 0x79, 0x22, 0x7d, 0x0a, 0x13, 0x54, 0x47, 0x57, 0x5f, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x47,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x65, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0b, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x6f, 0x6e, 0x75, 0x73,
	0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x49,
	0x44, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f,
}

var (
	file_GameMsg_TGW_proto_rawDescOnce sync.Once
	file_GameMsg_TGW_proto_rawDescData = file_GameMsg_TGW_proto_rawDesc
)

func file_GameMsg_TGW_proto_rawDescGZIP() []byte {
	file_GameMsg_TGW_proto_rawDescOnce.Do(func() {
		file_GameMsg_TGW_proto_rawDescData = protoimpl.X.CompressGZIP(file_GameMsg_TGW_proto_rawDescData)
	})
	return file_GameMsg_TGW_proto_rawDescData
}

var file_GameMsg_TGW_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_GameMsg_TGW_proto_goTypes = []interface{}{
	(*TGW_MSG_Setting)(nil),         // 0: netproto.TGW_MSG_Setting
	(*TGW_MSG_Status)(nil),          // 1: netproto.TGW_MSG_Status
	(*TGW_MSG_JackpotPool)(nil),     // 2: netproto.TGW_MSG_JackpotPool
	(*TGW_MSG_BetStatus)(nil),       // 3: netproto.TGW_MSG_BetStatus
	(*TGW_MSG_GameResult)(nil),      // 4: netproto.TGW_MSG_GameResult
	(*TGW_MSG_BonusGame)(nil),       // 5: netproto.TGW_MSG_BonusGame
	(*TGW_MSG_Spin)(nil),            // 6: netproto.TGW_MSG_Spin
	(*TGW_MSG_Pick)(nil),            // 7: netproto.TGW_MSG_Pick
	(*TGW_MSG_PickRet)(nil),         // 8: netproto.TGW_MSG_PickRet
	(*TGW_MSG_ReadBonusGame)(nil),   // 9: netproto.TGW_MSG_ReadBonusGame
	(*TGW_MSG_BonusGameRecord)(nil), // 10: netproto.TGW_MSG_BonusGameRecord
	(*TGW_MSG_ResetBonusGame)(nil),  // 11: netproto.TGW_MSG_ResetBonusGame
	(*TGW_MSG_RecordBonusGame)(nil), // 12: netproto.TGW_MSG_RecordBonusGame
	(*TGW_ReelSetting)(nil),         // 13: netproto.TGW_ReelSetting
	(*TGW_ReelResult)(nil),          // 14: netproto.TGW_ReelResult
	(*TGW_Symbol)(nil),              // 15: netproto.TGW_Symbol
	(*TGW_SymbolPayTable)(nil),      // 16: netproto.TGW_SymbolPayTable
	(*TGW_PayLine)(nil),             // 17: netproto.TGW_PayLine
	(*TGW_ReelPosition)(nil),        // 18: netproto.TGW_ReelPosition
	(*TGW_PayGroup)(nil),            // 19: netproto.TGW_PayGroup
	(*TGW_BonusGameRecord)(nil),     // 20: netproto.TGW_BonusGameRecord
}
var file_GameMsg_TGW_proto_depIdxs = []int32{
	13, // 0: netproto.TGW_MSG_Setting.ReelSetting:type_name -> netproto.TGW_ReelSetting
	16, // 1: netproto.TGW_MSG_Setting.SymbolPayTable:type_name -> netproto.TGW_SymbolPayTable
	17, // 2: netproto.TGW_MSG_Setting.PayLines:type_name -> netproto.TGW_PayLine
	14, // 3: netproto.TGW_MSG_GameResult.ReelResult:type_name -> netproto.TGW_ReelResult
	19, // 4: netproto.TGW_MSG_GameResult.PayGroups:type_name -> netproto.TGW_PayGroup
	20, // 5: netproto.TGW_MSG_BonusGame.Records:type_name -> netproto.TGW_BonusGameRecord
	20, // 6: netproto.TGW_MSG_Pick.Record:type_name -> netproto.TGW_BonusGameRecord
	20, // 7: netproto.TGW_MSG_PickRet.Record:type_name -> netproto.TGW_BonusGameRecord
	20, // 8: netproto.TGW_MSG_BonusGameRecord.Records:type_name -> netproto.TGW_BonusGameRecord
	20, // 9: netproto.TGW_MSG_RecordBonusGame.Records:type_name -> netproto.TGW_BonusGameRecord
	15, // 10: netproto.TGW_ReelSetting.Symbols:type_name -> netproto.TGW_Symbol
	18, // 11: netproto.TGW_ReelResult.Position:type_name -> netproto.TGW_ReelPosition
	15, // 12: netproto.TGW_ReelResult.Symbol:type_name -> netproto.TGW_Symbol
	15, // 13: netproto.TGW_SymbolPayTable.Symbol:type_name -> netproto.TGW_Symbol
	18, // 14: netproto.TGW_PayLine.Positions:type_name -> netproto.TGW_ReelPosition
	17, // 15: netproto.TGW_PayGroup.PayLines:type_name -> netproto.TGW_PayLine
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_GameMsg_TGW_proto_init() }
func file_GameMsg_TGW_proto_init() {
	if File_GameMsg_TGW_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_GameMsg_TGW_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TGW_MSG_Setting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_TGW_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TGW_MSG_Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_TGW_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TGW_MSG_JackpotPool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_TGW_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TGW_MSG_BetStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_TGW_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TGW_MSG_GameResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_TGW_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TGW_MSG_BonusGame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_TGW_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TGW_MSG_Spin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_TGW_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TGW_MSG_Pick); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_TGW_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TGW_MSG_PickRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_TGW_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TGW_MSG_ReadBonusGame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_TGW_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TGW_MSG_BonusGameRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_TGW_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TGW_MSG_ResetBonusGame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_TGW_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TGW_MSG_RecordBonusGame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_TGW_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TGW_ReelSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_TGW_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TGW_ReelResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_TGW_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TGW_Symbol); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_TGW_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TGW_SymbolPayTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_TGW_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TGW_PayLine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_TGW_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TGW_ReelPosition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_TGW_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TGW_PayGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_TGW_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TGW_BonusGameRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_GameMsg_TGW_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_GameMsg_TGW_proto_goTypes,
		DependencyIndexes: file_GameMsg_TGW_proto_depIdxs,
		MessageInfos:      file_GameMsg_TGW_proto_msgTypes,
	}.Build()
	File_GameMsg_TGW_proto = out.File
	file_GameMsg_TGW_proto_rawDesc = nil
	file_GameMsg_TGW_proto_goTypes = nil
	file_GameMsg_TGW_proto_depIdxs = nil
}
