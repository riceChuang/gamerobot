// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: LobbyMsg.proto

package netproto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//lobby資訊回覆
type LobbySheetsAndGamesRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LobbySheets []*LobbySheet `protobuf:"bytes,1,rep,name=lobby_sheets,json=lobbySheets" json:"lobby_sheets,omitempty"`
}

func (x *LobbySheetsAndGamesRet) Reset() {
	*x = LobbySheetsAndGamesRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LobbyMsg_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LobbySheetsAndGamesRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LobbySheetsAndGamesRet) ProtoMessage() {}

func (x *LobbySheetsAndGamesRet) ProtoReflect() protoreflect.Message {
	mi := &file_LobbyMsg_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LobbySheetsAndGamesRet.ProtoReflect.Descriptor instead.
func (*LobbySheetsAndGamesRet) Descriptor() ([]byte, []int) {
	return file_LobbyMsg_proto_rawDescGZIP(), []int{0}
}

func (x *LobbySheetsAndGamesRet) GetLobbySheets() []*LobbySheet {
	if x != nil {
		return x.LobbySheets
	}
	return nil
}

type LobbySheet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SheetId               *int32      `protobuf:"varint,1,req,name=sheet_id,json=sheetId" json:"sheet_id,omitempty"`                                               //id
	Sort                  *int32      `protobuf:"varint,2,req,name=sort" json:"sort,omitempty"`                                                                    //頁籤順序
	TitleSourceUrl        *string     `protobuf:"bytes,3,opt,name=title_source_url,json=titleSourceUrl" json:"title_source_url,omitempty"`                         //頁籤圖片
	TitleSelectSourceType *int32      `protobuf:"varint,4,opt,name=title_select_source_type,json=titleSelectSourceType" json:"title_select_source_type,omitempty"` //選擇的頁籤動畫形式
	BackgroundSourceUrl   *int32      `protobuf:"varint,5,opt,name=background_source_url,json=backgroundSourceUrl" json:"background_source_url,omitempty"`         //背景圖
	GameHall              []*GameHall `protobuf:"bytes,6,rep,name=game_hall,json=gameHall" json:"game_hall,omitempty"`                                             //頁籤下的遊戲大廳
}

func (x *LobbySheet) Reset() {
	*x = LobbySheet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LobbyMsg_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LobbySheet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LobbySheet) ProtoMessage() {}

func (x *LobbySheet) ProtoReflect() protoreflect.Message {
	mi := &file_LobbyMsg_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LobbySheet.ProtoReflect.Descriptor instead.
func (*LobbySheet) Descriptor() ([]byte, []int) {
	return file_LobbyMsg_proto_rawDescGZIP(), []int{1}
}

func (x *LobbySheet) GetSheetId() int32 {
	if x != nil && x.SheetId != nil {
		return *x.SheetId
	}
	return 0
}

func (x *LobbySheet) GetSort() int32 {
	if x != nil && x.Sort != nil {
		return *x.Sort
	}
	return 0
}

func (x *LobbySheet) GetTitleSourceUrl() string {
	if x != nil && x.TitleSourceUrl != nil {
		return *x.TitleSourceUrl
	}
	return ""
}

func (x *LobbySheet) GetTitleSelectSourceType() int32 {
	if x != nil && x.TitleSelectSourceType != nil {
		return *x.TitleSelectSourceType
	}
	return 0
}

func (x *LobbySheet) GetBackgroundSourceUrl() int32 {
	if x != nil && x.BackgroundSourceUrl != nil {
		return *x.BackgroundSourceUrl
	}
	return 0
}

func (x *LobbySheet) GetGameHall() []*GameHall {
	if x != nil {
		return x.GameHall
	}
	return nil
}

type GameHall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId     *int32  `protobuf:"varint,1,req,name=game_id,json=gameId" json:"game_id,omitempty"`
	Sort       *int32  `protobuf:"varint,2,req,name=sort" json:"sort,omitempty"`
	HallUrl    *string `protobuf:"bytes,3,req,name=hall_url,json=hallUrl" json:"hall_url,omitempty"`           //導轉大廳的url
	ImageUrl   *string `protobuf:"bytes,4,opt,name=image_url,json=imageUrl" json:"image_url,omitempty"`        //顯示遊戲url
	IsHot      *bool   `protobuf:"varint,5,opt,name=is_hot,json=isHot" json:"is_hot,omitempty"`                //熱門
	IsNew      *bool   `protobuf:"varint,6,opt,name=is_new,json=isNew" json:"is_new,omitempty"`                //新
	IsFavorite *bool   `protobuf:"varint,7,opt,name=is_favorite,json=isFavorite" json:"is_favorite,omitempty"` //最愛
	IsMain     *bool   `protobuf:"varint,8,req,name=is_main,json=isMain" json:"is_main,omitempty"`             //是否主要廣告
	Status     *int32  `protobuf:"varint,9,req,name=status" json:"status,omitempty"`
}

func (x *GameHall) Reset() {
	*x = GameHall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LobbyMsg_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameHall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameHall) ProtoMessage() {}

func (x *GameHall) ProtoReflect() protoreflect.Message {
	mi := &file_LobbyMsg_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameHall.ProtoReflect.Descriptor instead.
func (*GameHall) Descriptor() ([]byte, []int) {
	return file_LobbyMsg_proto_rawDescGZIP(), []int{2}
}

func (x *GameHall) GetGameId() int32 {
	if x != nil && x.GameId != nil {
		return *x.GameId
	}
	return 0
}

func (x *GameHall) GetSort() int32 {
	if x != nil && x.Sort != nil {
		return *x.Sort
	}
	return 0
}

func (x *GameHall) GetHallUrl() string {
	if x != nil && x.HallUrl != nil {
		return *x.HallUrl
	}
	return ""
}

func (x *GameHall) GetImageUrl() string {
	if x != nil && x.ImageUrl != nil {
		return *x.ImageUrl
	}
	return ""
}

func (x *GameHall) GetIsHot() bool {
	if x != nil && x.IsHot != nil {
		return *x.IsHot
	}
	return false
}

func (x *GameHall) GetIsNew() bool {
	if x != nil && x.IsNew != nil {
		return *x.IsNew
	}
	return false
}

func (x *GameHall) GetIsFavorite() bool {
	if x != nil && x.IsFavorite != nil {
		return *x.IsFavorite
	}
	return false
}

func (x *GameHall) GetIsMain() bool {
	if x != nil && x.IsMain != nil {
		return *x.IsMain
	}
	return false
}

func (x *GameHall) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

//取得大廳設定配置
type GetLobbySetConfigMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VendorId *int32 `protobuf:"varint,1,req,name=vendor_id,json=vendorId" json:"vendor_id,omitempty"`
}

func (x *GetLobbySetConfigMsg) Reset() {
	*x = GetLobbySetConfigMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LobbyMsg_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLobbySetConfigMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLobbySetConfigMsg) ProtoMessage() {}

func (x *GetLobbySetConfigMsg) ProtoReflect() protoreflect.Message {
	mi := &file_LobbyMsg_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLobbySetConfigMsg.ProtoReflect.Descriptor instead.
func (*GetLobbySetConfigMsg) Descriptor() ([]byte, []int) {
	return file_LobbyMsg_proto_rawDescGZIP(), []int{3}
}

func (x *GetLobbySetConfigMsg) GetVendorId() int32 {
	if x != nil && x.VendorId != nil {
		return *x.VendorId
	}
	return 0
}

type GetLobbySetConfigMsgRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LobbyTitleImageEnable *bool `protobuf:"varint,1,req,name=lobby_title_image_enable,json=lobbyTitleImageEnable" json:"lobby_title_image_enable,omitempty"`
	EditMemberIcon        *bool `protobuf:"varint,2,req,name=edit_member_icon,json=editMemberIcon" json:"edit_member_icon,omitempty"`
	VolumeAdjust          *bool `protobuf:"varint,3,req,name=volume_adjust,json=volumeAdjust" json:"volume_adjust,omitempty"`
	FullScreen            *bool `protobuf:"varint,4,req,name=full_screen,json=fullScreen" json:"full_screen,omitempty"`
	ReturnPaltform        *bool `protobuf:"varint,5,req,name=return_paltform,json=returnPaltform" json:"return_paltform,omitempty"`
	SheetStatus           *bool `protobuf:"varint,6,req,name=sheet_status,json=sheetStatus" json:"sheet_status,omitempty"`
	RecentGame            *bool `protobuf:"varint,7,req,name=recent_game,json=recentGame" json:"recent_game,omitempty"`
	FavoriteGame          *bool `protobuf:"varint,8,req,name=favorite_game,json=favoriteGame" json:"favorite_game,omitempty"`
}

func (x *GetLobbySetConfigMsgRet) Reset() {
	*x = GetLobbySetConfigMsgRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LobbyMsg_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLobbySetConfigMsgRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLobbySetConfigMsgRet) ProtoMessage() {}

func (x *GetLobbySetConfigMsgRet) ProtoReflect() protoreflect.Message {
	mi := &file_LobbyMsg_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLobbySetConfigMsgRet.ProtoReflect.Descriptor instead.
func (*GetLobbySetConfigMsgRet) Descriptor() ([]byte, []int) {
	return file_LobbyMsg_proto_rawDescGZIP(), []int{4}
}

func (x *GetLobbySetConfigMsgRet) GetLobbyTitleImageEnable() bool {
	if x != nil && x.LobbyTitleImageEnable != nil {
		return *x.LobbyTitleImageEnable
	}
	return false
}

func (x *GetLobbySetConfigMsgRet) GetEditMemberIcon() bool {
	if x != nil && x.EditMemberIcon != nil {
		return *x.EditMemberIcon
	}
	return false
}

func (x *GetLobbySetConfigMsgRet) GetVolumeAdjust() bool {
	if x != nil && x.VolumeAdjust != nil {
		return *x.VolumeAdjust
	}
	return false
}

func (x *GetLobbySetConfigMsgRet) GetFullScreen() bool {
	if x != nil && x.FullScreen != nil {
		return *x.FullScreen
	}
	return false
}

func (x *GetLobbySetConfigMsgRet) GetReturnPaltform() bool {
	if x != nil && x.ReturnPaltform != nil {
		return *x.ReturnPaltform
	}
	return false
}

func (x *GetLobbySetConfigMsgRet) GetSheetStatus() bool {
	if x != nil && x.SheetStatus != nil {
		return *x.SheetStatus
	}
	return false
}

func (x *GetLobbySetConfigMsgRet) GetRecentGame() bool {
	if x != nil && x.RecentGame != nil {
		return *x.RecentGame
	}
	return false
}

func (x *GetLobbySetConfigMsgRet) GetFavoriteGame() bool {
	if x != nil && x.FavoriteGame != nil {
		return *x.FavoriteGame
	}
	return false
}

// 所有服务器信息
type AllHallServerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerList []*HallServerInfo `protobuf:"bytes,1,rep,name=ServerList" json:"ServerList,omitempty"`
	Area_ID    *int32            `protobuf:"varint,2,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"` // 渠道ID
}

func (x *AllHallServerInfo) Reset() {
	*x = AllHallServerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LobbyMsg_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllHallServerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllHallServerInfo) ProtoMessage() {}

func (x *AllHallServerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_LobbyMsg_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllHallServerInfo.ProtoReflect.Descriptor instead.
func (*AllHallServerInfo) Descriptor() ([]byte, []int) {
	return file_LobbyMsg_proto_rawDescGZIP(), []int{5}
}

func (x *AllHallServerInfo) GetServerList() []*HallServerInfo {
	if x != nil {
		return x.ServerList
	}
	return nil
}

func (x *AllHallServerInfo) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

// 游戏服务器列表
type HallServerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HallID         *int32  `protobuf:"varint,1,req,name=HallID" json:"HallID,omitempty"`                //游戏ID
	HallName       *string `protobuf:"bytes,2,req,name=HallName" json:"HallName,omitempty"`             //游戏名称
	Status         *string `protobuf:"bytes,3,req,name=Status" json:"Status,omitempty"`                 //状态
	Single         *int32  `protobuf:"varint,4,opt,name=Single" json:"Single,omitempty"`                //直接進入取第一個服務器進入, 0=>顯示房間列表, 1=>第一個服務器進入
	AndroidVersion *string `protobuf:"bytes,5,opt,name=AndroidVersion" json:"AndroidVersion,omitempty"` // 客戶端版本號
	IOSVersion     *string `protobuf:"bytes,6,opt,name=IOSVersion" json:"IOSVersion,omitempty"`         // 客戶端版本號
	Area_ID        *int32  `protobuf:"varint,7,opt,name=Area_ID,json=AreaID" json:"Area_ID,omitempty"`  // 渠道ID
	Port           *int32  `protobuf:"varint,8,opt,name=Port" json:"Port,omitempty"`
	ServerID       *int32  `protobuf:"varint,9,opt,name=ServerID" json:"ServerID,omitempty"`
	IPAddress      *string `protobuf:"bytes,10,opt,name=IPAddress" json:"IPAddress,omitempty"`
}

func (x *HallServerInfo) Reset() {
	*x = HallServerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LobbyMsg_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HallServerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HallServerInfo) ProtoMessage() {}

func (x *HallServerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_LobbyMsg_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HallServerInfo.ProtoReflect.Descriptor instead.
func (*HallServerInfo) Descriptor() ([]byte, []int) {
	return file_LobbyMsg_proto_rawDescGZIP(), []int{6}
}

func (x *HallServerInfo) GetHallID() int32 {
	if x != nil && x.HallID != nil {
		return *x.HallID
	}
	return 0
}

func (x *HallServerInfo) GetHallName() string {
	if x != nil && x.HallName != nil {
		return *x.HallName
	}
	return ""
}

func (x *HallServerInfo) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *HallServerInfo) GetSingle() int32 {
	if x != nil && x.Single != nil {
		return *x.Single
	}
	return 0
}

func (x *HallServerInfo) GetAndroidVersion() string {
	if x != nil && x.AndroidVersion != nil {
		return *x.AndroidVersion
	}
	return ""
}

func (x *HallServerInfo) GetIOSVersion() string {
	if x != nil && x.IOSVersion != nil {
		return *x.IOSVersion
	}
	return ""
}

func (x *HallServerInfo) GetArea_ID() int32 {
	if x != nil && x.Area_ID != nil {
		return *x.Area_ID
	}
	return 0
}

func (x *HallServerInfo) GetPort() int32 {
	if x != nil && x.Port != nil {
		return *x.Port
	}
	return 0
}

func (x *HallServerInfo) GetServerID() int32 {
	if x != nil && x.ServerID != nil {
		return *x.ServerID
	}
	return 0
}

func (x *HallServerInfo) GetIPAddress() string {
	if x != nil && x.IPAddress != nil {
		return *x.IPAddress
	}
	return ""
}

// 请求大廳服务器地址
type RequestHallServerAddrInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HallID *int32 `protobuf:"varint,1,req,name=HallID" json:"HallID,omitempty"` //游戏ID
	AreaID *int32 `protobuf:"varint,2,opt,name=AreaID" json:"AreaID,omitempty"` // 渠道ID
}

func (x *RequestHallServerAddrInfo) Reset() {
	*x = RequestHallServerAddrInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LobbyMsg_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestHallServerAddrInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestHallServerAddrInfo) ProtoMessage() {}

func (x *RequestHallServerAddrInfo) ProtoReflect() protoreflect.Message {
	mi := &file_LobbyMsg_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestHallServerAddrInfo.ProtoReflect.Descriptor instead.
func (*RequestHallServerAddrInfo) Descriptor() ([]byte, []int) {
	return file_LobbyMsg_proto_rawDescGZIP(), []int{7}
}

func (x *RequestHallServerAddrInfo) GetHallID() int32 {
	if x != nil && x.HallID != nil {
		return *x.HallID
	}
	return 0
}

func (x *RequestHallServerAddrInfo) GetAreaID() int32 {
	if x != nil && x.AreaID != nil {
		return *x.AreaID
	}
	return 0
}

// 大廳服务器地址信息
type HallServerAddr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerID  *int32  `protobuf:"varint,1,req,name=ServerID" json:"ServerID,omitempty"`  //服务器ID
	IPAddress *string `protobuf:"bytes,2,req,name=IPAddress" json:"IPAddress,omitempty"` //服务器地址
	Port      *int32  `protobuf:"varint,3,req,name=Port" json:"Port,omitempty"`          //服务器端口
	AreaID    *int32  `protobuf:"varint,4,opt,name=AreaID" json:"AreaID,omitempty"`      // 渠道ID
	StatusID  *int32  `protobuf:"varint,5,opt,name=StatusID" json:"StatusID,omitempty"`  // 0正常, 1異常重連
}

func (x *HallServerAddr) Reset() {
	*x = HallServerAddr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LobbyMsg_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HallServerAddr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HallServerAddr) ProtoMessage() {}

func (x *HallServerAddr) ProtoReflect() protoreflect.Message {
	mi := &file_LobbyMsg_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HallServerAddr.ProtoReflect.Descriptor instead.
func (*HallServerAddr) Descriptor() ([]byte, []int) {
	return file_LobbyMsg_proto_rawDescGZIP(), []int{8}
}

func (x *HallServerAddr) GetServerID() int32 {
	if x != nil && x.ServerID != nil {
		return *x.ServerID
	}
	return 0
}

func (x *HallServerAddr) GetIPAddress() string {
	if x != nil && x.IPAddress != nil {
		return *x.IPAddress
	}
	return ""
}

func (x *HallServerAddr) GetPort() int32 {
	if x != nil && x.Port != nil {
		return *x.Port
	}
	return 0
}

func (x *HallServerAddr) GetAreaID() int32 {
	if x != nil && x.AreaID != nil {
		return *x.AreaID
	}
	return 0
}

func (x *HallServerAddr) GetStatusID() int32 {
	if x != nil && x.StatusID != nil {
		return *x.StatusID
	}
	return 0
}

//
type HallInfoRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HallID []int32 `protobuf:"varint,1,rep,name=HallID" json:"HallID,omitempty"`
}

func (x *HallInfoRet) Reset() {
	*x = HallInfoRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LobbyMsg_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HallInfoRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HallInfoRet) ProtoMessage() {}

func (x *HallInfoRet) ProtoReflect() protoreflect.Message {
	mi := &file_LobbyMsg_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HallInfoRet.ProtoReflect.Descriptor instead.
func (*HallInfoRet) Descriptor() ([]byte, []int) {
	return file_LobbyMsg_proto_rawDescGZIP(), []int{9}
}

func (x *HallInfoRet) GetHallID() []int32 {
	if x != nil {
		return x.HallID
	}
	return nil
}

//todo test
type GetLobbyMsgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VendorId *int32 `protobuf:"varint,1,req,name=vendor_id,json=vendorId" json:"vendor_id,omitempty"`
}

func (x *GetLobbyMsgReq) Reset() {
	*x = GetLobbyMsgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LobbyMsg_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLobbyMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLobbyMsgReq) ProtoMessage() {}

func (x *GetLobbyMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_LobbyMsg_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLobbyMsgReq.ProtoReflect.Descriptor instead.
func (*GetLobbyMsgReq) Descriptor() ([]byte, []int) {
	return file_LobbyMsg_proto_rawDescGZIP(), []int{10}
}

func (x *GetLobbyMsgReq) GetVendorId() int32 {
	if x != nil && x.VendorId != nil {
		return *x.VendorId
	}
	return 0
}

type GetLobbyMsgRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId []int32 `protobuf:"varint,1,rep,name=game_id,json=gameId" json:"game_id,omitempty"`
}

func (x *GetLobbyMsgRes) Reset() {
	*x = GetLobbyMsgRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LobbyMsg_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLobbyMsgRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLobbyMsgRes) ProtoMessage() {}

func (x *GetLobbyMsgRes) ProtoReflect() protoreflect.Message {
	mi := &file_LobbyMsg_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLobbyMsgRes.ProtoReflect.Descriptor instead.
func (*GetLobbyMsgRes) Descriptor() ([]byte, []int) {
	return file_LobbyMsg_proto_rawDescGZIP(), []int{11}
}

func (x *GetLobbyMsgRes) GetGameId() []int32 {
	if x != nil {
		return x.GameId
	}
	return nil
}

var File_LobbyMsg_proto protoreflect.FileDescriptor

var file_LobbyMsg_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x51, 0x0a, 0x16, 0x4c, 0x6f,
	0x62, 0x62, 0x79, 0x53, 0x68, 0x65, 0x65, 0x74, 0x73, 0x41, 0x6e, 0x64, 0x47, 0x61, 0x6d, 0x65,
	0x73, 0x52, 0x65, 0x74, 0x12, 0x37, 0x0a, 0x0c, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x5f, 0x73, 0x68,
	0x65, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6e, 0x65, 0x74,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x53, 0x68, 0x65, 0x65, 0x74,
	0x52, 0x0b, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x53, 0x68, 0x65, 0x65, 0x74, 0x73, 0x22, 0x83, 0x02,
	0x0a, 0x0a, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x53, 0x68, 0x65, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x68, 0x65, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07,
	0x73, 0x68, 0x65, 0x65, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x37, 0x0a, 0x18, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x32,
	0x0a, 0x15, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x62,
	0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55,
	0x72, 0x6c, 0x12, 0x2f, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x68, 0x61, 0x6c, 0x6c, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x47, 0x61, 0x6d, 0x65, 0x48, 0x61, 0x6c, 0x6c, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x48,
	0x61, 0x6c, 0x6c, 0x22, 0xef, 0x01, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x48, 0x61, 0x6c, 0x6c,
	0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x68, 0x61, 0x6c, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x07, 0x68, 0x61, 0x6c, 0x6c, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x68, 0x6f, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x48, 0x6f, 0x74, 0x12, 0x15, 0x0a, 0x06,
	0x69, 0x73, 0x5f, 0x6e, 0x65, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73,
	0x4e, 0x65, 0x77, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69,
	0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x46, 0x61, 0x76, 0x6f,
	0x72, 0x69, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6d, 0x61, 0x69, 0x6e, 0x18,
	0x08, 0x20, 0x02, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4d, 0x61, 0x69, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x33, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x62, 0x62,
	0x79, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x73, 0x67, 0x12, 0x1b, 0x0a,
	0x09, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x08, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x49, 0x64, 0x22, 0xd4, 0x02, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x4d, 0x73, 0x67, 0x52, 0x65, 0x74, 0x12, 0x37, 0x0a, 0x18, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x5f,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x52, 0x15, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x28, 0x0a, 0x10, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69,
	0x63, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x02, 0x28, 0x08, 0x52, 0x0e, 0x65, 0x64, 0x69, 0x74, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x76, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x5f, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x08,
	0x52, 0x0c, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x18, 0x04, 0x20,
	0x02, 0x28, 0x08, 0x52, 0x0a, 0x66, 0x75, 0x6c, 0x6c, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x12,
	0x27, 0x0a, 0x0f, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x70, 0x61, 0x6c, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x18, 0x05, 0x20, 0x02, 0x28, 0x08, 0x52, 0x0e, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x50, 0x61, 0x6c, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x68, 0x65, 0x65,
	0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x02, 0x28, 0x08, 0x52, 0x0b,
	0x73, 0x68, 0x65, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x72,
	0x65, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x02, 0x28, 0x08,
	0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20,
	0x02, 0x28, 0x08, 0x52, 0x0c, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x47, 0x61, 0x6d,
	0x65, 0x22, 0x66, 0x0a, 0x11, 0x41, 0x6c, 0x6c, 0x48, 0x61, 0x6c, 0x6c, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x38, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6e, 0x65, 0x74,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x61, 0x6c, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61, 0x5f, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0xa3, 0x02, 0x0a, 0x0e, 0x48, 0x61,
	0x6c, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06,
	0x48, 0x61, 0x6c, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x48, 0x61,
	0x6c, 0x6c, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x48, 0x61, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x48, 0x61, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65,
	0x12, 0x26, 0x0a, 0x0e, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x4f, 0x53, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x49, 0x4f,
	0x53, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x41, 0x72, 0x65, 0x61,
	0x5f, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49,
	0x44, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22,
	0x4b, 0x0a, 0x19, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x61, 0x6c, 0x6c, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06,
	0x48, 0x61, 0x6c, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x48, 0x61,
	0x6c, 0x6c, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0x92, 0x01, 0x0a,
	0x0e, 0x48, 0x61, 0x6c, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x49,
	0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09,
	0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x6f, 0x72,
	0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41,
	0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49,
	0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49,
	0x44, 0x22, 0x25, 0x0a, 0x0b, 0x48, 0x61, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x48, 0x61, 0x6c, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x06, 0x48, 0x61, 0x6c, 0x6c, 0x49, 0x44, 0x22, 0x2d, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4c,
	0x6f, 0x62, 0x62, 0x79, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x65,
	0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x76,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x29, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4c, 0x6f,
	0x62, 0x62, 0x79, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65,
	0x49, 0x64, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f,
}

var (
	file_LobbyMsg_proto_rawDescOnce sync.Once
	file_LobbyMsg_proto_rawDescData = file_LobbyMsg_proto_rawDesc
)

func file_LobbyMsg_proto_rawDescGZIP() []byte {
	file_LobbyMsg_proto_rawDescOnce.Do(func() {
		file_LobbyMsg_proto_rawDescData = protoimpl.X.CompressGZIP(file_LobbyMsg_proto_rawDescData)
	})
	return file_LobbyMsg_proto_rawDescData
}

var file_LobbyMsg_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_LobbyMsg_proto_goTypes = []interface{}{
	(*LobbySheetsAndGamesRet)(nil),    // 0: netproto.LobbySheetsAndGamesRet
	(*LobbySheet)(nil),                // 1: netproto.LobbySheet
	(*GameHall)(nil),                  // 2: netproto.GameHall
	(*GetLobbySetConfigMsg)(nil),      // 3: netproto.GetLobbySetConfigMsg
	(*GetLobbySetConfigMsgRet)(nil),   // 4: netproto.GetLobbySetConfigMsgRet
	(*AllHallServerInfo)(nil),         // 5: netproto.AllHallServerInfo
	(*HallServerInfo)(nil),            // 6: netproto.HallServerInfo
	(*RequestHallServerAddrInfo)(nil), // 7: netproto.RequestHallServerAddrInfo
	(*HallServerAddr)(nil),            // 8: netproto.HallServerAddr
	(*HallInfoRet)(nil),               // 9: netproto.HallInfoRet
	(*GetLobbyMsgReq)(nil),            // 10: netproto.GetLobbyMsgReq
	(*GetLobbyMsgRes)(nil),            // 11: netproto.GetLobbyMsgRes
}
var file_LobbyMsg_proto_depIdxs = []int32{
	1, // 0: netproto.LobbySheetsAndGamesRet.lobby_sheets:type_name -> netproto.LobbySheet
	2, // 1: netproto.LobbySheet.game_hall:type_name -> netproto.GameHall
	6, // 2: netproto.AllHallServerInfo.ServerList:type_name -> netproto.HallServerInfo
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_LobbyMsg_proto_init() }
func file_LobbyMsg_proto_init() {
	if File_LobbyMsg_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_LobbyMsg_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LobbySheetsAndGamesRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_LobbyMsg_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LobbySheet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_LobbyMsg_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameHall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_LobbyMsg_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLobbySetConfigMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_LobbyMsg_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLobbySetConfigMsgRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_LobbyMsg_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllHallServerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_LobbyMsg_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HallServerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_LobbyMsg_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestHallServerAddrInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_LobbyMsg_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HallServerAddr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_LobbyMsg_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HallInfoRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_LobbyMsg_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLobbyMsgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_LobbyMsg_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLobbyMsgRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_LobbyMsg_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_LobbyMsg_proto_goTypes,
		DependencyIndexes: file_LobbyMsg_proto_depIdxs,
		MessageInfos:      file_LobbyMsg_proto_msgTypes,
	}.Build()
	File_LobbyMsg_proto = out.File
	file_LobbyMsg_proto_rawDesc = nil
	file_LobbyMsg_proto_goTypes = nil
	file_LobbyMsg_proto_depIdxs = nil
}
