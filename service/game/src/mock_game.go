// Code generated by MockGen. DO NOT EDIT.
// Source: game.go

// Package src is a generated GoMock package.
package src

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockGameLogicBase is a mock of GameLogicBase interface.
type MockGameLogicBase struct {
	ctrl     *gomock.Controller
	recorder *MockGameLogicBaseMockRecorder
}

// MockGameLogicBaseMockRecorder is the mock recorder for MockGameLogicBase.
type MockGameLogicBaseMockRecorder struct {
	mock *MockGameLogicBase
}

// NewMockGameLogicBase creates a new mock instance.
func NewMockGameLogicBase(ctrl *gomock.Controller) *MockGameLogicBase {
	mock := &MockGameLogicBase{ctrl: ctrl}
	mock.recorder = &MockGameLogicBaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGameLogicBase) EXPECT() *MockGameLogicBaseMockRecorder {
	return m.recorder
}

// GameName mocks base method.
func (m *MockGameLogicBase) GameName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GameName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GameName indicates an expected call of GameName.
func (mr *MockGameLogicBaseMockRecorder) GameName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GameName", reflect.TypeOf((*MockGameLogicBase)(nil).GameName))
}
